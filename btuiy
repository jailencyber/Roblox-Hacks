-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-12 20:31:31
-- Luau version 6, Types version 3
-- Time taken: 0.000948 seconds

local ShopService_upvr = require(game.ReplicatedStorage.ShopService)
while not ShopService_upvr:GetIfInitialized() do
	task.wait()
end
local DEFAULT_FEATURED_FRUITS_upvr = require(script.DEFAULT_FEATURED_FRUITS)
local function var2_upvw(arg1, arg2) -- Line 10
	--[[ Upvalues[3]:
		[1]: DEFAULT_FEATURED_FRUITS_upvr (readonly)
		[2]: ShopService_upvr (readonly)
		[3]: var2_upvw (read and write)
	]]
	local var5 = DEFAULT_FEATURED_FRUITS_upvr
	local module = {}
	for i in var5:gmatch("[^,]+") do
		local any_gsub_result1 = i:gsub("[^%w%-]", "")
		if any_gsub_result1:gsub("[%p%c%s]", ""):len() ~= 0 then
			if not ShopService_upvr:GetLegacyRobuxItems()[`Permanent {any_gsub_result1}`] then
				warn("Unknown fruit", any_gsub_result1)
			else
				table.insert(module, any_gsub_result1)
			end
		end
	end
	if #module == 0 and not arg2 then
		return var2_upvw(DEFAULT_FEATURED_FRUITS_upvr, true)
	end
	if arg2 then
		i = debug.traceback()
		warn("FATAL", var5, i)
	end
	return module
end
return var2_upvw
-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-12 20:31:11
-- Luau version 6, Types version 3
-- Time taken: 0.001032 seconds

local ShopService_upvr = require(game.ReplicatedStorage.ShopService)
while not ShopService_upvr:GetIfInitialized() do
	task.wait()
end
local DEFAULT_FEATURED_FRUITS_upvr = require(script.DEFAULT_FEATURED_FRUITS)
local function var2_upvw(arg1, arg2) -- Line 10
	--[[ Upvalues[3]:
		[1]: DEFAULT_FEATURED_FRUITS_upvr (readonly)
		[2]: ShopService_upvr (readonly)
		[3]: var2_upvw (read and write)
	]]
	local var5 = DEFAULT_FEATURED_FRUITS_upvr
	local module = {}
	for i in var5:gmatch("[^,]+") do
		local any_gsub_result1 = i:gsub("[^%w%-]", "")
		if any_gsub_result1:gsub("[%p%c%s]", ""):len() ~= 0 then
			if not ShopService_upvr:GetLegacyRobuxItems()[`Permanent {any_gsub_result1}`] then
				warn("Unknown fruit", any_gsub_result1)
			else
				table.insert(module, any_gsub_result1)
			end
		end
	end
	if #module == 0 and not arg2 then
		return var2_upvw(DEFAULT_FEATURED_FRUITS_upvr, true)
	end
	if arg2 then
		i = debug.traceback()
		warn("FATAL", var5, i)
	end
	return module
end
return var2_upvw
-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-12 20:28:36
-- Luau version 6, Types version 3
-- Time taken: 0.000200 seconds

return require(script.Parent.Parent:WaitForChild("FruitShopAndDealer").Controller)
-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-12 20:28:19
-- Luau version 6, Types version 3
-- Time taken: 0.248947 seconds

-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
local TweenService_upvr = game:GetService("TweenService")
local GuiService_upvr = game:GetService("GuiService")
local StarterGui_upvr = game:GetService("StarterGui")
local LastInput_upvr = require(game.ReplicatedStorage.Modules.LastInput)
local Flags_upvr = require(game.ReplicatedStorage.Modules.Flags)
local Asset = game.ReplicatedStorage.Modules.Asset
local GetDisplayName_upvr = require(Asset.GetDisplayName)
local GetFeaturedFruits_upvr = require(Asset.GetFeaturedFruits)
local ImageUtil = Asset.ImageUtil
local ImageUtil_2_upvr = require(ImageUtil)
local var1434_upvw
if _G.CurrentWorld ~= "Main" then
	ImageUtil = false
else
	ImageUtil = true
end
local CurrentCamera_upvr = workspace.CurrentCamera
local CFrame_upvw = CurrentCamera_upvr.CFrame
task.defer(function() -- Line 19
	--[[ Upvalues[1]:
		[1]: CFrame_upvw (read and write)
	]]
	local var64_upvw
	var64_upvw = game.Players.LocalPlayer.ChildAdded:Connect(function(arg1) -- Line 20
		--[[ Upvalues[2]:
			[1]: var64_upvw (read and write)
			[2]: CFrame_upvw (copied, read and write)
		]]
		if arg1.Name == "NextSpawn" then
			var64_upvw:Disconnect()
			arg1.Changed:Connect(function() -- Line 23
				--[[ Upvalues[2]:
					[1]: arg1 (readonly)
					[2]: CFrame_upvw (copied, read and write)
				]]
				if arg1.Value ~= CFrame.identity then
					CFrame_upvw = arg1.Value
				end
			end)
		end
	end)
end)
local var66_upvw = false
local function fixcam_upvr(arg1) -- Line 33, Named "fixcam"
	--[[ Upvalues[3]:
		[1]: CurrentCamera_upvr (readonly)
		[2]: var66_upvw (read and write)
		[3]: CFrame_upvw (read and write)
	]]
	local CameraSubject = CurrentCamera_upvr.CameraSubject
	if CameraSubject and CameraSubject:IsA("Humanoid") and not CameraSubject.RootPart then
		var66_upvw = true
		while not CameraSubject.RootPart do
			CurrentCamera_upvr.CameraType = "Scriptable"
			CurrentCamera_upvr.CFrame = CFrame_upvw
			task.wait()
			if CurrentCamera_upvr.CameraSubject ~= CameraSubject then
				var66_upvw = false
				return
			end
		end
		var66_upvw = false
		CurrentCamera_upvr.CameraType = Enum.CameraType.Custom
	end
end
CurrentCamera_upvr:GetPropertyChangedSignal("CameraType"):Connect(function() -- Line 55
	--[[ Upvalues[1]:
		[1]: fixcam_upvr (readonly)
	]]
	fixcam_upvr("CameraType")
end)
CurrentCamera_upvr:GetPropertyChangedSignal("CameraSubject"):Connect(function() -- Line 56
	--[[ Upvalues[1]:
		[1]: fixcam_upvr (readonly)
	]]
	fixcam_upvr("CameraSubject")
end)
if ImageUtil then
	spawn(function() -- Line 59
		--[[ Upvalues[1]:
			[1]: StarterGui_upvr (readonly)
		]]
		repeat
			task.wait()
		until pcall(function() -- Line 62
			--[[ Upvalues[1]:
				[1]: StarterGui_upvr (copied, readonly)
			]]
			StarterGui_upvr:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
		end)
	end)
end
task.spawn(function() -- Line 68
	--[[ Upvalues[1]:
		[1]: StarterGui_upvr (readonly)
	]]
	repeat
		task.wait()
	until pcall(function() -- Line 71
		--[[ Upvalues[1]:
			[1]: StarterGui_upvr (copied, readonly)
		]]
		StarterGui_upvr:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
	end)
end)
task.wait(0.1)
local LocalPlayer_upvr = game.Players.LocalPlayer
local PlayerGui_upvr = LocalPlayer_upvr:WaitForChild("PlayerGui")
local var76_upvw
local Parent_upvr_2 = script.Parent
local AwakeningToggler_upvr = Parent_upvr_2:WaitForChild("AwakeningToggler")
local Titles_upvr = Parent_upvr_2:WaitForChild("Titles")
local Colors_upvr = Parent_upvr_2:WaitForChild("Colors")
local Allies_upvr = Parent_upvr_2:WaitForChild("Allies")
local MobileRage_upvr = PlayerGui_upvr:WaitForChild("HUDNoInset"):WaitForChild("MobileRage")
local Remotes_upvr = game.ReplicatedStorage:WaitForChild("Remotes")
local module_3_upvr = require(game.ReplicatedStorage:WaitForChild("Notification"))
local module_upvr_2 = require(game.ReplicatedStorage:WaitForChild("GuideModule"))
task.spawn(require(script.Inventory).Start)
local Skins_upvr = require(script.Skins)
task.spawn(Skins_upvr.Start)
local Skills_3_upvr = require(script.Inventory.Skills)
local Net_upvr = require(game.ReplicatedStorage.Modules.Net)
local MobileUIController_upvr = require(game.ReplicatedStorage.Controllers.UI.MobileUIController)
local IsMobile_upvr = require(game.ReplicatedStorage.Modules.LastInput).IsMobile
local Text_upvr = require(game.ReplicatedStorage.Modules.Util.Text)
local AnalyticsClient_upvr = require(game.ReplicatedStorage.Controllers.AnalyticsClient)
local SkinUtil_upvr = require(game.ReplicatedStorage.Modules.SkinUtil)
function _G.buyRobuxShop(arg1, arg2) -- Line 120
	--[[ Upvalues[1]:
		[1]: Remotes_upvr (readonly)
	]]
	local tbl_35 = {}
	tbl_35.StorageName = arg1
	tbl_35.PurchaseLocation = arg2
	local var95
	if arg2 == "Shop" then
		var95 = "Shop"
	else
		var95 = nil
	end
	tbl_35.FunnelId = var95
	var95 = Remotes_upvr.CommF_:InvokeServer("buyRobuxShop", tbl_35)
	return var95
end
local function _(arg1) -- Line 130, Named "raceName"
	local var96
	if var96 == "Skypiea" then
		var96 = "Angel"
	end
	if var96 == "Fishman" then
		var96 = "Shark"
	end
	if var96 == "Mink" then
		var96 = "Rabbit"
	end
	return var96
end
local Spritesheets_upvr = require(script.Inventory.Spritesheets)
function ApplySprite(arg1, arg2) -- Line 138
	--[[ Upvalues[1]:
		[1]: Spritesheets_upvr (readonly)
	]]
	for i, v in pairs(Spritesheets_upvr) do
		for i_2, v_2 in pairs(v) do
			if i_2 == arg2:gsub(':', "").."1.png" then
				arg1.Image = i
				arg1.ImageRectOffset = Vector2.new(v_2[1], v_2[2])
				arg1.ImageRectSize = Vector2.new(v_2[3], v_2[4])
				return
			end
		end
	end
end
function StarsUntilLevel(arg1, arg2, arg3, arg4) -- Line 152
	-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
	local var112
	if 600 < var112 then
		var112 = 600
	end
	if var112 <= arg1 then
		return 0
	end
	local var113 = math.pow(arg4, 1.1) * 20
	local var114 = var113 % 100
	if 50 <= var114 then
	else
	end
	if game:GetService("CollectionService"):HasTag(game.Players.LocalPlayer, "DoubleMastery") then
	end
	for _ = arg1, var112 - 1 do
		local var116
	end
	return math.ceil((var116) / (((var113) + (100 - var114) - var114) * 2))
end
local UserInputService_upvr = game:GetService("UserInputService")
_G.mobileSelection = nil
_G.mobileSelectionFrame = nil
local function _(arg1) -- Line 183, Named "fruitName"
	if arg1 == "" then
		return "Fruitless"
	end
	if arg1:match("^Permanent %a+%-%a+") then
	end
	local string_match_result1_9 = string.match(arg1, "(((%u)%-?)([^-.]+))$")
	if string_match_result1_9 then
		return "Permanent "..string_match_result1_9
	end
	return arg1
end
function BuffLevel(arg1, arg2, arg3, arg4) -- Line 199
	for _ = 1, math.min(arg2.Level, arg4) do
		if (0 + 1) % 1000 == 0 then
			task.wait()
		end
	end
end
local var121_upvw
local var122_upvw = false
Remotes_upvr.CommE.OnClientEvent:Connect(function(arg1, arg2) -- Line 229
	--[[ Upvalues[6]:
		[1]: Skills_3_upvr (readonly)
		[2]: var121_upvw (read and write)
		[3]: var122_upvw (read and write)
		[4]: PlayerGui_upvr (readonly)
		[5]: Parent_upvr_2 (readonly)
		[6]: Remotes_upvr (readonly)
	]]
	if arg1 == "RefreshToolSetup" then
		local _G_Encode_result1 = _G.Encode(arg2)
		if _G_Encode_result1 and _G_Encode_result1.Parent and _G_Encode_result1.Parent == game.Players.LocalPlayer.Character then
			local var167 = Skills_3_upvr[_G_Encode_result1.Name]
			if var167 then
				var121_upvw(_G_Encode_result1, var167[1], var167[2])
			end
		end
	else
		if arg1 ~= "GiveRestore" or var122_upvw then return end
		var122_upvw = true
		pcall(function() -- Line 246
			--[[ Upvalues[1]:
				[1]: PlayerGui_upvr (copied, readonly)
			]]
			PlayerGui_upvr.LoadingScreen:Destroy()
		end)
		if typeof(arg2.Old.Date) == "number" then
		else
		end
		if not arg2.Old.Fruit or arg2.Old.Fruit == "" then
		else
			local var169
			local Fruit_4 = var169.Fruit
			if Fruit_4 == "" then
			else
				var169 = ""
				if Fruit_4:match("^Permanent %a+%-%a+") then
					var169 = "Permanent "
				end
				if string.match(Fruit_4, "(((%u)%-?)([^-.]+))$") then
				else
				end
			end
		end
		Parent_upvr_2.DataRestore.Container.List.Restore.TextLabel.Text = "Restore data to (%s | Level %s | %s)":format("Unknown Date", arg2.Old.Level, Fruit_4)
		if arg2.New.Level < arg2.Old.Level then
			local TextLabel = Parent_upvr_2.DataRestore.Container.List.Restore.TextLabel
			TextLabel.Text ..= " <font color=\"#FFFF00\">★Recommended★</font>"
		else
			local TextLabel_2 = Parent_upvr_2.DataRestore.Container.List.Update.TextLabel
			TextLabel_2.Text ..= " <font color=\"#FFFF00\">★Recommended★</font>"
			Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible = false
			Parent_upvr_2.DataRestore.Container.List.Update.Button.TextLabel.Visible = true
		end
		Parent_upvr_2.DataRestore.Container.List.Restore.Button.Activated:Connect(function() -- Line 262
			--[[ Upvalues[1]:
				[1]: Parent_upvr_2 (copied, readonly)
			]]
			Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible = true
			Parent_upvr_2.DataRestore.Container.List.Update.Button.TextLabel.Visible = false
		end)
		Parent_upvr_2.DataRestore.Container.List.Update.Button.Activated:Connect(function() -- Line 267
			--[[ Upvalues[1]:
				[1]: Parent_upvr_2 (copied, readonly)
			]]
			Parent_upvr_2.DataRestore.Container.List.Update.Button.TextLabel.Visible = true
			Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible = false
		end)
		local List_upvr_2 = Parent_upvr_2.DataRestore2.Container.List
		local function UpdateRestoreGui_upvr() -- Line 274, Named "UpdateRestoreGui"
			--[[ Upvalues[3]:
				[1]: arg2 (readonly)
				[2]: Parent_upvr_2 (copied, readonly)
				[3]: List_upvr_2 (readonly)
			]]
			-- KONSTANTERROR: [0] 1. Error Block 76 start (CF ANALYSIS FAILED)
			local var178 = {
				Level = arg2.Old.Level;
				Exp = arg2.Old.Exp;
				Fruit = arg2.Old.Fruit;
			}
			local var180 = {
				Level = arg2.New.Level;
				Exp = arg2.New.Exp;
				Fruit = arg2.New.Fruit;
			}
			if Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible then
				var180 = var178
				var178 = var180
			end
			List_upvr_2.Level.Text = "Level: %s -> %s":format(var180.Level, BuffLevel(var180, var178, require(game.ReplicatedStorage.EXPFunction), 2600))
			if Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible then
				List_upvr_2.Subtitle.Text = "Restoring Using Old Data"
			else
				List_upvr_2.Subtitle.Text = "Buffing Current Data"
			end
			if var178.Fruit ~= var180.Fruit and var178.Fruit then
				local var181
				if var178.Fruit ~= "" then
					local Fruit_3 = var178.Fruit
					local var183
					if Fruit_3 == "" then
						var181 = "Fruitless"
					else
						var183 = ""
						if Fruit_3:match("^Permanent %a+%-%a+") then
							var183 = "Permanent "
						end
						local string_match_result1_4 = string.match(Fruit_3, "(((%u)%-?)([^-.]+))$")
						if string_match_result1_4 then
							var181 = var183..string_match_result1_4
						else
							var181 = Fruit_3
						end
					end
					List_upvr_2.Fruit.Text = "Blox Fruit: %s added to storage":format(var181)
					return
				end
			end
			if var178.Fruit ~= "" then
				-- KONSTANTWARNING: GOTO [206] #142
			end
			-- KONSTANTERROR: [0] 1. Error Block 76 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [181] 121. Error Block 68 start (CF ANALYSIS FAILED)
			if var178.Fruit == "" then
				-- KONSTANTWARNING: GOTO [206] #142
			end
			-- KONSTANTERROR: [181] 121. Error Block 68 end (CF ANALYSIS FAILED)
		end
		Parent_upvr_2.DataRestore.Info.Exit.Activated:Connect(function() -- Line 311
			--[[ Upvalues[2]:
				[1]: UpdateRestoreGui_upvr (readonly)
				[2]: Parent_upvr_2 (copied, readonly)
			]]
			UpdateRestoreGui_upvr()
			Parent_upvr_2.DataRestore.Visible = false
			Parent_upvr_2.DataRestore2.Visible = true
		end)
		Parent_upvr_2.DataRestore2.Info.Back.Activated:Connect(function() -- Line 317
			--[[ Upvalues[1]:
				[1]: Parent_upvr_2 (copied, readonly)
			]]
			Parent_upvr_2.DataRestore.Visible = true
			Parent_upvr_2.DataRestore2.Visible = false
		end)
		Parent_upvr_2.DataRestore2.Info.Confirm.Activated:Connect(function() -- Line 322
			--[[ Upvalues[2]:
				[1]: Parent_upvr_2 (copied, readonly)
				[2]: Remotes_upvr (copied, readonly)
			]]
			Parent_upvr_2.DataRestore2.Visible = false
			local var188
			if Parent_upvr_2.DataRestore.Container.List.Restore.Button.TextLabel.Visible then
				var188 = 1
			else
				var188 = 2
			end
			Remotes_upvr.CommF_:InvokeServer("AcceptRestore", var188)
		end)
		for _, v_3_upvr in pairs(Parent_upvr_2:GetChildren()) do
			var169 = v_3_upvr.Name
			if var169 ~= "DataRestore" then
				var169 = v_3_upvr.Name
				if var169 ~= "DataRestore2" then
					var169 = pcall
					var169(function() -- Line 330
						--[[ Upvalues[1]:
							[1]: v_3_upvr (readonly)
						]]
						v_3_upvr.Visible = false
					end)
				end
			end
		end
		Parent_upvr_2.DataRestore.Visible = true
	end
end)
if script:GetAttribute("Restoring") then
else
	local var193_upvw
	local tbl_29_upvr = {
		["Blox Fruit"] = {Vector2.new(0, 0), Color3.fromRGB(235, 205, 255), Color3.fromRGB(205, 125, 255)};
		Gun = {Vector2.new(376, 0), Color3.fromRGB(255, 245, 205), Color3.fromRGB(255, 217, 65)};
		Melee = {Vector2.new(0, 376), Color3.fromRGB(255, 205, 205), Color3.fromRGB(255, 123, 123)};
		Sword = {Vector2.new(376, 376), Color3.fromRGB(221, 255, 205), Color3.fromRGB(141, 255, 92)};
	}
	local var199_upvw
	local var200_upvw
	local var201_upvw
	local var202_upvw
	local var203_upvw
	local function _(arg1) -- Line 354, Named "reflectInputTypeForSkill"
		--[[ Upvalues[1]:
			[1]: LastInput_upvr (readonly)
		]]
		local var204
		if LastInput_upvr:Get() ~= "Gamepad" then
			var204 = false
		else
			var204 = true
		end
		arg1.Key.Visible = not var204
		arg1.GamepadKey.Visible = var204
	end
	local function inputTypeChanged() -- Line 361
		--[[ Upvalues[2]:
			[1]: Parent_upvr_2 (readonly)
			[2]: LastInput_upvr (readonly)
		]]
		for _, v_4 in Parent_upvr_2.Skills:GetChildren() do
			if v_4:GetAttribute("SkillsContainer") then
				for _, v_5 in v_4:GetChildren() do
					local var219
					if v_5:FindFirstChild("GamepadKey") then
						if LastInput_upvr:Get() ~= "Gamepad" then
							var219 = false
						else
							var219 = true
						end
						v_5.Key.Visible = not var219
						v_5.GamepadKey.Visible = var219
					end
				end
			end
		end
	end
	task.defer(inputTypeChanged)
	LastInput_upvr.Changed:Connect(inputTypeChanged)
	local var220_upvw
	local var222_upvw = false
	local var223_upvw = false
	local tryOpenSkillsGuiForTool_upvw
	require(game.ReplicatedStorage:WaitForChild("GameSignals")).new("TransformationChanged"):Connect(function(arg1, arg2, arg3) -- Line 378
		--[[ Upvalues[4]:
			[1]: var220_upvw (read and write)
			[2]: var222_upvw (read and write)
			[3]: var223_upvw (read and write)
			[4]: tryOpenSkillsGuiForTool_upvw (read and write)
		]]
		var220_upvw = arg1
		var222_upvw = arg2
		var223_upvw = arg3
		if _G.MyCurrentTool then
			tryOpenSkillsGuiForTool_upvw(_G.MyCurrentTool)
		end
	end)
	local tbl_39_upvr = {}
	local any_new_result1_upvr_6 = require(game.ReplicatedStorage.Util).Maid.new()
	local tbl_9_upvr = {}
	local module_upvr = require(game.ReplicatedStorage:WaitForChild("GamepadConversion"))
	local var229_upvw
	local var230_upvw
	local var231_upvw
	local function setupSkills_upvw(arg1, arg2, arg3) -- Line 389, Named "setupSkills"
		--[[ Upvalues[19]:
			[1]: MobileUIController_upvr (readonly)
			[2]: tbl_39_upvr (readonly)
			[3]: UserInputService_upvr (readonly)
			[4]: Parent_upvr_2 (readonly)
			[5]: any_new_result1_upvr_6 (readonly)
			[6]: tbl_9_upvr (readonly)
			[7]: module_3_upvr (readonly)
			[8]: module_upvr (readonly)
			[9]: LastInput_upvr (readonly)
			[10]: LocalPlayer_upvr (readonly)
			[11]: tbl_29_upvr (readonly)
			[12]: TweenService_upvr (readonly)
			[13]: MobileRage_upvr (readonly)
			[14]: var193_upvw (read and write)
			[15]: var229_upvw (read and write)
			[16]: var76_upvw (read and write)
			[17]: var230_upvw (read and write)
			[18]: var220_upvw (read and write)
			[19]: var231_upvw (read and write)
		]]
		-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
		local tbl_15_upvr = {}
		for i_8, v_6 in arg2 do
			tbl_15_upvr[i_8] = v_6
		end
		local any_IsNewUIEnabled_result1_2 = MobileUIController_upvr:IsNewUIEnabled()
		local Name_3 = arg1.Name
		local function _(arg1_10) -- Line 397, Named "isAwakened"
			--[[ Upvalues[1]:
				[1]: arg1 (readonly)
			]]
			local AwakenedMoves = arg1:FindFirstChild("AwakenedMoves")
			if AwakenedMoves then
				AwakenedMoves = arg1.AwakenedMoves:FindFirstChild(arg1_10)
			end
			return AwakenedMoves
		end
		if arg3 then
			i_8 = arg3
			v_6 = nil
			for i_9, v_7 in i_8, v_6 do
				local AwakenedMoves_4 = arg1:FindFirstChild("AwakenedMoves")
				if AwakenedMoves_4 then
					AwakenedMoves_4 = arg1.AwakenedMoves:FindFirstChild(v_7[1])
				end
				if AwakenedMoves_4 then
					tbl_15_upvr[i_9] = v_7
					tbl_15_upvr[i_9].Awakened = true
				end
			end
		end
		i_8 = false
		if tbl_39_upvr[Name_3] then
			for _, v_8 in tbl_15_upvr do
				for i_11_upvr, v_9 in tbl_39_upvr[Name_3] do
					if v_8[1] == v_9[1] and v_8[3] ~= v_9[3] then
					end
				end
			end
			if #tbl_15_upvr ~= #tbl_39_upvr[Name_3] then
			end
		end
		tbl_39_upvr[Name_3] = tbl_15_upvr
		local var670
		if not var670 then
			var670 = _G.TestGamePrint
			var670("No tool data, can't setup skills")
		else
			var670 = UserInputService_upvr.TouchEnabled
			if var670 then
				var670 = Parent_upvr_2.Skills
				var670.BackgroundTransparency = 0.7
			end
			var670 = Parent_upvr_2.Skills:GetChildren()
			local children_11_upvw, NONE_22, NONE_20 = Parent_upvr_2.Skills:GetChildren()
			for i_52, v_47 in children_11_upvw, NONE_22, NONE_20 do
				if v_47:IsA("Frame") then
					v_47.Visible = false
				end
			end
			children_11_upvw = _G
			children_11_upvw.mobileSelection = nil
			children_11_upvw = _G
			children_11_upvw.mobileSelectionFrame = nil
			children_11_upvw = Parent_upvr_2.Skills:FindFirstChild(Name_3)
			if true and children_11_upvw then
				children_11_upvw:Destroy()
				children_11_upvw = nil
			end
			any_new_result1_upvr_6:DoCleaning()
			local function checkNewSkillUnlocked(arg1_11) -- Line 455
				--[[ Upvalues[3]:
					[1]: tbl_9_upvr (copied, readonly)
					[2]: arg1 (readonly)
					[3]: module_3_upvr (copied, readonly)
				]]
				if not tbl_9_upvr[arg1.Name] then
					tbl_9_upvr[arg1.Name] = {}
				end
				local Level_10 = arg1:GetAttribute("Level")
				if not Level_10 then
					Level_10 = arg1.Level.Value
				end
				if arg1_11[2] <= Level_10 then
					if tbl_9_upvr[arg1.Name][arg1_11[1]] == false then
						module_3_upvr.new("<Color=Yellow>NEW SKILL AVAILABLE!<Color=/>"):Display()
					end
					tbl_9_upvr[arg1.Name][arg1_11[1]] = true
				else
					tbl_9_upvr[arg1.Name][arg1_11[1]] = false
				end
			end
			local function GenerateTapHoldButton_upvr() -- Line 470, Named "GenerateTapHoldButton"
				--[[ Upvalues[3]:
					[1]: UserInputService_upvr (copied, readonly)
					[2]: children_11_upvw (read and write)
					[3]: Parent_upvr_2 (copied, readonly)
				]]
				local var679
				if not var679 then
					var679 = _G.TestGameWarn
					var679("no uis")
					return
				end
				var679 = task.wait
				var679(0.1)
				var679 = nil
				for _, v_48 in pairs(children_11_upvw:GetChildren()) do
					if v_48:IsA("Frame") and v_48.LayoutOrder == 1 then
						var679 = v_48
					end
				end
				if not var679 then
					_G.TestGameWarn("no found skill")
					return
				end
				if var679:FindFirstChild("M1Hold") then
					var679:FindFirstChild("M1Hold"):Destroy()
				end
				local clone_3_upvr = Parent_upvr_2.Skills.Container.Template.Mobile:Clone()
				children_11_upvw.AncestryChanged:Connect(function() -- Line 496
					--[[ Upvalues[1]:
						[1]: clone_3_upvr (readonly)
					]]
					clone_3_upvr:Destroy()
				end)
				clone_3_upvr.Name = "M1Hold"
				clone_3_upvr.Visible = true
				clone_3_upvr.Parent = var679
				clone_3_upvr.Position = UDim2.new(clone_3_upvr.Position.X.Scale, clone_3_upvr.Position.X.Offset, clone_3_upvr.Position.Y.Scale - clone_3_upvr.Size.Y.Scale, clone_3_upvr.Position.Y.Offset - clone_3_upvr.Size.Y.Offset)
				clone_3_upvr.Activated:Connect(function() -- Line 507
					--[[ Upvalues[2]:
						[1]: clone_3_upvr (readonly)
						[2]: children_11_upvw (copied, read and write)
					]]
					_G.mobileId = nil
					if _G.mobileSelection == nil and _G.mobileSelectionFrame then
						_G.mobileSelectionFrame.BackgroundColor3 = Color3.new()
						_G.mobileSelectionFrame = nil
					end
					if _G.mobileSelectionFrame == clone_3_upvr then
						_G.mobileSelectionFrame.BackgroundColor3 = Color3.new()
						_G.mobileSelectionFrame = nil
						_G.mobileSelection = nil
					else
						_G.mobileSelection = 'G'
						_G.mobileSelectionFrame = clone_3_upvr
						for _, v_67 in children_11_upvw:GetChildren() do
							if v_67:IsA("Frame") then
								v_67.Mobile.BackgroundColor3 = Color3.new()
							end
						end
						clone_3_upvr.BackgroundColor3 = Color3.new(0, 1, 1)
						game:GetService("UserInputService").TouchStarted:Once(function() -- Line 530
							--[[ Upvalues[1]:
								[1]: clone_3_upvr (copied, readonly)
							]]
							if _G.mobileSelectionFrame ~= clone_3_upvr then
							else
								local class_Tool_upvr = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
								if not class_Tool_upvr then return end
								class_Tool_upvr:Activate()
								game:GetService("UserInputService").TouchEnded:Once(function() -- Line 542
									--[[ Upvalues[2]:
										[1]: clone_3_upvr (copied, readonly)
										[2]: class_Tool_upvr (readonly)
									]]
									if _G.mobileSelectionFrame == clone_3_upvr then
										_G.mobileSelectionFrame.BackgroundColor3 = Color3.new()
										_G.mobileSelectionFrame = nil
										_G.mobileSelection = nil
									end
									class_Tool_upvr:Deactivate()
								end)
							end
						end)
					end
				end)
				clone_3_upvr.InputBegan:Connect(function() -- Line 555
				end)
				clone_3_upvr.InputEnded:Connect(function() -- Line 556
				end)
				return clone_3_upvr
			end
			if not children_11_upvw then
				v_47 = Parent_upvr_2.Skills
				i_52 = v_47.Container:Clone()
				children_11_upvw = i_52
				children_11_upvw.Name = Name_3
				i_52 = children_11_upvw:SetAttribute
				i_52("SkillsContainer", true)
				v_47 = Parent_upvr_2
				i_52 = v_47.Skills
				children_11_upvw.Parent = i_52
				i_52 = children_11_upvw:GetChildren()
				local children_13, NONE_41, NONE_42 = children_11_upvw:GetChildren()
				for _, v_49 in children_13, NONE_41, NONE_42 do
					v_9 = v_49.Name
					i_11_upvr = #v_9
					if i_11_upvr == 1 then
						i_11_upvr = v_49:Destroy
						i_11_upvr()
					end
				end
				children_13 = tbl_15_upvr
				NONE_41 = nil
				for i_55, v_50_upvr in children_13, NONE_41 do
					v_9 = require(arg1.Data).Lvl
					i_11_upvr = v_9[v_50_upvr[1]]
					v_50_upvr[2] = i_11_upvr
					i_11_upvr = checkNewSkillUnlocked
					v_9 = v_50_upvr
					i_11_upvr(v_9)
					i_11_upvr = children_11_upvw.Template:Clone()
					local Level_6 = arg1:GetAttribute("Level")
					if not Level_6 then
						Level_6 = arg1.Level.Value
					end
					local function INLINED_4() -- Internal function, doesn't exist in bytecode
						v_9 = Color3.new(0.45, 0.45, 0.45)
						return v_9
					end
					if Level_6 >= v_50_upvr[2] or not INLINED_4() then
						v_9 = Color3.new(1, 1, 1)
					end
					i_11_upvr.Title.TextColor3 = v_9
					i_11_upvr.Level.TextColor3 = v_9
					i_11_upvr.Key.TextColor3 = v_9
					i_11_upvr.Key.Text = '['..v_50_upvr[1]..']'
					i_11_upvr.GamepadKey.Image = module_upvr.getImg(v_50_upvr[1])
					if LastInput_upvr:Get() ~= "Gamepad" then
						local _ = false
						-- KONSTANTWARNING: Skipped task `defvar` above
					else
					end
					i_11_upvr.Key.Visible = not true
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					i_11_upvr.GamepadKey.Visible = true
					i_11_upvr.Level.Text = "Mas. "..v_50_upvr[2]
					i_11_upvr.Title.Text = v_50_upvr[3]
					i_11_upvr.Name = v_50_upvr[1]
					i_11_upvr.LayoutOrder = i_55
					i_11_upvr.Visible = true
					i_11_upvr.Parent = children_11_upvw
					if UserInputService_upvr.TouchEnabled then
						i_11_upvr.Mobile.Activated:Connect(function() -- Line 596
							--[[ Upvalues[3]:
								[1]: i_11_upvr (readonly)
								[2]: v_50_upvr (readonly)
								[3]: children_11_upvw (read and write)
							]]
							_G.mobileId = nil
							if _G.mobileSelection == nil and _G.mobileSelectionFrame then
								_G.mobileSelectionFrame.BackgroundColor3 = Color3.new()
								_G.mobileSelectionFrame = nil
							end
							if _G.mobileSelectionFrame == i_11_upvr.Mobile then
								_G.mobileSelectionFrame.BackgroundColor3 = Color3.new()
								_G.mobileSelectionFrame = nil
								_G.mobileSelection = nil
							else
								_G.mobileSelection = v_50_upvr[1]
								_G.mobileSelectionFrame = i_11_upvr.Mobile
								for _, v_68 in children_11_upvw:GetChildren() do
									if v_68:IsA("Frame") then
										v_68.Mobile.BackgroundColor3 = Color3.new()
									end
								end
								i_11_upvr.Mobile.BackgroundColor3 = Color3.new(0, 1, 1)
							end
						end)
						local Level_14 = arg1:GetAttribute("Level")
						if not Level_14 then
							Level_14 = arg1.Level.Value
						end
						if v_50_upvr[2] <= Level_14 then
							i_11_upvr.Mobile.Visible = true
						end
					end
				end
			end
			for _, v_51 in tbl_15_upvr do
				local _1_5 = v_51[1]
				local var709 = require(arg1.Data).Lvl[_1_5]
				v_51[2] = var709
				checkNewSkillUnlocked(v_51)
				local Level_20 = arg1:GetAttribute("Level")
				if not Level_20 then
					Level_20 = arg1.Level.Value
				end
				if var709 > Level_20 then
					local _ = false
					-- KONSTANTWARNING: Skipped task `defvar` above
				else
				end
				local var712 = children_11_upvw[_1_5]
				if not true or not Color3.new(1, 1, 1) then
					local Color3_new_result1_6 = Color3.new(0.45, 0.45, 0.45)
				end
				var712.Title.TextColor3 = Color3_new_result1_6
				var712.Level.TextColor3 = Color3_new_result1_6
				var712.Key.TextColor3 = Color3_new_result1_6
				var712.Mobile.BackgroundColor3 = Color3.new()
				if UserInputService_upvr.TouchEnabled then
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					if true then
						var712.Mobile.Visible = true
					end
				end
				if UserInputService_upvr.TouchEnabled then
					local any_GetContextButton_result1_2 = MobileUIController_upvr:GetContextButton("Skill_".._1_5)
					if any_GetContextButton_result1_2 then
						-- KONSTANTERROR: Expression was reused, decompilation is incorrect
						if not true then
							any_GetContextButton_result1_2.Button.LockedFrame.Label.Text = "Mas. "..var709
						end
						-- KONSTANTERROR: Expression was reused, decompilation is incorrect
						any_GetContextButton_result1_2.Button.LockedFrame.Visible = not true
					end
				end
			end
			local StarContainer_upvr_2 = Parent_upvr_2.Skills.StarContainer
			local Stars_upvr_2 = LocalPlayer_upvr:WaitForChild("Data"):WaitForChild("Stars")
			local function updateStars() -- Line 658
				--[[ Upvalues[3]:
					[1]: Stars_upvr_2 (readonly)
					[2]: arg1 (readonly)
					[3]: StarContainer_upvr_2 (readonly)
				]]
				local Value_5 = Stars_upvr_2.Max.Value
				local Value_3 = Stars_upvr_2[arg1.ToolTip].Value
				StarContainer_upvr_2.Center.Bar.Fill.Position = UDim2.fromScale(-1 + Value_3 / Value_5, 0)
				StarContainer_upvr_2.Center.Bar.TextLabel.Text = Value_3..'/'..Value_5.." Stored"
				local Level_18 = arg1:GetAttribute("Level")
				if not Level_18 then
					Level_18 = arg1.Level.Value
				end
				if Level_18 < 600 then
					StarContainer_upvr_2.Center.Bar.Size = UDim2.new(0.7, -14, 1, -4)
					StarContainer_upvr_2.Center.Button.Visible = true
				else
					StarContainer_upvr_2.Center.Bar.Size = UDim2.new(1, -8, 1, -4)
					StarContainer_upvr_2.Center.Button.Visible = false
				end
				StarContainer_upvr_2.Center.Border.Size = StarContainer_upvr_2.Center.Bar.Size
			end
			any_new_result1_upvr_6:GiveTask(Stars_upvr_2[arg1.ToolTip].Changed:Connect(updateStars))
			any_new_result1_upvr_6:GiveTask(Stars_upvr_2.Max.Changed:Connect(updateStars))
			any_new_result1_upvr_6:GiveTask(arg1.Level.Changed:Connect(updateStars))
			updateStars()
			StarContainer_upvr_2.Center.Bar.Fill.BackgroundColor3 = tbl_29_upvr[arg1.ToolTip][3]
			StarContainer_upvr_2.Center.Bar.Fill.Center.BackgroundColor3 = tbl_29_upvr[arg1.ToolTip][3]
			StarContainer_upvr_2.Center.Bar.ImageLabel.ImageRectOffset = tbl_29_upvr[arg1.ToolTip][1]
			local any_new_result1_upvr_2 = require(game.ReplicatedStorage.Util).Maid.new()
			any_new_result1_upvr_6:GiveTask(any_new_result1_upvr_2)
			any_new_result1_upvr_6:GiveTask(StarContainer_upvr_2.Center.Button.Activated:Connect(function() -- Line 685
				--[[ Upvalues[7]:
					[1]: any_new_result1_upvr_2 (readonly)
					[2]: Parent_upvr_2 (copied, readonly)
					[3]: tbl_15_upvr (readonly)
					[4]: arg1 (readonly)
					[5]: LocalPlayer_upvr (copied, readonly)
					[6]: tbl_29_upvr (copied, readonly)
					[7]: TweenService_upvr (copied, readonly)
				]]
				-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
				any_new_result1_upvr_2:DoCleaning()
				local children_19, NONE_21, _ = Parent_upvr_2.Stars.Container:GetChildren()
				local var757_upvw
				for _, v_52 in children_19, NONE_21, var757_upvw do
					if v_52:IsA("Frame") and v_52.Visible then
						v_52:Destroy()
					end
				end
				var757_upvw = Parent_upvr_2
				var757_upvw = "Template"
				local tbl_10_upvr = {}
				var757_upvw = next
				for _, v_53 in var757_upvw, tbl_15_upvr do
					local Level_12 = arg1:GetAttribute("Level")
					if not Level_12 then
						Level_12 = arg1.Level.Value
					end
					if Level_12 < v_53[2] then
						local Level_8 = arg1:GetAttribute("Level")
						if not Level_8 then
							Level_8 = arg1.Level.Value
						end
						local Exp_9 = arg1:GetAttribute("Exp")
						if not Exp_9 then
							Exp_9 = arg1.Exp.Value
						end
						table.insert(tbl_10_upvr, {
							Text = v_53[3].." (Mas. "..v_53[2]..')';
							Stars = StarsUntilLevel(Level_8, Exp_9, v_53[2], LocalPlayer_upvr.Data.Level.Value);
							Mastery = v_53[2];
						})
					end
				end
				var757_upvw = 0
				local Level_16 = arg1:GetAttribute("Level")
				if not Level_16 then
					Level_16 = arg1.Level.Value
				end
				if Level_16 < 400 then
					local Level_15 = arg1:GetAttribute("Level")
					if not Level_15 then
						Level_15 = arg1.Level.Value
					end
					local Exp_5 = arg1:GetAttribute("Exp")
					if not Exp_5 then
						Exp_5 = arg1.Exp.Value
					end
					;({}).Text = "Mastery Level 400"
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					;({}).Stars = StarsUntilLevel(Level_15, Exp_5, 400, LocalPlayer_upvr.Data.Level.Value)
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					;({}).Mastery = 400
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					table.insert(tbl_10_upvr, {})
				end
				local Level_5 = arg1:GetAttribute("Level")
				if not Level_5 then
					Level_5 = arg1.Level.Value
				end
				if Level_5 < 600 then
					local Level_3 = arg1:GetAttribute("Level")
					if not Level_3 then
						Level_3 = arg1.Level.Value
					end
					local Exp_7 = arg1:GetAttribute("Exp")
					if not Exp_7 then
						Exp_7 = arg1.Exp.Value
					end
					local StarsUntilLevel_result1 = StarsUntilLevel(Level_3, Exp_7, 600, LocalPlayer_upvr.Data.Level.Value)
					;({}).Text = "Mastery Level 600"
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					;({}).Stars = StarsUntilLevel_result1
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					;({}).Mastery = 600
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					table.insert(tbl_10_upvr, {})
					var757_upvw = StarsUntilLevel_result1
				end
				table.sort(tbl_10_upvr, function(arg1_12, arg2_5) -- Line 716
					local var771
					if arg1_12.Stars >= arg2_5.Stars then
						var771 = false
					else
						var771 = true
					end
					return var771
				end)
				local var772_upvr = LocalPlayer_upvr.Data.Stars[arg1.ToolTip]
				local function toggleButton_upvr(arg1_13, arg2_6) -- Line 720, Named "toggleButton"
					if not arg2_6 then
						arg1_13.BackgroundColor3 = Color3.fromRGB(122, 122, 122)
						arg1_13.BorderColor3 = Color3.fromRGB(100, 100, 100)
						arg1_13.Trans.BackgroundColor3 = Color3.fromRGB(153, 153, 153)
						arg1_13.ImageLabel.TextLabel.TextColor3 = Color3.fromRGB(188, 188, 188)
						arg1_13.ImageLabel.ImageColor3 = Color3.fromRGB(211, 211, 211)
					else
						arg1_13.BackgroundColor3 = Color3.fromRGB(255, 214, 49)
						arg1_13.BorderColor3 = Color3.fromRGB(255, 240, 69)
						arg1_13.Trans.BackgroundColor3 = Color3.fromRGB(255, 241, 87)
						arg1_13.ImageLabel.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
						arg1_13.ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
					end
				end
				local function refreshLines_upvr() -- Line 736, Named "refreshLines"
					--[[ Upvalues[7]:
						[1]: var757_upvw (read and write)
						[2]: arg1 (copied, readonly)
						[3]: LocalPlayer_upvr (copied, readonly)
						[4]: tbl_10_upvr (readonly)
						[5]: var772_upvr (readonly)
						[6]: toggleButton_upvr (readonly)
						[7]: Parent_upvr_2 (copied, readonly)
					]]
					local Level_19 = arg1:GetAttribute("Level")
					if not Level_19 then
						Level_19 = arg1.Level.Value
					end
					local Exp = arg1:GetAttribute("Exp")
					if not Exp then
						Exp = arg1.Exp.Value
					end
					var757_upvw = StarsUntilLevel(Level_19, Exp, 600, LocalPlayer_upvr.Data.Level.Value)
					for _, v_54 in tbl_10_upvr do
						local Level = arg1:GetAttribute("Level")
						if not Level then
							Level = arg1.Level.Value
						end
						local Exp_3 = arg1:GetAttribute("Exp")
						if not Exp_3 then
							Exp_3 = arg1.Exp.Value
						end
						v_54.Stars = StarsUntilLevel(Level, Exp_3, v_54.Mastery, LocalPlayer_upvr.Data.Level.Value)
						v_54.Gui.Add.ImageLabel.TextLabel.Text = v_54.Stars
						if var772_upvr.Value < v_54.Stars or v_54.Stars == 0 or var757_upvw < v_54.Stars then
							v_54.Gui.TextLabel.TextColor3 = Color3.fromRGB(115, 115, 115)
							toggleButton_upvr(v_54.Gui.Add, false)
						else
							v_54.Gui.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
							toggleButton_upvr(v_54.Gui.Add, true)
						end
					end
					for _, v_55 in Parent_upvr_2.Stars.ExtraRow:GetChildren() do
						if v_55:IsA("TextButton") then
							if var772_upvr.Value < tonumber(v_55.Name) or tonumber(v_55.Name) == 0 or var757_upvw < tonumber(v_55.Name) then
								toggleButton_upvr(v_55, false)
							else
								toggleButton_upvr(v_55, true)
							end
						end
					end
					Parent_upvr_2.Stars.Bottom.Available.Text = "Available: "..var772_upvr.Value
				end
				local function _(arg1_14) -- Line 766, Named "spendStars"
					--[[ Upvalues[2]:
						[1]: var757_upvw (read and write)
						[2]: arg1 (copied, readonly)
					]]
					local minimum_3 = math.min(arg1_14, var757_upvw)
					if minimum_3 == 0 then
					else
						game.ReplicatedStorage.Remotes.CommF_:InvokeServer("SpendStar", arg1.ToolTip, minimum_3)
					end
				end
				any_new_result1_upvr_2:GiveTask(LocalPlayer_upvr.Data.Level.Changed:Connect(refreshLines_upvr))
				any_new_result1_upvr_2:GiveTask(var772_upvr.Changed:Connect(function() -- Line 774
					--[[ Upvalues[1]:
						[1]: refreshLines_upvr (readonly)
					]]
					task.wait(0.1)
					refreshLines_upvr()
				end))
				any_new_result1_upvr_2:GiveTask(arg1.Level.Changed:Connect(function() -- Line 778
					--[[ Upvalues[1]:
						[1]: refreshLines_upvr (readonly)
					]]
					task.wait(0.1)
					refreshLines_upvr()
				end))
				for _, v_56_upvr in tbl_10_upvr do
					local clone_10 = var757_upvw.Stars.Container:FindFirstChild(var757_upvw):Clone()
					clone_10.Add.ImageLabel.TextLabel.Text = v_56_upvr.Stars
					clone_10.TextLabel.Text = v_56_upvr.Text
					clone_10.Visible = true
					clone_10.Add.ImageLabel.ImageRectOffset = tbl_29_upvr[arg1.ToolTip][1]
					clone_10.Parent = Parent_upvr_2.Stars.Container
					v_56_upvr.Gui = clone_10
					any_new_result1_upvr_2:GiveTask(clone_10.Add.Activated:Connect(function() -- Line 791
						--[[ Upvalues[3]:
							[1]: v_56_upvr (readonly)
							[2]: var757_upvw (read and write)
							[3]: arg1 (copied, readonly)
						]]
						local minimum = math.min(v_56_upvr.Stars, var757_upvw)
						if minimum == 0 then
						else
							game.ReplicatedStorage.Remotes.CommF_:InvokeServer("SpendStar", arg1.ToolTip, minimum)
						end
					end))
					local _
				end
				any_new_result1_upvr_2:GiveTask(Parent_upvr_2.Stars.Title.Exit.Activated:Connect(function() -- Line 796
					--[[ Upvalues[3]:
						[1]: TweenService_upvr (copied, readonly)
						[2]: Parent_upvr_2 (copied, readonly)
						[3]: any_new_result1_upvr_2 (copied, readonly)
					]]
					TweenService_upvr:Create(Parent_upvr_2.Stars, TweenInfo.new(0.2), {
						Position = UDim2.fromScale(0.5, 2);
					}):Play()
					any_new_result1_upvr_2:DoCleaning()
				end))
				for _, v_57_upvr in Parent_upvr_2.Stars.ExtraRow:GetChildren() do
					if v_57_upvr:IsA("TextButton") then
						any_new_result1_upvr_2:GiveTask(v_57_upvr.Activated:Connect(function() -- Line 803
							--[[ Upvalues[3]:
								[1]: v_57_upvr (readonly)
								[2]: var757_upvw (read and write)
								[3]: arg1 (copied, readonly)
							]]
							local minimum_7 = math.min(tonumber(v_57_upvr.Name), var757_upvw)
							if minimum_7 == 0 then
							else
								game.ReplicatedStorage.Remotes.CommF_:InvokeServer("SpendStar", arg1.ToolTip, minimum_7)
							end
						end))
						v_57_upvr.ImageLabel.ImageRectOffset = tbl_29_upvr[arg1.ToolTip][1]
					end
				end
				refreshLines_upvr()
				TweenService_upvr:Create(Parent_upvr_2.Stars, TweenInfo.new(0.2), {
					Position = UDim2.fromScale(0.5, 0.5);
				}):Play()
			end))
			any_new_result1_upvr_6:GiveTask(function() -- Line 815
				--[[ Upvalues[2]:
					[1]: TweenService_upvr (copied, readonly)
					[2]: Parent_upvr_2 (copied, readonly)
				]]
				TweenService_upvr:Create(Parent_upvr_2.Stars, TweenInfo.new(0.2), {
					Position = UDim2.fromScale(0.5, 2);
				}):Play()
			end)
			if Name_3 == "Black Leg" then
			end
			if "Dark Step" == "Fishman Karate" then
			end
			if "Water Kung Fu" == "Electro" then
			end
			if "Electric" == "Dragon Claw" then
				local const_string_2 = "Dragon Breath"
			end
			Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
			Parent_upvr_2.Skills.Rage.Bar.UIGradient.Enabled = false
			MobileRage_upvr.Bar.Trans.Visible = false
			MobileRage_upvr.Bar.UIGradient.Enabled = false
			for _, v_58 in Parent_upvr_2.Skills.Rage.Ticks:GetChildren() do
				v_58.Visible = true
			end
			for _, v_59 in MobileRage_upvr.Ticks:GetChildren() do
				v_59.Visible = true
			end
			Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Visible = false
			MobileRage_upvr.Ticks.MoodLine.Visible = false
			if const_string_2 == "Gas-Gas" or const_string_2 == "Sound-Sound" or const_string_2 == "Kitsune-Kitsune" or const_string_2 == "Dragon-Dragon" or const_string_2 == "Dragon (Classic)-Dragon (Classic)" or const_string_2 == "T-Rex-T-Rex" or const_string_2 == "Venom-Venom" or const_string_2 == "Shadow-Shadow" or const_string_2 == "Soul-Soul" or const_string_2 == "Spirit-Spirit" then
				Parent_upvr_2.Skills.Rage.Fire:SetAttribute("ParticleEnabled", false)
				Parent_upvr_2.Skills.Rage.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
				Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
				MobileRage_upvr.Fire:SetAttribute("ParticleEnabled", false)
				MobileRage_upvr.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
				MobileRage_upvr.Black.Trans.Visible = false
				if const_string_2 == "Soul-Soul" or const_string_2 == "Spirit-Spirit" then
					if const_string_2 == "Spirit-Spirit" then
						Parent_upvr_2.Skills.Rage.Text = "Spirits: ?"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						Parent_upvr_2.Skills.Rage.Bar.UIGradient.Enabled = true
						for _, v_60 in Parent_upvr_2.Skills.Rage.Ticks:GetChildren() do
							v_60.Visible = false
						end
						Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
						Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Visible = true
						MobileRage_upvr.Text = "Spirits: ?"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						MobileRage_upvr.Bar.UIGradient.Enabled = true
						for _, v_61 in MobileRage_upvr.Ticks:GetChildren() do
							v_61.Visible = false
						end
						MobileRage_upvr.Black.Trans.Visible = false
						MobileRage_upvr.Ticks.MoodLine.Visible = true
						if var193_upvw then
							var193_upvw:Disconnect()
							var193_upvw = nil
						end
						if var229_upvw then
							var229_upvw:Disconnect()
							var229_upvw = nil
						end
						Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.fromScale(1, 0.2)
						MobileRage_upvr.Bar.Size = UDim2.fromScale(1, 0.3)
						task.defer(function() -- Line 886
							--[[ Upvalues[6]:
								[1]: var76_upvw (copied, read and write)
								[2]: var193_upvw (copied, read and write)
								[3]: Parent_upvr_2 (copied, readonly)
								[4]: MobileRage_upvr (copied, readonly)
								[5]: TweenService_upvr (copied, readonly)
								[6]: var229_upvw (copied, read and write)
							]]
							local Rage_upvr_8 = var76_upvw:WaitForChild("Rage")
							local Souls_upvr_3 = var76_upvw:WaitForChild("Souls")
							if not var193_upvw then
								local Value_4_upvw = Rage_upvr_8.Value
								local var823_upvw
								local var824_upvw
								var193_upvw = Rage_upvr_8.Changed:Connect(function() -- Line 893
									--[[ Upvalues[7]:
										[1]: Rage_upvr_8 (readonly)
										[2]: Value_4_upvw (read and write)
										[3]: var823_upvw (read and write)
										[4]: var824_upvw (read and write)
										[5]: Parent_upvr_2 (copied, readonly)
										[6]: MobileRage_upvr (copied, readonly)
										[7]: TweenService_upvr (copied, readonly)
									]]
									if Rage_upvr_8.Value <= Value_4_upvw then
										if var823_upvw then
											var823_upvw:Cancel()
										end
										if var824_upvw then
											var824_upvw:Cancel()
										end
										Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Position = UDim2.fromScale(Rage_upvr_8.Value / 100, 0)
										MobileRage_upvr.Ticks.MoodLine.Position = UDim2.fromScale(Rage_upvr_8.Value / 100, 0)
									else
										var823_upvw = TweenService_upvr:Create(Parent_upvr_2.Skills.Rage.Ticks.MoodLine, TweenInfo.new(0.25), {
											Position = UDim2.new(Rage_upvr_8.Value / 100, 0, 0, 0);
										})
										var823_upvw:Play()
										var824_upvw = TweenService_upvr:Create(MobileRage_upvr.Ticks.MoodLine, TweenInfo.new(0.25), {
											Position = UDim2.new(Rage_upvr_8.Value / 100, 0, 0, 0);
										})
										var824_upvw:Play()
									end
									if 50 < Rage_upvr_8.Value then
										Parent_upvr_2.Skills.Rage.TextColor3 = Color3.new(1, 0.1, 0.1)
										MobileRage_upvr.TextColor3 = Color3.new(1, 0.1, 0.1)
									else
										Parent_upvr_2.Skills.Rage.TextColor3 = Color3.new(0.1, 1, 1)
										MobileRage_upvr.TextColor3 = Color3.new(0.1, 1, 1)
									end
									Value_4_upvw = Rage_upvr_8.Value
								end)
								Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_8.Value / 100, 0, 0, 0)
								MobileRage_upvr.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_8.Value / 100, 0, 0, 0)
							end
							Parent_upvr_2.Skills.Rage.Text = "Spirits: "..Souls_upvr_3.Value
							MobileRage_upvr.Text = "Spirits: "..Souls_upvr_3.Value
							if not var229_upvw then
								var229_upvw = Souls_upvr_3.Changed:Connect(function() -- Line 925
									--[[ Upvalues[3]:
										[1]: Parent_upvr_2 (copied, readonly)
										[2]: Souls_upvr_3 (readonly)
										[3]: MobileRage_upvr (copied, readonly)
									]]
									Parent_upvr_2.Skills.Rage.Text = "Spirits: "..Souls_upvr_3.Value
									MobileRage_upvr.Text = "Spirits: "..Souls_upvr_3.Value
								end)
								Parent_upvr_2.Skills.Rage.Text = "Spirits: "..Souls_upvr_3.Value
								MobileRage_upvr.Text = "Spirits: "..Souls_upvr_3.Value
							end
						end)
					else
						Parent_upvr_2.Skills.Rage.Text = "Souls: ?"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						Parent_upvr_2.Skills.Rage.Bar.UIGradient.Enabled = true
						for _, v_62 in Parent_upvr_2.Skills.Rage.Ticks:GetChildren() do
							v_62.Visible = false
						end
						Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
						Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Visible = true
						MobileRage_upvr.Text = "Souls: ?"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						MobileRage_upvr.Bar.UIGradient.Enabled = true
						for _, v_63 in MobileRage_upvr.Ticks:GetChildren() do
							v_63.Visible = false
						end
						MobileRage_upvr.Black.Trans.Visible = false
						MobileRage_upvr.Ticks.MoodLine.Visible = true
						if var193_upvw then
							var193_upvw:Disconnect()
							var193_upvw = nil
						end
						if var230_upvw then
							var230_upvw:Disconnect()
							var230_upvw = nil
						end
						Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.fromScale(1, 0.2)
						MobileRage_upvr.Bar.Size = UDim2.fromScale(1, 0.3)
						task.defer(function() -- Line 963
							--[[ Upvalues[5]:
								[1]: var76_upvw (copied, read and write)
								[2]: var193_upvw (copied, read and write)
								[3]: Parent_upvr_2 (copied, readonly)
								[4]: MobileRage_upvr (copied, readonly)
								[5]: var230_upvw (copied, read and write)
							]]
							local Rage_upvr_9 = var76_upvw:WaitForChild("Rage")
							if not var193_upvw then
								var193_upvw = Rage_upvr_9.Changed:Connect(function() -- Line 966
									--[[ Upvalues[3]:
										[1]: Parent_upvr_2 (copied, readonly)
										[2]: Rage_upvr_9 (readonly)
										[3]: MobileRage_upvr (copied, readonly)
									]]
									Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_9.Value / 100, 0, 0, 0)
									MobileRage_upvr.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_9.Value / 100, 0, 0, 0)
								end)
								Parent_upvr_2.Skills.Rage.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_9.Value / 100, 0, 0, 0)
								MobileRage_upvr.Ticks.MoodLine.Position = UDim2.new(Rage_upvr_9.Value / 100, 0, 0, 0)
							end
							local Souls_upvr = var76_upvw:WaitForChild("Souls")
							if not var230_upvw then
								var230_upvw = Souls_upvr.Changed:Connect(function() -- Line 975
									--[[ Upvalues[3]:
										[1]: Parent_upvr_2 (copied, readonly)
										[2]: Souls_upvr (readonly)
										[3]: MobileRage_upvr (copied, readonly)
									]]
									Parent_upvr_2.Skills.Rage.Text = "Souls: "..Souls_upvr.Value
									MobileRage_upvr.Text = "Souls: "..Souls_upvr.Value
								end)
								Parent_upvr_2.Skills.Rage.Text = "Souls: "..Souls_upvr.Value
								MobileRage_upvr.Text = "Souls: "..Souls_upvr.Value
							end
						end)
					end
				elseif const_string_2 == "Kitsune-Kitsune" then
					Parent_upvr_2.Skills.Rage.Text = "1 Tail"
					Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(0, 0, 1)
					MobileRage_upvr.Text = "1 Tail"
					MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(0, 0, 1)
					if var193_upvw then
						var193_upvw:Disconnect()
						var193_upvw = nil
					end
					if var229_upvw then
						var229_upvw:Disconnect()
						var229_upvw = nil
					end
					Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.fromScale(1, 0.2)
					MobileRage_upvr.Bar.Size = UDim2.fromScale(1, 0.2)
					task.defer(function() -- Line 1002
						--[[ Upvalues[4]:
							[1]: var76_upvw (copied, read and write)
							[2]: var193_upvw (copied, read and write)
							[3]: Parent_upvr_2 (copied, readonly)
							[4]: MobileRage_upvr (copied, readonly)
						]]
						local Rage_upvr_4 = var76_upvw:WaitForChild("Rage")
						if not var193_upvw then
							local var841_upvw = Rage_upvr_4.Value / 100
							local function changeBar(arg1_15) -- Line 1006
								--[[ Upvalues[2]:
									[1]: Parent_upvr_2 (copied, readonly)
									[2]: MobileRage_upvr (copied, readonly)
								]]
								-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
								local var842 = 0
								if 0.6666666666666666 < arg1_15 then
									var842 = 2
								elseif 0.3333333333333333 < arg1_15 then
									var842 = 1
								end
								local Color3_new_result1_3 = Color3.new(0, var842 / 2, 1)
								if 1 <= var842 then
									Parent_upvr_2.Skills.Rage.Black.BackgroundColor3 = Color3.new(0, (var842 - 1) / 2, 1)
									Parent_upvr_2.Skills.Rage.Black.Trans.Visible = true
									MobileRage_upvr.Black.BackgroundColor3 = Color3.new(0, (var842 - 1) / 2, 1)
									MobileRage_upvr.Black.Trans.Visible = true
									local var844 = (arg1_15 - var842 * 0.3333333333333333) / 0.3333333333333333
								else
									Parent_upvr_2.Skills.Rage.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
									Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
									MobileRage_upvr.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
									MobileRage_upvr.Black.Trans.Visible = false
								end
								Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3_new_result1_3
								Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.new(var844 / 0.3333333333333333, 0, 0.2, 0)
								MobileRage_upvr.Bar.BackgroundColor3 = Color3_new_result1_3
								-- KONSTANTERROR: Expression was reused, decompilation is incorrect
								MobileRage_upvr.Bar.Size = UDim2.new(var844 / 0.3333333333333333, 0, 0.2, 0)
								local var845 = "1 Tail"
								if var842 == 1 then
									var845 = "2 Tails"
								elseif var842 == 2 then
									var845 = "3 Tails"
								end
								Parent_upvr_2.Skills.Rage.Text = var845
								MobileRage_upvr.Text = var845
							end
							local var846_upvw = 0
							var193_upvw = Rage_upvr_4.Changed:Connect(function() -- Line 1052
								--[[ Upvalues[3]:
									[1]: Rage_upvr_4 (readonly)
									[2]: var846_upvw (read and write)
									[3]: var841_upvw (read and write)
								]]
								var846_upvw = os.clock()
								var841_upvw = Rage_upvr_4.Value / 100
							end)
							changeBar(var841_upvw)
							while var193_upvw do
								local var848
								if os.clock() - var846_upvw < 0.25 then
									local var849 = var848 + (var841_upvw - var848) * (task.wait() / 0.25) * 5
									changeBar(var849)
									var848 = var849
								elseif not false then
									changeBar(var841_upvw)
									var848 = var841_upvw
								end
								if 1 <= var841_upvw and not var76_upvw:FindFirstChild("Kitsune") then
									local Color3_fromHSV_result1_3 = Color3.fromHSV(os.clock() % 3 / 3, 1, 1)
									Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3_fromHSV_result1_3
									MobileRage_upvr.Bar.BackgroundColor3 = Color3_fromHSV_result1_3
								end
							end
						end
					end)
				elseif const_string_2 == "Dragon-Dragon" then
					_G.TestGamePrint("Init dragon tools", var220_upvw)
					Parent_upvr_2.Skills.Rage.Text = "Fury Meter"
					Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(1, 0.6, 0)
					MobileRage_upvr.Text = "Fury Meter"
					MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(1, 0.6, 0)
					if var231_upvw then
						var231_upvw:Disconnect()
						var231_upvw = nil
					end
					local var852_upvw
					var231_upvw = require(game.ReplicatedStorage:WaitForChild("GameSignals")).new("TransformationChanged"):Connect(function(arg1_16, arg2_7, arg3_3) -- Line 1105
						--[[ Upvalues[2]:
							[1]: var852_upvw (read and write)
							[2]: GenerateTapHoldButton_upvr (readonly)
						]]
						_G.TestGamePrint("TransformationChanged: DragonTools", arg1_16, arg2_7, arg3_3)
						if arg1_16 and not arg3_3 then
							_G.TestGamePrint("make flamethrower button for dragon (2)")
							var852_upvw = GenerateTapHoldButton_upvr()
						elseif var852_upvw then
							_G.TestGamePrint("destroy flame button")
							var852_upvw:Destroy()
						end
					end)
					if var220_upvw == "Dragon" then
						_G.TestGamePrint("make flamethrower button for dragon")
						var852_upvw = GenerateTapHoldButton_upvr()
					end
					if var193_upvw then
						var193_upvw:Disconnect()
						var193_upvw = nil
					end
					if var229_upvw then
						var229_upvw:Disconnect()
						var229_upvw = nil
					end
					Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.fromScale(1, 0.2)
					MobileRage_upvr.Bar.Size = UDim2.fromScale(1, 0.2)
					coroutine.resume(coroutine.create(function() -- Line 1136
						--[[ Upvalues[4]:
							[1]: var76_upvw (copied, read and write)
							[2]: var193_upvw (copied, read and write)
							[3]: Parent_upvr_2 (copied, readonly)
							[4]: MobileRage_upvr (copied, readonly)
						]]
						local Rage_upvr = var76_upvw:WaitForChild("Rage")
						if not var193_upvw then
							local var855_upvw = Rage_upvr.Value / 100
							local function changeBar(arg1_17) -- Line 1140
								--[[ Upvalues[2]:
									[1]: Parent_upvr_2 (copied, readonly)
									[2]: MobileRage_upvr (copied, readonly)
								]]
								local Color3_new_result1 = Color3.new(1, 0.6, 0)
								local var857
								if 0.5 <= var857 then
									Parent_upvr_2.Skills.Rage.Black.BackgroundColor3 = Color3_new_result1
									Parent_upvr_2.Skills.Rage.Black.Trans.Visible = true
									MobileRage_upvr.Black.BackgroundColor3 = Color3_new_result1
									MobileRage_upvr.Black.Trans.Visible = true
									Color3_new_result1 = Color3.new(1, 0, 0)
									var857 = (var857 - 0.5) / 0.5
								else
									Parent_upvr_2.Skills.Rage.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
									Parent_upvr_2.Skills.Rage.Black.Trans.Visible = false
									MobileRage_upvr.Black.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
									MobileRage_upvr.Black.Trans.Visible = false
									var857 /= 0.5
								end
								Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3_new_result1
								Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.new(var857, 0, 0.2, 0)
								MobileRage_upvr.Bar.BackgroundColor3 = Color3_new_result1
								MobileRage_upvr.Bar.Size = UDim2.new(var857, 0, 0.2, 0)
							end
							local var858_upvw = 0
							var193_upvw = Rage_upvr.Changed:Connect(function() -- Line 1169
								--[[ Upvalues[3]:
									[1]: Rage_upvr (readonly)
									[2]: var858_upvw (read and write)
									[3]: var855_upvw (read and write)
								]]
								var858_upvw = os.clock()
								var855_upvw = Rage_upvr.Value / 100
							end)
							changeBar(var855_upvw)
							while var193_upvw and var193_upvw == var193_upvw do
								local var860
								if os.clock() - var858_upvw < 0.25 then
									local var861 = var860 + (var855_upvw - var860) * (math.min(task.wait(), 0.05) / 0.25) * 5
									changeBar(var861)
									var860 = var861
								elseif not false then
									changeBar(var855_upvw)
									var860 = var855_upvw
								end
								if 1 <= var855_upvw and not var76_upvw:FindFirstChild("Dragon") then
									local Color3_fromHSV_result1_4 = Color3.fromHSV(os.clock() % 3 / 3, 1, 1)
									Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3_fromHSV_result1_4
									MobileRage_upvr.Bar.BackgroundColor3 = Color3_fromHSV_result1_4
								end
							end
						end
					end))
				else
					Parent_upvr_2.Skills.Rage.TextColor3 = Color3.new(1, 1, 1)
					MobileRage_upvr.TextColor3 = Color3.new(1, 1, 1)
					if const_string_2 == "Shadow-Shadow" then
						Parent_upvr_2.Skills.Rage.Text = "Umbra Meter"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(0.33, 0, 1)
						MobileRage_upvr.Text = "Umbra Meter"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(0.33, 0, 1)
					elseif const_string_2 == "Gas-Gas" then
						Parent_upvr_2.Skills.Rage.Text = "Gas Meter"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(0.811765, 0.482353, 1)
						MobileRage_upvr.Text = "Gas Meter"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(0.811765, 0.482353, 1)
					elseif const_string_2 == "Sound-Sound" then
						Parent_upvr_2.Skills.Rage.Text = "Tempo Meter"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						MobileRage_upvr.Text = "Tempo Meter"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(1, 1, 1)
						task.spawn(function() -- Line 1227
							--[[ Upvalues[3]:
								[1]: arg1 (readonly)
								[2]: Parent_upvr_2 (copied, readonly)
								[3]: MobileRage_upvr (copied, readonly)
							]]
							local MaxTempoActive_upvr_2 = arg1:WaitForChild("MaxTempoActive", 10)
							if MaxTempoActive_upvr_2 then
								MaxTempoActive_upvr_2.Changed:Connect(function() -- Line 1230
									--[[ Upvalues[3]:
										[1]: Parent_upvr_2 (copied, readonly)
										[2]: MaxTempoActive_upvr_2 (readonly)
										[3]: MobileRage_upvr (copied, readonly)
									]]
									local var866
									local function INLINED_5() -- Internal function, doesn't exist in bytecode
										var866 = Color3.new(1, 0.9, 0.1)
										return var866
									end
									if not MaxTempoActive_upvr_2.Value or not INLINED_5() then
										var866 = Color3.new(1, 1, 1)
									end
									Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = var866
									var866 = MobileRage_upvr
									local function INLINED_6() -- Internal function, doesn't exist in bytecode
										var866 = Color3.new(1, 0.9, 0.1)
										return var866
									end
									if not MaxTempoActive_upvr_2.Value or not INLINED_6() then
										var866 = Color3.new(1, 1, 1)
									end
									var866.Bar.BackgroundColor3 = var866
								end)
							end
						end)
					else
						Parent_upvr_2.Skills.Rage.Text = "Fury Meter"
						Parent_upvr_2.Skills.Rage.Bar.BackgroundColor3 = Color3.new(1, 0, 0)
						MobileRage_upvr.Text = "Fury Meter"
						MobileRage_upvr.Bar.BackgroundColor3 = Color3.new(1, 0, 0)
					end
					if var193_upvw then
						var193_upvw:Disconnect()
						var193_upvw = nil
					end
					if var230_upvw then
						var230_upvw:Disconnect()
						var230_upvw = nil
					end
					task.defer(function() -- Line 1252
						--[[ Upvalues[4]:
							[1]: var76_upvw (copied, read and write)
							[2]: var193_upvw (copied, read and write)
							[3]: Parent_upvr_2 (copied, readonly)
							[4]: MobileRage_upvr (copied, readonly)
						]]
						local Rage_upvr_10 = var76_upvw:WaitForChild("Rage")
						if not var193_upvw then
							var193_upvw = Rage_upvr_10.Changed:Connect(function() -- Line 1255
								--[[ Upvalues[3]:
									[1]: Parent_upvr_2 (copied, readonly)
									[2]: Rage_upvr_10 (readonly)
									[3]: MobileRage_upvr (copied, readonly)
								]]
								Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.fromScale(Rage_upvr_10.Value / 100, 0.2)
								MobileRage_upvr.Bar.Size = UDim2.fromScale(Rage_upvr_10.Value / 100, 0.2)
							end)
							Parent_upvr_2.Skills.Rage.Bar.Size = UDim2.new(Rage_upvr_10.Value / 100, 0, 0.2, 0)
							MobileRage_upvr.Bar.Size = UDim2.fromScale(Rage_upvr_10.Value / 100, 0.2)
						end
					end)
				end
				Parent_upvr_2.Skills.Rage.Visible = not any_IsNewUIEnabled_result1_2
				MobileRage_upvr.Visible = any_IsNewUIEnabled_result1_2
			else
				Parent_upvr_2.Skills.Rage.Visible = false
				MobileRage_upvr.Visible = false
			end
			Parent_upvr_2.Skills.Position = UDim2.new(0.83, -10, 0.937 - #tbl_15_upvr * 0.2 * 0.42, -10)
			local Skills = Parent_upvr_2.Skills
			local var871 = const_string_2
			local var872
			if var871 == "" then
				Skills = "Fruitless"
			else
				var872 = ""
				if var871:match("^Permanent %a+%-%a+") then
					var872 = "Permanent "
				end
				local string_match_result1_6 = string.match(var871, "(((%u)%-?)([^-.]+))$")
				if string_match_result1_6 then
					Skills = var872..string_match_result1_6
				else
					Skills = var871
				end
			end
			Skills.Title.Text = Skills:upper()
			children_11_upvw.Visible = true
			Parent_upvr_2.MobileMasteryLevel.Visible = any_IsNewUIEnabled_result1_2
			if any_IsNewUIEnabled_result1_2 then
			else
				Parent_upvr_2.Skills.Visible = true
			end
		end
	end
	Parent_upvr_2:WaitForChild("Crew")
	Parent_upvr_2:WaitForChild("Code")
	Parent_upvr_2:WaitForChild("CrewButton")
	Parent_upvr_2:WaitForChild("AlliesButton")
	Parent_upvr_2:WaitForChild("HomeButton")
	local function homeButtonActivated() -- Line 1291
		--[[ Upvalues[2]:
			[1]: Parent_upvr_2 (readonly)
			[2]: Remotes_upvr (readonly)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [13] 10. Error Block 2 start (CF ANALYSIS FAILED)
		do
			return
		end
		-- KONSTANTERROR: [13] 10. Error Block 2 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [14] 11. Error Block 3 start (CF ANALYSIS FAILED)
		Parent_upvr_2.HomeButton.ImageColor3 = Color3.fromRGB(134, 134, 134)
		Parent_upvr_2.HomeButton.ImageTransparency = 0.5
		-- KONSTANTERROR: [14] 11. Error Block 3 end (CF ANALYSIS FAILED)
	end
	Parent_upvr_2.HomeButton.Activated:Connect(homeButtonActivated)
	game.ReplicatedStorage.Events.ActivateHomeButton.Event:Connect(homeButtonActivated)
	function tryOpenSkillsGuiForTool_upvw(arg1) -- Line 1314, Named "tryOpenSkillsGuiForTool"
		--[[ Upvalues[3]:
			[1]: Skills_3_upvr (readonly)
			[2]: MobileUIController_upvr (readonly)
			[3]: setupSkills_upvw (read and write)
		]]
		local var875 = Skills_3_upvr[arg1.Name]
		if var875 then
			if not arg1:FindFirstChild("Level") or not arg1:FindFirstChild("Exp") then
				task.wait()
			end
			if MobileUIController_upvr:IsNewUIEnabled() then
				MobileUIController_upvr:CreateSkillContextButtons(arg1)
			end
			setupSkills_upvw(arg1, var875[1], var875[2])
		end
	end
	local var874_upvw = tryOpenSkillsGuiForTool_upvw
	local function setupChar(arg1) -- Line 1329
		--[[ Upvalues[15]:
			[1]: IsMobile_upvr (readonly)
			[2]: GuiService_upvr (readonly)
			[3]: var193_upvw (read and write)
			[4]: var201_upvw (read and write)
			[5]: LocalPlayer_upvr (readonly)
			[6]: var202_upvw (read and write)
			[7]: var203_upvw (read and write)
			[8]: var76_upvw (read and write)
			[9]: var199_upvw (read and write)
			[10]: var200_upvw (read and write)
			[11]: Parent_upvr_2 (readonly)
			[12]: MobileRage_upvr (readonly)
			[13]: AwakeningToggler_upvr (readonly)
			[14]: var874_upvw (read and write)
			[15]: MobileUIController_upvr (readonly)
		]]
		if not arg1 then
		else
			if IsMobile_upvr() then
				GuiService_upvr.TouchControlsEnabled = true
			end
			require(script.Parent.Shared).reflectHUDButtonVisibility()
			if var193_upvw then
				var193_upvw:Disconnect()
				var193_upvw = nil
			end
			var201_upvw = LocalPlayer_upvr:WaitForChild("Data")
			var202_upvw = var201_upvw:WaitForChild("Beli")
			var203_upvw = var201_upvw:WaitForChild("Fragments")
			var76_upvw = arg1
			if not var76_upvw:IsDescendantOf(workspace) then return end
			var199_upvw = var76_upvw:WaitForChild("Humanoid")
			var200_upvw = var76_upvw:WaitForChild("Energy")
			Parent_upvr_2.Skills.Visible = false
			MobileRage_upvr.Visible = false
			Parent_upvr_2.Timer.Visible = false
			AwakeningToggler_upvr.Visible = false
			for _, v_64 in Parent_upvr_2.Skills:GetChildren() do
				if v_64:IsA("Frame") and v_64.Name ~= "Container" then
					v_64:Destroy()
				end
			end
			var76_upvw.ChildAdded:Connect(function(arg1_18) -- Line 1366
				--[[ Upvalues[2]:
					[1]: var874_upvw (copied, read and write)
					[2]: MobileUIController_upvr (copied, readonly)
				]]
				if arg1_18:IsA("Tool") then
					_G.MyCurrentTool = arg1_18
					var874_upvw(arg1_18)
					arg1_18.ChildAdded:Connect(function(arg1_19) -- Line 1372
						--[[ Upvalues[3]:
							[1]: MobileUIController_upvr (copied, readonly)
							[2]: var874_upvw (copied, read and write)
							[3]: arg1_18 (readonly)
						]]
						if arg1_19.Name == "AwakenedMoves" then
							MobileUIController_upvr:UnbindSkillContextButtons()
							var874_upvw(arg1_18)
						end
					end)
				end
			end)
			var76_upvw.ChildRemoved:Connect(function(arg1_20) -- Line 1381
				--[[ Upvalues[4]:
					[1]: MobileUIController_upvr (copied, readonly)
					[2]: Parent_upvr_2 (copied, readonly)
					[3]: MobileRage_upvr (copied, readonly)
					[4]: var76_upvw (copied, read and write)
				]]
				if arg1_20:IsA("Tool") then
					MobileUIController_upvr:UnbindSkillContextButtons()
					if arg1_20.Parent then
						_G.MyCurrentTool = nil
						Parent_upvr_2.Skills.Visible = false
						Parent_upvr_2.MobileMasteryLevel.Visible = false
						MobileRage_upvr.Visible = false
						return
					end
					task.wait()
					if not arg1_20.Parent and not var76_upvw:FindFirstChildOfClass("Tool") then
						Parent_upvr_2.Skills.Visible = false
						Parent_upvr_2.MobileMasteryLevel.Visible = false
						MobileRage_upvr.Visible = false
					end
				end
			end)
		end
	end
	LocalPlayer_upvr.CharacterAdded:Connect(setupChar)
	setupChar(LocalPlayer_upvr.Character)
	local module_2_upvr = require(game.ReplicatedStorage:WaitForChild("MasteryEXPFunction"))
	function _G.secondsToTime(arg1) -- Line 1452
		local floor_2 = math.floor
		return string.format("%d:%02d:%02d:%02d", floor_2(arg1 / 86400), floor_2(arg1 % 86400 / 3600), floor_2(arg1 % 3600 / 60), floor_2(arg1 % 60))
	end
	local HP_upvr = Parent_upvr_2:WaitForChild("HP")
	local Beli_upvr = Parent_upvr_2:WaitForChild("Beli")
	Beli_upvr.Text = '$'..Text_upvr.commaValue(var202_upvw.Value)
	var202_upvw.Changed:Connect(function() -- Line 1467
		--[[ Upvalues[3]:
			[1]: Beli_upvr (readonly)
			[2]: Text_upvr (readonly)
			[3]: var202_upvw (read and write)
		]]
		Beli_upvr.Text = '$'..Text_upvr.commaValue(var202_upvw.Value)
	end)
	local any_IsTenFootInterface_result1 = GuiService_upvr:IsTenFootInterface()
	if any_IsTenFootInterface_result1 then
		any_IsTenFootInterface_result1 = UserInputService_upvr.GamepadEnabled
	end
	if any_IsTenFootInterface_result1 then
		local Timer = Parent_upvr_2:WaitForChild("Timer")
		Timer.Position = UDim2.new(0, 6, 0.06, 5)
		Timer.TextXAlignment = "Left"
	end
	local TouchEnabled_upvw = UserInputService_upvr.TouchEnabled
	local Fragments_upvr = Parent_upvr_2:WaitForChild("Fragments")
	var203_upvw.Changed:Connect(function() -- Line 1482
		--[[ Upvalues[4]:
			[1]: TouchEnabled_upvw (read and write)
			[2]: var203_upvw (read and write)
			[3]: Fragments_upvr (readonly)
			[4]: Text_upvr (readonly)
		]]
		if not TouchEnabled_upvw then
		else
			if var203_upvw.Value <= 0 then
				Fragments_upvr.Text = ""
				return
			end
			Fragments_upvr.Text = "ƒ"..Text_upvr.commaValue(var203_upvw.Value)
		end
	end)
	if TouchEnabled_upvw then
		if 0 < var203_upvw.Value or _G.CurrentWorld ~= "Main" then
			Fragments_upvr.Text = "ƒ"..Text_upvr.commaValue(var203_upvw.Value)
		else
			Fragments_upvr.Text = ""
		end
	else
		Fragments_upvr.MouseEnter:Connect(function() -- Line 1494, Named "mouseEnter"
			--[[ Upvalues[5]:
				[1]: TouchEnabled_upvw (read and write)
				[2]: var203_upvw (read and write)
				[3]: Fragments_upvr (readonly)
				[4]: Text_upvr (readonly)
				[5]: Beli_upvr (readonly)
			]]
			TouchEnabled_upvw = true
			if 0 < var203_upvw.Value or _G.CurrentWorld ~= "Main" then
				Fragments_upvr.Text = "ƒ"..Text_upvr.commaValue(var203_upvw.Value)
			else
				Fragments_upvr.Text = ""
				return
			end
			Beli_upvr.Visible = false
		end)
		Fragments_upvr.MouseLeave:Connect(function() -- Line 1506, Named "mouseLeave"
			--[[ Upvalues[3]:
				[1]: TouchEnabled_upvw (read and write)
				[2]: Fragments_upvr (readonly)
				[3]: Beli_upvr (readonly)
			]]
			TouchEnabled_upvw = false
			Fragments_upvr.Text = ""
			Beli_upvr.Visible = true
		end)
	end
	local any_new_result1_upvr_7 = require(game.ReplicatedStorage:WaitForChild("DamageCounter")).new(Parent_upvr_2)
	_G.dmgCounter = any_new_result1_upvr_7
	any_new_result1_upvr_7:Start()
	Remotes_upvr:WaitForChild("Combo").OnClientEvent:Connect(function(arg1) -- Line 1525
		--[[ Upvalues[1]:
			[1]: any_new_result1_upvr_7 (readonly)
		]]
		any_new_result1_upvr_7:Increment(arg1)
	end)
	local Shop_upvr = Parent_upvr_2:WaitForChild("Shop")
	local ScrollingFrame_3_upvr = Shop_upvr:WaitForChild("MenuShop"):WaitForChild("ScrollingFrame")
	local var898_upvw = false
	local var899_upvw = false
	local var900_upvw = false
	local var901_upvw = false
	local var902_upvw = false
	local var903_upvw = false
	local InventoryContainer_upvr = Parent_upvr_2:WaitForChild("InventoryContainer")
	local NumberValue_upvr_2 = Instance.new("NumberValue")
	local NumberValue_upvr = Instance.new("NumberValue")
	NumberValue_upvr.Value = 1
	Instance.new("NumberValue").Value = 1
	local var907_result1_upvr = (function() -- Line 1548
		local module = {}
		local module_6_upvr = {}
		local any_new_result1_upvr = require(game.ReplicatedStorage.Modules.Util.Signal).new()
		function module.new(arg1, arg2) -- Line 1554
			--[[ Upvalues[2]:
				[1]: module_6_upvr (readonly)
				[2]: any_new_result1_upvr (readonly)
			]]
			local var911
			if module_6_upvr[arg1] ~= nil then
				var911 = false
			else
				var911 = true
			end
			assert(var911)
			if not arg2 then
				local tbl_17 = {}
				var911 = 0
				tbl_17.Min = var911
				var911 = 100
				tbl_17.Max = var911
				var911 = '+'
				tbl_17.Denote = var911
			end
			local var913 = tbl_17
			local Min = var913.Min
			var911 = var913.Max - 1
			local module_5_upvr = {}
			module_5_upvr._Group = arg1
			module_5_upvr._Min = Min
			module_5_upvr._Max = var911
			module_5_upvr._Clamped = Min
			module_5_upvr._Denote = var913.Denote
			module_5_upvr._Raw = Min
			module_5_upvr._String = tostring(Min)
			local function _(arg1_21) -- Line 1575, Named "set"
				--[[ Upvalues[2]:
					[1]: module_5_upvr (readonly)
					[2]: any_new_result1_upvr (copied, readonly)
				]]
				local var916
				if module_5_upvr._Raw ~= arg1_21 then
					var916 = module_5_upvr._Min
					local clamped = math.clamp(arg1_21, var916, module_5_upvr._Max)
					local function INLINED_7() -- Internal function, doesn't exist in bytecode
						var916 = `{clamped}{module_5_upvr._Denote}`
						return var916
					end
					if clamped ~= module_5_upvr._Max or not INLINED_7() then
						var916 = tostring(clamped)
					end
					module_5_upvr._String = var916
					module_5_upvr._Clamped = clamped
					module_5_upvr._Raw = arg1_21
					any_new_result1_upvr:Fire(module_5_upvr)
				end
			end
			function module_5_upvr.Get(arg1_22) -- Line 1586
				--[[ Upvalues[1]:
					[1]: module_5_upvr (readonly)
				]]
				return module_5_upvr
			end
			function module_5_upvr.Increment(arg1_23, arg2_8) -- Line 1590
				--[[ Upvalues[2]:
					[1]: module_5_upvr (readonly)
					[2]: any_new_result1_upvr (copied, readonly)
				]]
				local var918 = arg2_8 + module_5_upvr._Raw
				local var919
				if module_5_upvr._Raw ~= var918 then
					var919 = module_5_upvr._Min
					local clamped_2 = math.clamp(var918, var919, module_5_upvr._Max)
					local function INLINED_8() -- Internal function, doesn't exist in bytecode
						var919 = `{clamped_2}{module_5_upvr._Denote}`
						return var919
					end
					if clamped_2 ~= module_5_upvr._Max or not INLINED_8() then
						var919 = tostring(clamped_2)
					end
					module_5_upvr._String = var919
					module_5_upvr._Clamped = clamped_2
					module_5_upvr._Raw = var918
					any_new_result1_upvr:Fire(module_5_upvr)
				end
			end
			function module_5_upvr.Set(arg1_24, arg2_9) -- Line 1594
				--[[ Upvalues[2]:
					[1]: module_5_upvr (readonly)
					[2]: any_new_result1_upvr (copied, readonly)
				]]
				local var921
				if module_5_upvr._Raw ~= arg2_9 then
					var921 = module_5_upvr._Min
					local clamped_3 = math.clamp(arg2_9, var921, module_5_upvr._Max)
					local function INLINED_9() -- Internal function, doesn't exist in bytecode
						var921 = `{clamped_3}{module_5_upvr._Denote}`
						return var921
					end
					if clamped_3 ~= module_5_upvr._Max or not INLINED_9() then
						var921 = tostring(clamped_3)
					end
					module_5_upvr._String = var921
					module_5_upvr._Clamped = clamped_3
					module_5_upvr._Raw = arg2_9
					any_new_result1_upvr:Fire(module_5_upvr)
				end
			end
			return module_5_upvr
		end
		function module.Connect(arg1, arg2) -- Line 1601
			--[[ Upvalues[1]:
				[1]: any_new_result1_upvr (readonly)
			]]
			return any_new_result1_upvr:Connect(arg2)
		end
		function module.GetBadge(arg1, arg2) -- Line 1610
			--[[ Upvalues[1]:
				[1]: module_6_upvr (readonly)
			]]
			return module_6_upvr[arg2]
		end
		function module.GetAllBadges(arg1) -- Line 1614
			--[[ Upvalues[1]:
				[1]: module_6_upvr (readonly)
			]]
			return module_6_upvr
		end
		return module
	end)()
	local any_new_result1_upvr_5 = var907_result1_upvr.new("Gifts")
	function ApplyHpBar() -- Line 1628
		--[[ Upvalues[3]:
			[1]: NumberValue_upvr_2 (readonly)
			[2]: HP_upvr (readonly)
			[3]: NumberValue_upvr (readonly)
		]]
		local maximum = math.max(1, NumberValue_upvr_2.Value + 1)
		local var926
		local var927
		if 1 < maximum then
			local rounded_5 = math.floor(HP_upvr.AbsoluteSize.X * (NumberValue_upvr_2.Value + NumberValue_upvr.Value) / maximum + 0.5)
			var926 = math.floor(NumberValue_upvr.Value / (NumberValue_upvr.Value + NumberValue_upvr_2.Value) * rounded_5)
			var927 = rounded_5 - var926
		else
			var926 = math.floor(HP_upvr.AbsoluteSize.X * NumberValue_upvr.Value + 0.5)
			var927 = math.floor(HP_upvr.AbsoluteSize.X * NumberValue_upvr_2.Value + 0.5)
		end
		HP_upvr.Fill.Size = UDim2.new(0, var926, 1, 0)
		if 0 < NumberValue_upvr_2.Value then
			HP_upvr.OverFill.Visible = true
			HP_upvr.OverFill.Size = UDim2.new(0, var927, 1, 0)
			HP_upvr.OverFill.Position = UDim2.fromOffset(var926, 0)
		else
			HP_upvr.OverFill.Visible = false
		end
	end
	NumberValue_upvr_2.Changed:Connect(ApplyHpBar)
	NumberValue_upvr.Changed:Connect(ApplyHpBar)
	local TextLabel_upvr = script.Parent.DodgeNotifier.TextLabel
	local NumberValue_upvr_3 = Instance.new("NumberValue")
	local BoolValue_upvr = Instance.new("BoolValue")
	NumberValue_upvr_3.Changed:Connect(function(arg1) -- Line 1660
		--[[ Upvalues[2]:
			[1]: TextLabel_upvr (readonly)
			[2]: BoolValue_upvr (readonly)
		]]
		TextLabel_upvr.Text = math.floor(arg1 * 100)
		TextLabel_upvr.Shadow.Text = math.floor(arg1 * 100)
		local var933 = 216 * (1 - arg1)
		if 1 <= arg1 then
			var933 = 360 - 73 * (arg1 - 1) * 2
			BoolValue_upvr.Value = true
			TextLabel_upvr.Shadow.TextStrokeColor3 = Color3.fromHSV(var933 / 360, 1, 1)
			TextLabel_upvr.Shadow.TextStrokeTransparency = 0.7
			TextLabel_upvr.TextTransparency = 1
		else
			BoolValue_upvr.Value = false
			TextLabel_upvr.Shadow.TextStrokeColor3 = Color3.new(0, 0, 0)
			TextLabel_upvr.Shadow.TextStrokeTransparency = 1
			TextLabel_upvr.TextTransparency = 0.6
		end
		TextLabel_upvr.Shadow.TextColor3 = Color3.fromHSV(var933 / 360, math.min(arg1 * 0.3 + 0.7, 1), 1)
	end)
	function evalNS(arg1, arg2) -- Line 1681
		if arg2 == 0 then
			return arg1.Keypoints[1].Value
		end
		if arg2 == 1 then
			return arg1.Keypoints[#arg1.Keypoints].Value
		end
		for i_12 = 1, #arg1.Keypoints - 1 do
			local var935 = arg1.Keypoints[i_12]
			local var936 = arg1.Keypoints[i_12 + 1]
			if var935.Time <= arg2 and arg2 < var936.Time then
				return (var936.Value - var935.Value) * ((arg2 - var935.Time) / (var936.Time - var935.Time)) + var935.Value
			end
		end
	end
	local tbl_6_upvr = {}
	local tbl_20_upvw = {}
	local tbl_14_upvr = {"rbxassetid://7043414509", "rbxassetid://7043414587", "rbxassetid://7043414735"}
	function Emit(arg1) -- Line 1710
		--[[ Upvalues[3]:
			[1]: tbl_6_upvr (readonly)
			[2]: TextLabel_upvr (readonly)
			[3]: tbl_20_upvw (read and write)
		]]
		if not tbl_6_upvr[1] then
			local ImageLabel = Instance.new("ImageLabel")
			ImageLabel.BackgroundTransparency = 1
			ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
			ImageLabel.SizeConstraint = Enum.SizeConstraint.RelativeXX
			ImageLabel.Parent = TextLabel_upvr
		else
			table.remove(tbl_6_upvr, 1)
		end
		local var942 = 1 + 0.3 * math.random()
		ImageLabel.Size = UDim2.fromScale(var942, var942)
		ImageLabel.Image = arg1
		ImageLabel.Position = UDim2.fromScale(math.random() * 0.2 + 0.3, math.random() * 0.2 + 0.3)
		ImageLabel.Rotation = math.random() * 720 - 360
		ImageLabel.ImageTransparency = 1
		table.insert(tbl_20_upvw, {ImageLabel, os.clock(), 0.125 * math.random() + 0.075})
	end
	local NumberSequence_new_result1_upvw = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.144, 0), NumberSequenceKeypoint.new(0.298, 1), NumberSequenceKeypoint.new(0.454, 0), NumberSequenceKeypoint.new(0.6, 1), NumberSequenceKeypoint.new(0.698, 0.256), NumberSequenceKeypoint.new(0.799, 0), NumberSequenceKeypoint.new(1, 1)})
	BoolValue_upvr.Changed:Connect(function() -- Line 1733
		--[[ Upvalues[6]:
			[1]: BoolValue_upvr (readonly)
			[2]: tbl_20_upvw (read and write)
			[3]: tbl_6_upvr (readonly)
			[4]: tbl_14_upvr (readonly)
			[5]: TextLabel_upvr (readonly)
			[6]: NumberSequence_new_result1_upvw (readonly)
		]]
		if not BoolValue_upvr.Value then
			game:GetService("RunService"):UnbindFromRenderStep("RageParticleGui")
			for _, v_10 in pairs(tbl_20_upvw) do
				v_10[1].ImageTransparency = 1
				table.insert(tbl_6_upvr, v_10[1])
			end
		else
			local tbl_41_upvr = {os.clock() + math.random() * 0.5 + 0.75, os.clock() + math.random() * 0.5 + 0.75}
			game:GetService("RunService"):BindToRenderStep("RageParticleGui", 1000, function(arg1) -- Line 1742
				--[[ Upvalues[6]:
					[1]: tbl_41_upvr (readonly)
					[2]: tbl_14_upvr (copied, readonly)
					[3]: tbl_20_upvw (copied, read and write)
					[4]: TextLabel_upvr (copied, readonly)
					[5]: NumberSequence_new_result1_upvw (copied, readonly)
					[6]: tbl_6_upvr (copied, readonly)
				]]
				for i_70, v_65 in pairs(tbl_41_upvr) do
					if v_65 < os.clock() then
						Emit(tbl_14_upvr[i_70])
						tbl_41_upvr[i_70] = os.clock() + math.random() * 0.5 + 0.75
					end
				end
				for _, v_66 in pairs(tbl_20_upvw) do
					local minimum_9 = math.min((os.clock() - v_66[2]) / v_66[3], 1)
					v_66[1].ImageColor3 = TextLabel_upvr.Shadow.TextColor3
					v_66[1].ImageTransparency = evalNS(NumberSequence_new_result1_upvw, minimum_9)
					if minimum_9 ~= 1 then
						table.insert({}, v_66)
					else
						table.insert(tbl_6_upvr, v_66[1])
					end
				end
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
				tbl_20_upvw = {}
			end)
		end
	end)
	NumberSequence_new_result1_upvw = 0
	tbl_6_upvr = game:GetService("RunService")
	local var965_upvw = 0
	local var966_upvw = 1
	local var967_upvw = 1
	local Energy_upvr = Parent_upvr_2:WaitForChild("Energy")
	local RaceEnergy_upvr = Parent_upvr_2:WaitForChild("RaceEnergy")
	local module_4_upvr = require(game.ReplicatedStorage:WaitForChild("EXPFunction"))
	local var884_result1_upvr = module_2_upvr(599)
	local CollectionService_upvr = game:GetService("CollectionService")
	local MenuButton_upvr = Parent_upvr_2:WaitForChild("MenuButton")
	tbl_6_upvr = tbl_6_upvr:BindToRenderStep
	tbl_6_upvr("Bars", 10000, function(arg1) -- Line 1771
		--[[ Upvalues[28]:
			[1]: var199_upvw (read and write)
			[2]: var200_upvw (read and write)
			[3]: NumberSequence_new_result1_upvw (read and write)
			[4]: TweenService_upvr (readonly)
			[5]: NumberValue_upvr_3 (readonly)
			[6]: var965_upvw (read and write)
			[7]: NumberValue_upvr_2 (readonly)
			[8]: var966_upvw (read and write)
			[9]: NumberValue_upvr (readonly)
			[10]: var967_upvw (read and write)
			[11]: Energy_upvr (readonly)
			[12]: RaceEnergy_upvr (readonly)
			[13]: HP_upvr (readonly)
			[14]: any_new_result1_upvr_7 (readonly)
			[15]: var201_upvw (read and write)
			[16]: module_4_upvr (readonly)
			[17]: Parent_upvr_2 (readonly)
			[18]: Text_upvr (readonly)
			[19]: module_3_upvr (readonly)
			[20]: var76_upvw (read and write)
			[21]: var884_result1_upvr (readonly)
			[22]: module_2_upvr (readonly)
			[23]: CollectionService_upvr (readonly)
			[24]: LocalPlayer_upvr (readonly)
			[25]: var898_upvw (read and write)
			[26]: any_new_result1_upvr_5 (readonly)
			[27]: InventoryContainer_upvr (readonly)
			[28]: MenuButton_upvr (readonly)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 289 start (CF ANALYSIS FAILED)
		if not var199_upvw or not var199_upvw.Parent then return end
		local var974 = var200_upvw.Value / var200_upvw.MaxValue
		local var975 = var199_upvw.Parent:GetAttribute("OverflowHP") or 0
		script.Parent.DodgeNotifier.Visible = false
		if var199_upvw:GetAttribute("SoruCharges") then
			script.Parent.DodgeNotifier.Visible = true
			script.Parent.DodgeNotifier.Fill.Visible = true
			local SoruCharges = var199_upvw:GetAttribute("SoruCharges")
			local UIGradient = script.Parent.DodgeNotifier.Fill.UIGradient
			if SoruCharges == 0 then
				UIGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0.3), NumberSequenceKeypoint.new(1, 0.3)})
				UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))})
			elseif SoruCharges == 3 then
				UIGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)})
				UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)), ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))})
			else
				UIGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(SoruCharges / 3, 0), NumberSequenceKeypoint.new(SoruCharges / 3 + 0.001, 0.3), NumberSequenceKeypoint.new(1, 0.3)})
				UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)), ColorSequenceKeypoint.new(SoruCharges / 3, Color3.new(1, 1, 1)), ColorSequenceKeypoint.new(SoruCharges / 3 + 0.001, Color3.new(0, 0, 0)), ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))})
			end
		else
			script.Parent.DodgeNotifier.Fill.Visible = false
		end
		if var199_upvw:GetAttribute("RagePercentage") then
			script.Parent.DodgeNotifier.Visible = true
			script.Parent.DodgeNotifier.TextLabel.Visible = true
			if NumberSequence_new_result1_upvw ~= var199_upvw:GetAttribute("RagePercentage") then
				TweenService_upvr:Create(NumberValue_upvr_3, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
					Value = var199_upvw:GetAttribute("RagePercentage");
				}):Play()
				NumberSequence_new_result1_upvw = var199_upvw:GetAttribute("RagePercentage")
				-- KONSTANTWARNING: GOTO [347] #242
			end
		else
			script.Parent.DodgeNotifier.TextLabel.Visible = false
			NumberValue_upvr_3.Value = 0
		end
		if var975 / var199_upvw.MaxHealth ~= var965_upvw and var199_upvw.MaxHealth ~= math.huge then
			var965_upvw = var975 / var199_upvw.MaxHealth
			TweenService_upvr:Create(NumberValue_upvr_2, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				Value = var975 / var199_upvw.MaxHealth;
			}):Play()
		end
		if var199_upvw.Health / var199_upvw.MaxHealth ~= var966_upvw and var199_upvw.MaxHealth ~= math.huge then
			var966_upvw = var199_upvw.Health / var199_upvw.MaxHealth
			TweenService_upvr:Create(NumberValue_upvr, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				Value = var199_upvw.Health / var199_upvw.MaxHealth;
			}):Play()
		end
		if var967_upvw ~= var974 then
			Energy_upvr.Fill:TweenSize(UDim2.new(var974, 0, 1, 0), "Out", "Linear", 0.3, true)
			var967_upvw = var974
		end
		if var199_upvw.Parent then
			if var199_upvw.Parent:FindFirstChild("RaceEnergy") then
				RaceEnergy_upvr.Visible = true
				local clamped_4 = math.clamp(var199_upvw.Parent.RaceEnergy.Value, 0, 1)
				RaceEnergy_upvr.Fill:TweenSize(UDim2.fromScale(clamped_4, 1), "Out", "Linear", 0.3, true)
				RaceEnergy_upvr.Missing:TweenSize(UDim2.new(1 - clamped_4, 2, 1.2, 0), "Out", "Linear", 0.3, true)
			else
				RaceEnergy_upvr.Visible = false
			end
			local var988 = os.clock() % 3 / 3
			if var199_upvw.Parent:FindFirstChild("RaceTransformed") then
				if var199_upvw.Parent.RaceTransformed.Value then
					RaceEnergy_upvr.Fill.BackgroundColor3 = Color3.fromHSV(var988, 1, 1)
					RaceEnergy_upvr.BorderColor3 = Color3.fromHSV(var988, 1, 1)
				else
					RaceEnergy_upvr.Fill.BackgroundColor3 = Color3.new(1, 0, 0)
					RaceEnergy_upvr.BorderColor3 = Color3.fromHSV(0, 0, 0)
				end
			else
				RaceEnergy_upvr.Fill.BackgroundColor3 = Color3.new(1, 0, 0)
				RaceEnergy_upvr.BorderColor3 = Color3.fromHSV(0, 0, 0)
			end
		else
			RaceEnergy_upvr.Fill.BackgroundColor3 = Color3.new(1, 0, 0)
			RaceEnergy_upvr.BorderColor3 = Color3.fromHSV(0, 0, 0)
		end
		HP_upvr.TextLabel.Text = "Health "..math.abs(math.ceil(var199_upvw.Health - 0.5))..'/'..math.ceil(var199_upvw.MaxHealth - 0.5)
		local ceiled = math.ceil(var200_upvw.MaxValue - 0.5)
		Energy_upvr.TextLabel.Text = "Energy "..math.abs(math.ceil(var200_upvw.Value - 0.5))..'/'..ceiled
		any_new_result1_upvr_7.MaxNumber = var201_upvw.Level.Value * 6
		local var970_result1 = module_4_upvr(var201_upvw.Level.Value)
		if 2600 <= var201_upvw.Level.Value then
			ceiled = " (MAX)"
		else
			ceiled = ""
		end
		Parent_upvr_2.Level.Text = "Lv. "..var201_upvw.Level.Value..ceiled
		Parent_upvr_2.Level.Bar.Size = UDim2.new(math.min(1, var201_upvw.Exp.Value / var970_result1), 0, 0.2, 0)
		Parent_upvr_2.Level.Exp.Text = Text_upvr.commaValue(var201_upvw.Exp.Value)..'/'..Text_upvr.commaValue(var970_result1)
		-- KONSTANTERROR: [0] 1. Error Block 289 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [778] 558. Error Block 46 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [778] 558. Error Block 46 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [787] 563. Error Block 253 start (CF ANALYSIS FAILED)
		local var991 = (_G.ServerData.ExpBoost) - (tick() - _G.ServerData.ExpBoostTick)
		if var991 <= 0 then
			if 0 < _G.ServerData.ExpBoost then
				module_3_upvr.new("<Color=Purple>Your 2x EXP has ended!<Color=/>", 10):Display()
				module_3_upvr.new("<Color=Purple>Open the shop to buy more.<Color=/>", 10):Display()
			end
			_G.ServerData.ExpBoost = 0
		else
			local floor = math.floor
			Parent_upvr_2.Level.Exp.Text = Parent_upvr_2.Level.Exp.Text.." (2x ends in "..string.format("%d:%02d:%02d:%02d", floor(var991 / 86400), floor(var991 % 86400 / 3600), floor(var991 % 3600 / 60), floor(var991 % 60))..')'
		end
		-- KONSTANTERROR: [787] 563. Error Block 253 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [889] 638. Error Block 53 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [889] 638. Error Block 53 end (CF ANALYSIS FAILED)
	end)
	tbl_6_upvr = false
	local var993_upvw = tbl_6_upvr
	local function var1515_upvw() -- Line 2051
	end
	local Crew = Parent_upvr_2:WaitForChild("Crew")
	local Create_upvr = Crew:WaitForChild("Create")
	local Main_upvr = Crew:WaitForChild("Main")
	function statsMenuFunction() -- Line 2057
		--[[ Upvalues[2]:
			[1]: var898_upvw (read and write)
			[2]: Parent_upvr_2 (readonly)
		]]
		closeOthers("Stats")
		task.defer(function() -- Line 2079
			--[[ Upvalues[2]:
				[1]: var898_upvw (copied, read and write)
				[2]: Parent_upvr_2 (copied, readonly)
			]]
			var898_upvw = not var898_upvw
			if var898_upvw then
				Parent_upvr_2.Stats:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), "Out", "Quad", 0.3, true)
			else
				Parent_upvr_2.Stats:TweenPosition(UDim2.new(0.5, 0, 1.5, 0), "In", "Quad", 0.3, true)
			end
		end)
	end
	function shopMenuFunction() -- Line 2091
		--[[ Upvalues[2]:
			[1]: var899_upvw (read and write)
			[2]: Shop_upvr (readonly)
		]]
		closeOthers("Shop")
		var899_upvw = not var899_upvw
		task.defer(function() -- Line 2114
			--[[ Upvalues[2]:
				[1]: Shop_upvr (copied, readonly)
				[2]: var899_upvw (copied, read and write)
			]]
			Shop_upvr:SetAttribute("IsVisible", var899_upvw)
			if var899_upvw then
				Shop_upvr.Visible = true
				Shop_upvr:TweenPosition(UDim2.new(0.5, 0, 0.475, 0), "Out", "Quad", 0.3, true)
			else
				Shop_upvr:TweenPosition(UDim2.new(0.5, 0, 1.5, 0), "In", "Quad", 0.3, true)
			end
		end)
	end
	function crewMenuFunction() -- Line 2124
		--[[ Upvalues[8]:
			[1]: var901_upvw (read and write)
			[2]: Parent_upvr_2 (readonly)
			[3]: LocalPlayer_upvr (readonly)
			[4]: var993_upvw (read and write)
			[5]: Remotes_upvr (readonly)
			[6]: var1515_upvw (read and write)
			[7]: Create_upvr (readonly)
			[8]: Main_upvr (readonly)
		]]
		closeOthers("Crews")
		task.defer(function() -- Line 2146
			--[[ Upvalues[8]:
				[1]: var901_upvw (copied, read and write)
				[2]: Parent_upvr_2 (copied, readonly)
				[3]: LocalPlayer_upvr (copied, readonly)
				[4]: var993_upvw (copied, read and write)
				[5]: Remotes_upvr (copied, readonly)
				[6]: var1515_upvw (copied, read and write)
				[7]: Create_upvr (copied, readonly)
				[8]: Main_upvr (copied, readonly)
			]]
			var901_upvw = not var901_upvw
			if var901_upvw then
				Parent_upvr_2.Crew:TweenPosition(UDim2.new(0.5, 0, 0.488, 0), "Out", "Quad", 0.3, true)
				if LocalPlayer_upvr:WaitForChild("Data"):WaitForChild("CrewID").Value ~= "" then
					var993_upvw = true
					local any_InvokeServer_result1_5, _, any_InvokeServer_result3, any_InvokeServer_result4 = Remotes_upvr.Crew:InvokeServer("GetData")
					if any_InvokeServer_result1_5 then
						var1515_upvw(any_InvokeServer_result3, any_InvokeServer_result4)
						Create_upvr.Visible = false
						Main_upvr.Visible = true
						Main_upvr.ConfirmAbandon.Visible = false
					end
					var993_upvw = false
				else
					Create_upvr.Visible = true
					Main_upvr.Visible = false
					Main_upvr.ConfirmAbandon.Visible = false
				end
			end
			Parent_upvr_2.Crew:TweenPosition(UDim2.new(0.5, 0, 1.5, 0), "In", "Quad", 0.3, true)
		end)
	end
	local var1005_upvw
	function alliesMenuFunction() -- Line 2176
		--[[ Upvalues[3]:
			[1]: var900_upvw (read and write)
			[2]: Allies_upvr (readonly)
			[3]: var1005_upvw (read and write)
		]]
		closeOthers("Allies")
		task.defer(function() -- Line 2198
			--[[ Upvalues[3]:
				[1]: var900_upvw (copied, read and write)
				[2]: Allies_upvr (copied, readonly)
				[3]: var1005_upvw (copied, read and write)
			]]
			var900_upvw = not var900_upvw
			if var900_upvw then
				Allies_upvr:TweenPosition(UDim2.new(0.5, 0, 0.475, 0), "Out", "Quad", 0.3, true)
				var1005_upvw:load()
			else
				Allies_upvr:TweenPosition(UDim2.new(0.5, 0, 1.5, 0), "In", "Quad", 0.3, true)
			end
		end)
	end
	function itemsMenuFunction(arg1) -- Line 2210
		--[[ Upvalues[2]:
			[1]: var903_upvw (read and write)
			[2]: InventoryContainer_upvr (readonly)
		]]
		closeOthers("Items")
		if arg1 ~= true then
			var903_upvw = not var903_upvw
			InventoryContainer_upvr:SetAttribute("itemsVisible", var903_upvw)
		end
		task.defer(function() -- Line 2238
			--[[ Upvalues[2]:
				[1]: var903_upvw (copied, read and write)
				[2]: InventoryContainer_upvr (copied, readonly)
			]]
			if var903_upvw then
				InventoryContainer_upvr:TweenPosition(UDim2.new(0.5, 0, 0.475, 0), "Out", "Quad", 0.3, true)
				InventoryContainer_upvr.Visible = true
			else
				InventoryContainer_upvr:TweenPosition(UDim2.new(0.5, 0, 1.6, 0), "In", "Quad", 0.3, true)
			end
		end)
	end
	local tbl_30_upvr = {
		Stats = function(arg1) -- Line 2251, Named "Stats"
			--[[ Upvalues[1]:
				[1]: var898_upvw (read and write)
			]]
			local pcall_result1_9, pcall_result2 = pcall(function() -- Line 2252
				--[[ Upvalues[2]:
					[1]: arg1 (read and write)
					[2]: var898_upvw (copied, read and write)
				]]
				local var1010 = arg1
				if var1010 == nil then
					if var898_upvw ~= true then
						var1010 = false
					else
						var1010 = true
					end
					arg1 = var1010
				end
				if arg1 and var898_upvw then
					statsMenuFunction()
				elseif not arg1 and not var898_upvw then
					statsMenuFunction()
				end
			end)
			if not pcall_result1_9 then
				print(pcall_result2)
			end
		end;
		Shop = function(arg1) -- Line 2264, Named "Shop"
			--[[ Upvalues[1]:
				[1]: var899_upvw (read and write)
			]]
			local pcall_result1_4, pcall_result2_8 = pcall(function() -- Line 2265
				--[[ Upvalues[2]:
					[1]: arg1 (read and write)
					[2]: var899_upvw (copied, read and write)
				]]
				if arg1 == nil then
					arg1 = not var899_upvw
				end
				if arg1 and var899_upvw then
					shopMenuFunction()
				elseif not arg1 then
					if not var899_upvw then
						shopMenuFunction()
					end
				end
			end)
			if not pcall_result1_4 then
				print(pcall_result2_8)
			end
		end;
		Allies = function(arg1) -- Line 2277, Named "Allies"
			--[[ Upvalues[1]:
				[1]: var900_upvw (read and write)
			]]
			local pcall_result1_2, pcall_result2_7 = pcall(function() -- Line 2278
				--[[ Upvalues[2]:
					[1]: arg1 (read and write)
					[2]: var900_upvw (copied, read and write)
				]]
				local var1017 = arg1
				if var1017 == nil then
					if var900_upvw ~= true then
						var1017 = false
					else
						var1017 = true
					end
					arg1 = var1017
				end
				if arg1 and var900_upvw then
					alliesMenuFunction()
				elseif not arg1 and not var900_upvw then
					alliesMenuFunction()
				end
			end)
			if not pcall_result1_2 then
				print(pcall_result2_7)
			end
		end;
		Crews = function(arg1) -- Line 2290, Named "Crews"
			--[[ Upvalues[1]:
				[1]: var901_upvw (read and write)
			]]
			local pcall_result1_5, pcall_result2_6 = pcall(function() -- Line 2291
				--[[ Upvalues[2]:
					[1]: arg1 (read and write)
					[2]: var901_upvw (copied, read and write)
				]]
				local var1021 = arg1
				if var1021 == nil then
					if var901_upvw ~= true then
						var1021 = false
					else
						var1021 = true
					end
					arg1 = var1021
				end
				if arg1 and var901_upvw then
					crewMenuFunction()
				elseif not arg1 and not var901_upvw then
					crewMenuFunction()
				end
			end)
			if not pcall_result1_5 then
				print(pcall_result2_6)
			end
		end;
		Items = function(arg1) -- Line 2303, Named "Items"
			--[[ Upvalues[1]:
				[1]: var903_upvw (read and write)
			]]
			local pcall_result1_3, pcall_result2_5 = pcall(function() -- Line 2304
				--[[ Upvalues[2]:
					[1]: arg1 (read and write)
					[2]: var903_upvw (copied, read and write)
				]]
				local var1025 = arg1
				if var1025 == nil then
					if var903_upvw ~= true then
						var1025 = false
					else
						var1025 = true
					end
					arg1 = var1025
				end
				if arg1 and var903_upvw then
					itemsMenuFunction()
				elseif not arg1 and not var903_upvw then
					itemsMenuFunction()
				end
			end)
			if not pcall_result1_3 then
				print(pcall_result2_5)
			end
		end;
		Skins = function(arg1, arg2) -- Line 2316, Named "Skins"
			--[[ Upvalues[1]:
				[1]: Skins_upvr (readonly)
			]]
			local pcall_result1_10, pcall_result2_10 = pcall(function() -- Line 2317
				--[[ Upvalues[3]:
					[1]: arg1 (readonly)
					[2]: Skins_upvr (copied, readonly)
					[3]: arg2 (readonly)
				]]
				if arg1 then
					Skins_upvr:Close()
				else
					Skins_upvr:Open(arg2)
				end
			end)
			if not pcall_result1_10 then
				print(pcall_result2_10)
			end
		end;
		Juice = function(arg1, arg2, arg3) -- Line 2328, Named "Juice"
			local pcall_result1_7, pcall_result2_2 = pcall(function() -- Line 2329
				--[[ Upvalues[3]:
					[1]: arg1 (readonly)
					[2]: arg2 (readonly)
					[3]: arg3 (readonly)
				]]
				if arg1 then
					require(game.ReplicatedStorage.Controllers.UI.JuiceWindow):Close()
				else
					require(game.ReplicatedStorage.Controllers.UI.JuiceWindow):Open(arg2, arg3)
				end
			end)
			if not pcall_result1_7 then
				print(pcall_result2_2)
			end
		end;
		Gift = function(arg1, arg2, arg3) -- Line 2340, Named "Gift"
			local pcall_result1_8, pcall_result2_9 = pcall(function() -- Line 2341
				--[[ Upvalues[3]:
					[1]: arg1 (readonly)
					[2]: arg2 (readonly)
					[3]: arg3 (readonly)
				]]
				if arg1 then
					require(game.ReplicatedStorage.Controllers.UI.GiftWindow):Close()
				else
					local tbl_23 = {}
					tbl_23.shopData = arg2
					tbl_23.purchaseLocation = arg3
					require(game.ReplicatedStorage.Controllers.UI.GiftWindow):Open(tbl_23)
				end
			end)
			if not pcall_result1_8 then
				print(pcall_result2_9)
			end
		end;
		GiftClaim = function(arg1) -- Line 2355, Named "GiftClaim"
			local pcall_result1, pcall_result2_4 = pcall(function() -- Line 2356
				--[[ Upvalues[1]:
					[1]: arg1 (readonly)
				]]
				if arg1 then
					require(game.ReplicatedStorage.Controllers.UI.GiftClaimWindow):Close()
				else
					require(game.ReplicatedStorage.Controllers.UI.GiftClaimWindow):Open()
				end
			end)
			if not pcall_result1 then
				print(pcall_result2_4)
			end
		end;
	}
	local var1041_upvw
	function tbl_30_upvr.ServerBrowser(arg1) -- Line 2367
		--[[ Upvalues[1]:
			[1]: var1041_upvw (read and write)
		]]
		local pcall_result1_6, pcall_result2_3 = pcall(function() -- Line 2368
			--[[ Upvalues[2]:
				[1]: var1041_upvw (copied, read and write)
				[2]: arg1 (read and write)
			]]
			local var1043 = var1041_upvw
			if not var1043 then
				var1043 = game.Players.LocalPlayer.PlayerGui:FindFirstChild("ServerBrowser")
			end
			var1041_upvw = var1043
			if not var1041_upvw then
			else
				local var1044 = arg1
				if var1044 == nil then
					if var1041_upvw.Enabled ~= true then
						var1044 = false
					else
						var1044 = true
					end
					arg1 = var1044
				end
				if arg1 then
					var1041_upvw.Enabled = false
					return
				end
				var1041_upvw.Enabled = true
			end
		end)
		if not pcall_result1_6 then
			print(pcall_result2_3)
		end
	end
	function tbl_30_upvr.FruitShop() -- Line 2385
		require(script.FruitShop):Close()
	end
	function closeOthers(arg1) -- Line 2390
		--[[ Upvalues[1]:
			[1]: tbl_30_upvr (readonly)
		]]
		for i_14 in pairs(tbl_30_upvr) do
			if not arg1 or arg1 ~= i_14 then
				tbl_30_upvr[i_14](true)
			end
		end
	end
	_G.closeOthers = closeOthers
	function closeMenu(arg1, ...) -- Line 2398
		--[[ Upvalues[1]:
			[1]: tbl_30_upvr (readonly)
		]]
		if tbl_30_upvr[arg1] then
			tbl_30_upvr[arg1](true, ...)
		end
	end
	_G.closeMenu = closeMenu
	function openMenu(arg1, ...) -- Line 2403
		--[[ Upvalues[1]:
			[1]: tbl_30_upvr (readonly)
		]]
		closeOthers(arg1)
		if tbl_30_upvr[arg1] then
			tbl_30_upvr[arg1](false, ...)
		end
	end
	_G.openMenu = openMenu
	function openMenuSimple(arg1, ...) -- Line 2410
		--[[ Upvalues[1]:
			[1]: tbl_30_upvr (readonly)
		]]
		if tbl_30_upvr[arg1] then
			tbl_30_upvr[arg1](false, ...)
		end
	end
	_G.openMenuSimple = openMenuSimple
	function _G.toggleMenu(arg1, ...) -- Line 2415
		--[[ Upvalues[1]:
			[1]: tbl_30_upvr (readonly)
		]]
		closeOthers(arg1)
		if tbl_30_upvr[arg1] then
			tbl_30_upvr[arg1](nil, ...)
		end
	end
	function menuFunction() -- Line 2422
		--[[ Upvalues[2]:
			[1]: Parent_upvr_2 (readonly)
			[2]: var902_upvw (read and write)
		]]
		Parent_upvr_2.StatsButton.Visible = not Parent_upvr_2.StatsButton.Visible
		Parent_upvr_2.ShopButton.Visible = not Parent_upvr_2.ShopButton.Visible
		Parent_upvr_2.InventoryButton.Visible = not Parent_upvr_2.InventoryButton.Visible
		var902_upvw = Parent_upvr_2.ShopButton.Visible
		if Parent_upvr_2.StatsButton.Visible then
			Parent_upvr_2.MenuButton.TextLabel.Text = "Close"
		else
			Parent_upvr_2.MenuButton.TextLabel.Text = "Menu"
			closeMenu("Shop")
			closeMenu("Stats")
			closeMenu("Items")
			closeMenu("Crews")
			closeMenu("Allies")
		end
	end
	Parent_upvr_2:WaitForChild("InventoryButton").Activated:Connect(function() -- Line 2440
		itemsMenuFunction()
	end)
	Parent_upvr_2:WaitForChild("MenuButton").Activated:Connect(function() -- Line 2441
		menuFunction()
	end)
	Parent_upvr_2:WaitForChild("StatsButton").Activated:Connect(function() -- Line 2442
		statsMenuFunction()
	end)
	Parent_upvr_2:WaitForChild("ShopButton").Activated:Connect(function() -- Line 2443
		shopMenuFunction()
	end)
	Parent_upvr_2:WaitForChild("AlliesButton").Activated:Connect(function() -- Line 2444
		alliesMenuFunction()
	end)
	Parent_upvr_2:WaitForChild("CrewButton").Activated:Connect(function() -- Line 2445
		crewMenuFunction()
	end)
	game.ReplicatedStorage.Events.ToggleCrewWindow.Event:Connect(function() -- Line 2446
		crewMenuFunction()
	end)
	game.ReplicatedStorage.Events.ToggleAllies.Event:Connect(function() -- Line 2447
		alliesMenuFunction()
	end)
	game.ReplicatedStorage.Events.ToggleInventoryWindow.Event:Connect(function() -- Line 2448
		itemsMenuFunction()
	end)
	Parent_upvr_2.MobileStatsButton.Activated:Connect(function() -- Line 2449
		statsMenuFunction()
	end)
	Parent_upvr_2.MobileShopButton.Activated:Connect(function() -- Line 2450
		shopMenuFunction()
	end)
	local tbl_31_upvw = {
		Christmas = {
			Enabled = true;
			Instances = {Parent_upvr_2.MobileShopButton.Themes.Christmas, Parent_upvr_2.ShopButton.Themes.Christmas};
		};
	}
	local SaleUtil_upvr = require(script.Parent.SalesGui.Lib.SaleUtil)
	local function salesChanged() -- Line 2461
		--[[ Upvalues[2]:
			[1]: SaleUtil_upvr (readonly)
			[2]: tbl_31_upvw (readonly)
		]]
		for _, v_11 in pairs(tbl_31_upvw) do
			for _, v_12 in pairs(v_11.Instances) do
				local any_anySalesActive_result1 = SaleUtil_upvr.anySalesActive()
				if any_anySalesActive_result1 then
					any_anySalesActive_result1 = v_11.Enabled
				end
				v_12.Visible = any_anySalesActive_result1
			end
		end
	end
	task.spawn(salesChanged)
	SaleUtil_upvr.onSalesChanged(salesChanged)
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Stats"):WaitForChild("Exit")
	tbl_31_upvw = SaleUtil_upvr.Activated
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2474
		--[[ Upvalues[1]:
			[1]: var898_upvw (read and write)
		]]
		if var898_upvw then
			statsMenuFunction()
		end
	end)
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Shop"):WaitForChild("Exit")
	tbl_31_upvw = SaleUtil_upvr.Activated
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2479
		--[[ Upvalues[1]:
			[1]: var899_upvw (read and write)
		]]
		if var899_upvw then
			shopMenuFunction()
		end
	end)
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Allies"):WaitForChild("Exit")
	tbl_31_upvw = SaleUtil_upvr.Activated
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2484
		--[[ Upvalues[1]:
			[1]: var900_upvw (read and write)
		]]
		if var900_upvw then
			alliesMenuFunction()
		end
	end)
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Crew"):WaitForChild("Create"):WaitForChild("Exit")
	tbl_31_upvw = SaleUtil_upvr.Activated
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2489
		--[[ Upvalues[1]:
			[1]: var901_upvw (read and write)
		]]
		if var901_upvw then
			crewMenuFunction()
		end
	end)
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Crew"):WaitForChild("Main"):WaitForChild("Exit")
	tbl_31_upvw = SaleUtil_upvr.Activated
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2494
		--[[ Upvalues[1]:
			[1]: var901_upvw (read and write)
		]]
		if var901_upvw then
			crewMenuFunction()
		end
	end)
	tbl_31_upvw = InventoryContainer_upvr:GetAttributeChangedSignal("itemsVisible")
	tbl_31_upvw = tbl_31_upvw:Connect
	tbl_31_upvw(function() -- Line 2499
		--[[ Upvalues[2]:
			[1]: var903_upvw (read and write)
			[2]: InventoryContainer_upvr (readonly)
		]]
		if var903_upvw ~= InventoryContainer_upvr:GetAttribute("itemsVisible") then
			var903_upvw = InventoryContainer_upvr:GetAttribute("itemsVisible")
			itemsMenuFunction(true)
		end
	end)
	tbl_31_upvw = true
	function SaleUtil_upvr(arg1, arg2, arg3) -- Line 2507, Named "manageGamepadMenus"
		--[[ Upvalues[4]:
			[1]: tbl_31_upvw (read and write)
			[2]: var902_upvw (read and write)
			[3]: var898_upvw (read and write)
			[4]: var899_upvw (read and write)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [4] 3. Error Block 2 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [4] 3. Error Block 2 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [35] 25. Error Block 9 start (CF ANALYSIS FAILED)
		wait(0.3)
		tbl_31_upvw = true
		-- KONSTANTERROR: [35] 25. Error Block 9 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [41] 30. Error Block 10 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [41] 30. Error Block 10 end (CF ANALYSIS FAILED)
	end
	manageGamepadMenus = SaleUtil_upvr -- Setting global
	SaleUtil_upvr = next
	local var1089
	for _, v_13_upvr in SaleUtil_upvr, Parent_upvr_2.Stats.Container:GetChildren() do
		local Add = v_13_upvr:FindFirstChild("Add")
		if Add then
			Add.Activated:Connect(function() -- Line 2532
				--[[ Upvalues[3]:
					[1]: Parent_upvr_2 (readonly)
					[2]: Remotes_upvr (readonly)
					[3]: v_13_upvr (readonly)
				]]
				local var1092 = tonumber(Parent_upvr_2.Stats.TextBox.Text) or 1
				if not tostring(var1092):find("%.") then
					Remotes_upvr.CommF_:InvokeServer("AddPoint", v_13_upvr.Name, var1092)
				end
			end)
		end
	end
	SaleUtil_upvr = Parent_upvr_2:WaitForChild("Stats"):WaitForChild("Points"):WaitForChild("Reset").Activated
	SaleUtil_upvr = SaleUtil_upvr:Connect
	SaleUtil_upvr(function() -- Line 2542
		--[[ Upvalues[2]:
			[1]: var201_upvw (read and write)
			[2]: Remotes_upvr (readonly)
		]]
		if 0 < var201_upvw.StatRefunds.Value then
			Remotes_upvr.CommF_:InvokeServer("redeemRefundPoints", "Refund Points")
		else
			local _ = {
				StorageName = "Refund Points";
				PurchaseLocation = nil;
				FunnelId = nil;
			}
		end
	end)
	SaleUtil_upvr = false
	local var1095_upvw = SaleUtil_upvr
	local var1096_upvw = false
	if Flags_upvr.COMPASS_REWORK_ENABLED then
		local NavigationWindow_upvr = require(game.ReplicatedStorage.Controllers.UI.NavigationWindow)
		local function updateDamageCounterPosition() -- Line 2561
			--[[ Upvalues[2]:
				[1]: NavigationWindow_upvr (readonly)
				[2]: any_new_result1_upvr_7 (readonly)
			]]
			if NavigationWindow_upvr.guideActive then
				any_new_result1_upvr_7:SetPosition(UDim2.new(0.02, 10, 0.455, -8))
			else
				any_new_result1_upvr_7:SetPosition(UDim2.new(0.2, 10, 0.6, 0))
			end
		end
		NavigationWindow_upvr.guideVisible:Connect(updateDamageCounterPosition)
		task.spawn(updateDamageCounterPosition)
	else
		NavigationWindow_upvr = Parent_upvr_2:WaitForChild("Quest")
		local var1098_upvw = NavigationWindow_upvr
		local UI_upvw = module_upvr_2.UI
		local SideCompass_upvw = module_upvr_2.SideCompass
		NavigationWindow_upvr = module_upvr_2.SideCompass:WaitForChild("Frame"):WaitForChild("Button")
		local var1101 = NavigationWindow_upvr
		NavigationWindow_upvr = module_upvr_2:ParentUI
		NavigationWindow_upvr(Parent_upvr_2)
		function NavigationWindow_upvr(arg1) -- Line 2578, Named "toggleQuest"
			--[[ Upvalues[7]:
				[1]: UI_upvw (read and write)
				[2]: module_upvr_2 (readonly)
				[3]: var1096_upvw (read and write)
				[4]: var1098_upvw (read and write)
				[5]: SideCompass_upvw (read and write)
				[6]: var1095_upvw (read and write)
				[7]: Parent_upvr_2 (readonly)
			]]
			local Abandon = UI_upvw:WaitForChild("LeftFrame"):WaitForChild("Abandon")
			if arg1 == true then
				Abandon.Visible = true
				module_upvr_2:ToggleCompassShown(false)
				module_upvr_2:ResetCompass()
				if not var1096_upvw then
					var1098_upvw.Visible = true
					SideCompass_upvw.Visible = false
				end
				var1095_upvw = true
				UI_upvw.TopFrame.Header.Text = "Mission"
				UI_upvw.BottomFrame.Header.Text = "Reward:"
				Parent_upvr_2:WaitForChild("Guide"):WaitForChild("LeftFrame"):WaitForChild("Track").Visible = false
			else
				module_upvr_2:ChangeDisplayedNPC(nil)
				module_upvr_2:ToggleCompassShown(true)
				Abandon.Visible = false
				if not var1096_upvw then
					SideCompass_upvw.Visible = true
				end
				var1098_upvw.Visible = false
				var1095_upvw = false
				UI_upvw.TopFrame.Header.Text = "Recommended Quest"
				UI_upvw.BottomFrame.Header.Text = ""
				UI_upvw.BottomFrame.Description.Text = ""
				Parent_upvr_2:WaitForChild("Guide"):WaitForChild("LeftFrame"):WaitForChild("Track").Visible = true
			end
		end
		local var1102_upvw = NavigationWindow_upvr
		local function openFruitShop_upvr(arg1) -- Line 2608, Named "toggleGuide"
			--[[ Upvalues[6]:
				[1]: SideCompass_upvw (read and write)
				[2]: UI_upvw (read and write)
				[3]: var1098_upvw (read and write)
				[4]: var1096_upvw (read and write)
				[5]: any_new_result1_upvr_7 (readonly)
				[6]: var1095_upvw (read and write)
			]]
			_G.TestGamePrint("toggleGuide", arg1)
			SideCompass_upvw:WaitForChild("Notify").Visible = false
			if arg1 == true then
				UI_upvw.Visible = true
				SideCompass_upvw.Visible = false
				var1098_upvw.Visible = false
				var1096_upvw = true
				any_new_result1_upvr_7:SetPosition(UDim2.new(0.02, 10, 0.455, -8))
			else
				UI_upvw.Visible = arg1
				if var1095_upvw then
					var1098_upvw.Visible = true
				else
					SideCompass_upvw.Visible = true
				end
				any_new_result1_upvr_7:SetPosition(UDim2.new(0.2, 10, 0.6, 0))
				var1096_upvw = false
			end
		end
		var1101.TextButton.MouseButton1Click:Connect(function() -- Line 2631
			--[[ Upvalues[2]:
				[1]: openFruitShop_upvr (readonly)
				[2]: var1096_upvw (read and write)
			]]
			_G.TestGamePrint("compassButton.Activated")
			openFruitShop_upvr(not var1096_upvw)
		end)
		var1101.Activated:Connect(function() -- Line 2635
			--[[ Upvalues[2]:
				[1]: openFruitShop_upvr (readonly)
				[2]: var1096_upvw (read and write)
			]]
			_G.TestGamePrint("compassButton.Activated")
			openFruitShop_upvr(not var1096_upvw)
		end)
		UI_upvw:WaitForChild("Close").Activated:Connect(function() -- Line 2640
			--[[ Upvalues[1]:
				[1]: openFruitShop_upvr (readonly)
			]]
			_G.TestGamePrint("guideWindow:WaitForChild(\"Close\").Activated")
			openFruitShop_upvr(false)
		end)
		var1098_upvw:WaitForChild("Expand").Activated:Connect(function() -- Line 2645
			--[[ Upvalues[1]:
				[1]: openFruitShop_upvr (readonly)
			]]
			_G.TestGamePrint("questWindow:WaitForChild(\"Expand\").Activated")
			openFruitShop_upvr(true)
		end)
		local function updateGuideQuestNPC_upvr(arg1) -- Line 2650, Named "updateGuideQuestNPC"
			--[[ Upvalues[4]:
				[1]: module_upvr_2 (readonly)
				[2]: var76_upvw (read and write)
				[3]: var201_upvw (read and write)
				[4]: PlayerGui_upvr (readonly)
			]]
			local _
			for i_18, v_14 in next, arg1.Info.Task do
				_ = i_18
			end
			if arg1.Info.BountyTargetPlayer then
				v_14 = arg1.Info.BountyTargetPlayer
				i_18 = "&w=150&h=150"
				i_18 = "rbxthumb://type=AvatarHeadShot&id="..v_14.UserId..i_18
				module_upvr_2:ChangeDisplayedNPC(i_18)
			else
				local HumanoidRootPart = var76_upvw:FindFirstChild("HumanoidRootPart")
				if HumanoidRootPart then
					i_18 = HumanoidRootPart.Position
					v_14 = var201_upvw.Level.Value
					v_14 = _
					v_14 = "HumanoidRootPart"
					local SOME = PlayerGui_upvr:WaitForChild(v_14):FindFirstChild(v_14)
					if SOME then
						v_14 = module_upvr_2.IconFrame
						i_18 = v_14.GuideIcon
						v_14 = ""
						i_18.Image = v_14
						i_18 = module_upvr_2:ChangeDisplayedNPC
						i_18(SOME)
						i_18 = SOME.Parent:Destroy
						i_18()
						v_14 = module_upvr_2
						i_18 = v_14.Data
						v_14 = arg1.Info
						i_18.QuestData = v_14
						return
					end
					i_18 = module_upvr_2:ChangeDisplayedNPC
					i_18(nil)
				end
			end
		end
		local function var1126_upvr() -- Line 2676, Named "updateTracking"
			--[[ Upvalues[3]:
				[1]: Parent_upvr_2 (readonly)
				[2]: module_upvr_2 (readonly)
				[3]: openFruitShop_upvr (readonly)
			]]
			local Track = Parent_upvr_2:WaitForChild("Guide"):WaitForChild("LeftFrame"):WaitForChild("Track")
			module_upvr_2:ResetCompass()
			if module_upvr_2.Data.Tracking == true then
				Track.TextLabel.Text = "Untrack"
				module_upvr_2.SideCompass.Frame.Button.ImageTransparency = 1
				openFruitShop_upvr(false)
			else
				Track.TextLabel.Text = "Track"
				module_upvr_2.SideCompass.Frame.Button.ImageTransparency = 0
				openFruitShop_upvr(false)
			end
		end
		Remotes_upvr:WaitForChild("QuestUpdate").OnClientEvent:Connect(function(arg1) -- Line 2690
			--[[ Upvalues[8]:
				[1]: var1102_upvw (readonly)
				[2]: module_upvr_2 (readonly)
				[3]: var1126_upvr (readonly)
				[4]: var199_upvw (read and write)
				[5]: updateGuideQuestNPC_upvr (readonly)
				[6]: Parent_upvr_2 (readonly)
				[7]: UI_upvw (read and write)
				[8]: Text_upvr (readonly)
			]]
			-- KONSTANTERROR: [0] 1. Error Block 51 start (CF ANALYSIS FAILED)
			if arg1 == nil then
				var1102_upvw(false)
				return
			end
			var1102_upvw(true)
			module_upvr_2.Data.Tracking = false
			var1126_upvr()
			local var1117
			if module_upvr_2.Data.Ready and var199_upvw and 0 < var199_upvw.Health then
				if module_upvr_2.Data.DisplayedNPC == nil then
					updateGuideQuestNPC_upvr(arg1)
				elseif arg1.Info.Name ~= arg1.PreviousQuest or arg1.Info.Name ~= module_upvr_2.Data.QuestData.Name then
					updateGuideQuestNPC_upvr(arg1)
				end
			end
			local Info = arg1.Info
			-- KONSTANTERROR: [0] 1. Error Block 51 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [90] 66. Error Block 37 start (CF ANALYSIS FAILED)
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [90.8]
			var1117 = nil
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [94.9]
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [95.10]
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [95.11]
			if nil < #arg1.Info.Task then
				var1117 = '\n'
			else
				var1117 = ""
			end
			-- KONSTANTERROR: Expression was reused, decompilation is incorrect
			-- KONSTANTERROR: [90] 66. Error Block 37 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [78] 56. Error Block 47 start (CF ANALYSIS FAILED)
			-- KONSTANTERROR: Expression was reused, decompilation is incorrect
			if "" < nil then
			else
			end
			-- KONSTANTERROR: Expression was reused, decompilation is incorrect
			if nil == 1 then
				-- KONSTANTWARNING: GOTO [93] #69
			end
			-- KONSTANTERROR: [78] 56. Error Block 47 end (CF ANALYSIS FAILED)
		end)
		var1089 = "Guide"
		var1089 = "Close"
		Parent_upvr_2:WaitForChild(var1089):WaitForChild(var1089).Activated:Connect(function() -- Line 2745
			--[[ Upvalues[1]:
				[1]: openFruitShop_upvr (readonly)
			]]
			openFruitShop_upvr(false)
		end)
		var1089 = "Guide"
		var1089 = "LeftFrame"
		var1089 = "Abandon"
		Parent_upvr_2:WaitForChild(var1089):WaitForChild(var1089):WaitForChild(var1089).Activated:Connect(function() -- Line 2749
			--[[ Upvalues[2]:
				[1]: var1102_upvw (readonly)
				[2]: Remotes_upvr (readonly)
			]]
			var1102_upvw(false)
			Remotes_upvr.CommF_:InvokeServer("AbandonQuest")
		end)
		var1089 = "Guide"
		var1089 = "LeftFrame"
		var1089 = "Track"
		Parent_upvr_2:WaitForChild(var1089):WaitForChild(var1089):WaitForChild(var1089).Activated:Connect(function() -- Line 2754
			--[[ Upvalues[2]:
				[1]: module_upvr_2 (readonly)
				[2]: var1126_upvr (readonly)
			]]
			module_upvr_2.Data.Tracking = not module_upvr_2.Data.Tracking
			var1126_upvr()
		end)
		UI_upvw.Visible = false
		SideCompass_upvw.Visible = true
	end
	var1102_upvw = false
	var1126_upvr = "SelectedObject"
	openFruitShop_upvr = GuiService_upvr:GetPropertyChangedSignal(var1126_upvr)
	function var1126_upvr() -- Line 2801
		--[[ Upvalues[3]:
			[1]: Shop_upvr (readonly)
			[2]: UserInputService_upvr (readonly)
			[3]: GuiService_upvr (readonly)
		]]
		if Shop_upvr.Visible and UserInputService_upvr.GamepadEnabled and GuiService_upvr.SelectedObject and not GuiService_upvr.SelectedObject:IsDescendantOf(Shop_upvr.Blackout) and Shop_upvr.Blackout.Visible then
			GuiService_upvr.SelectedObject = Shop_upvr.Blackout.Confirm.Buy
		end
	end
	openFruitShop_upvr = openFruitShop_upvr:Connect
	openFruitShop_upvr(var1126_upvr)
	function openFruitShop_upvr() -- Line 2810, Named "openFruitShop"
		--[[ Upvalues[2]:
			[1]: var899_upvw (read and write)
			[2]: Shop_upvr (readonly)
		]]
		var899_upvw = false
		Shop_upvr.Visible = false
		Shop_upvr.Position = UDim2.new(0.5, 0, 1.5, 0)
		require(script.FruitShop):Open("ShopGui")
	end
	updateGuideQuestNPC_upvr = task.spawn
	function var1126_upvr() -- Line 2819
		--[[ Upvalues[1]:
			[1]: Flags_upvr (readonly)
		]]
		if Flags_upvr.CHROMATIC_SKINS_ENABLED then
			task.spawn(function() -- Line 2821
				require(script.ChromaticBundleTile)()
			end)
		end
	end
	updateGuideQuestNPC_upvr(var1126_upvr)
	updateGuideQuestNPC_upvr = task.spawn
	local GiftClaimWindow_upvr = require(game.ReplicatedStorage:WaitForChild("Controllers").UI.GiftClaimWindow)
	local var1128_upvw = false
	function var1126_upvr() -- Line 2828
		--[[ Upvalues[7]:
			[1]: any_new_result1_upvr_5 (readonly)
			[2]: var907_result1_upvr (readonly)
			[3]: Shop_upvr (readonly)
			[4]: GiftClaimWindow_upvr (readonly)
			[5]: AnalyticsClient_upvr (readonly)
			[6]: var1128_upvw (read and write)
			[7]: module_3_upvr (readonly)
		]]
		local var1129_upvw = 0
		local Parent_upvr = script.Parent
		local function updateGiftsBadge() -- Line 2831
			--[[ Upvalues[2]:
				[1]: any_new_result1_upvr_5 (copied, readonly)
				[2]: Parent_upvr (readonly)
			]]
			local any_Get_result1 = any_new_result1_upvr_5:Get()
			local ShopButton = Parent_upvr.ShopButton
			if 0 >= any_Get_result1._Raw then
				ShopButton = false
			else
				ShopButton = true
			end
			ShopButton.Badge.Visible = ShopButton
			Parent_upvr.ShopButton.Badge.UIGradient.Offset = Vector2.new(-10, 0)
			Parent_upvr.ShopButton.Badge.Badge.UIGradient.Offset = Vector2.new(-10, 0)
			Parent_upvr.ShopButton.Badge.Badge.TextLabel.Text = any_Get_result1._String
		end
		task.spawn(updateGiftsBadge)
		var907_result1_upvr:Connect(updateGiftsBadge)
		local MenuShop_upvr = Shop_upvr.MenuShop
		local ScrollingFrame_2_upvr = MenuShop_upvr.ScrollingFrame
		local GiftBanner_upvr = MenuShop_upvr.GiftBanner
		local ClaimIcon_upvr = Shop_upvr.ClaimIcon
		local Size = ScrollingFrame_2_upvr.Size
		local Position = ScrollingFrame_2_upvr.Position
		local AnchorPoint = ScrollingFrame_2_upvr.AnchorPoint
		local tbl_8_upvr = {
			Inactive = {
				Position = ClaimIcon_upvr.Position;
				AnchorPoint = ClaimIcon_upvr.AnchorPoint;
			};
			Active = {
				Position = UDim2.new(0.895, 0, 0.11, 3);
				AnchorPoint = Vector2.new(1, 0);
			};
		}
		local var1144_upvw
		local tbl_36_upvr = {}
		local tbl = {}
		local function SetState(arg1) -- Line 2873
			--[[ Upvalues[5]:
				[1]: ScrollingFrame_2_upvr (readonly)
				[2]: MenuShop_upvr (readonly)
				[3]: ClaimIcon_upvr (readonly)
				[4]: tbl_8_upvr (readonly)
				[5]: GiftBanner_upvr (readonly)
			]]
			local WideBanner = ScrollingFrame_2_upvr:FindFirstChild("WideBanner")
			if WideBanner then
				if not WideBanner:GetAttribute("OriginalSize") then
					WideBanner:SetAttribute("OriginalSize", WideBanner.Size)
				end
				WideBanner.Size = WideBanner:GetAttribute("OriginalSize")
			end
			ScrollingFrame_2_upvr.Size = arg1.ScrollingFrame.Size
			ScrollingFrame_2_upvr.Position = arg1.ScrollingFrame.Position
			ScrollingFrame_2_upvr.AnchorPoint = arg1.ScrollingFrame.AnchorPoint
			MenuShop_upvr.UIPadding.PaddingTop = arg1.UIPadding.PaddingTop
			ClaimIcon_upvr.Position = tbl_8_upvr.Inactive.Position
			ClaimIcon_upvr.AnchorPoint = tbl_8_upvr.Inactive.AnchorPoint
			GiftBanner_upvr.TextLabel.Visible = false
			GiftBanner_upvr.Visible = false
			ClaimIcon_upvr.Visible = true
		end
		tbl.SetState = SetState
		tbl.UIPadding = {
			PaddingTop = ({
				PaddingTop = MenuShop_upvr.UIPadding.PaddingTop;
				PaddingBottom = MenuShop_upvr.UIPadding.PaddingBottom;
			}).PaddingTop;
		}
		tbl.ScrollingFrame = {
			Size = Size;
			Position = Position;
			AnchorPoint = AnchorPoint;
		}
		tbl_36_upvr.Default = tbl
		tbl_36_upvr.Gifts = {
			SetState = function(arg1) -- Line 2903, Named "SetState"
				--[[ Upvalues[5]:
					[1]: ScrollingFrame_2_upvr (readonly)
					[2]: MenuShop_upvr (readonly)
					[3]: ClaimIcon_upvr (readonly)
					[4]: tbl_8_upvr (readonly)
					[5]: GiftBanner_upvr (readonly)
				]]
				local WideBanner_2 = ScrollingFrame_2_upvr:FindFirstChild("WideBanner")
				if WideBanner_2 then
					if not WideBanner_2:GetAttribute("OriginalSize") then
						WideBanner_2:SetAttribute("OriginalSize", WideBanner_2.Size)
					end
					WideBanner_2.Size = WideBanner_2:GetAttribute("OriginalSize") - UDim2.fromScale(0, 0.06)
				end
				ScrollingFrame_2_upvr.Size = arg1.ScrollingFrame.Size
				ScrollingFrame_2_upvr.Position = arg1.ScrollingFrame.Position
				ScrollingFrame_2_upvr.AnchorPoint = arg1.ScrollingFrame.AnchorPoint
				MenuShop_upvr.UIPadding.PaddingTop = arg1.UIPadding.PaddingTop
				ClaimIcon_upvr.Position = tbl_8_upvr.Active.Position
				ClaimIcon_upvr.AnchorPoint = tbl_8_upvr.Active.AnchorPoint
				GiftBanner_upvr.TextLabel.Visible = true
				GiftBanner_upvr.Visible = true
				ClaimIcon_upvr.Visible = true
			end;
			UIPadding = {
				PaddingTop = UDim.new(0, 0);
			};
			ScrollingFrame = {
				Size = UDim2.new(Size.X.Scale, Size.X.Offset, Size.Y.Scale - GiftBanner_upvr.Size.Y.Scale, 0);
				Position = UDim2.new(Position.X.Scale, Position.X.Offset, 1, 0);
				AnchorPoint = Vector2.new(AnchorPoint.X, 1);
			};
		}
		local var1154_upvw
		local var1155_upvw
		local UIGradient_3_upvr = ClaimIcon_upvr.UIGradient
		local function _() -- Line 2941, Named "updateBannerState"
			--[[ Upvalues[3]:
				[1]: var1129_upvw (read and write)
				[2]: var1144_upvw (read and write)
				[3]: tbl_36_upvr (readonly)
			]]
			local var1157
			if 0 < var1129_upvw then
				var1157 = "Gifts"
			else
				var1157 = "Default"
			end
			if var1157 ~= var1144_upvw then
				var1144_upvw = var1157
				tbl_36_upvr[var1157]:SetState()
			end
		end
		local function animateGiftButton_upvr() -- Line 2949, Named "animateGiftButton"
			--[[ Upvalues[7]:
				[1]: var1154_upvw (read and write)
				[2]: var1155_upvw (read and write)
				[3]: GiftBanner_upvr (readonly)
				[4]: GiftClaimWindow_upvr (copied, readonly)
				[5]: ClaimIcon_upvr (readonly)
				[6]: var1144_upvw (read and write)
				[7]: UIGradient_3_upvr (readonly)
			]]
			var1154_upvw = var1155_upvw:Extend()
			var1154_upvw:Add(function() -- Line 2951
				--[[ Upvalues[1]:
					[1]: var1154_upvw (copied, read and write)
				]]
				var1154_upvw = nil
			end)
			var1154_upvw:Add(GiftBanner_upvr.SinkBanner.Activated:Connect(function() -- Line 2955
				--[[ Upvalues[1]:
					[1]: GiftClaimWindow_upvr (copied, readonly)
				]]
				closeMenu("Shop")
				GiftClaimWindow_upvr:Open()
			end))
			ClaimIcon_upvr.ImageLabel.ImageColor3 = Color3.fromRGB(255, 197, 20):Lerp(Color3.new(1, 1, 1), 0.1)
			while var1154_upvw do
				if var1144_upvw == "Gifts" then
					UIGradient_3_upvr.Rotation = (UIGradient_3_upvr.Rotation + (1/60) * 90) % 360
				end
			end
		end
		local function updateGiftBanner_upvr() -- Line 2976, Named "updateGiftBanner"
			--[[ Upvalues[9]:
				[1]: var1155_upvw (read and write)
				[2]: GiftClaimWindow_upvr (copied, readonly)
				[3]: var1129_upvw (read and write)
				[4]: var1154_upvw (read and write)
				[5]: animateGiftButton_upvr (readonly)
				[6]: UIGradient_3_upvr (readonly)
				[7]: Shop_upvr (copied, readonly)
				[8]: var1144_upvw (read and write)
				[9]: tbl_36_upvr (readonly)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			local var1160
			if not var1155_upvw then
				return false
			end
			var1129_upvw = GiftClaimWindow_upvr:GetSummary().TotalGifts
			if var1129_upvw == 0 then
				if var1154_upvw then
					var1154_upvw:Destroy()
					-- KONSTANTWARNING: GOTO [27] #23
				end
			elseif not var1154_upvw then
				var1160 = animateGiftButton_upvr
				task.spawn(var1160)
			end
			if 0 >= var1129_upvw then
				var1160 = false
			else
				var1160 = true
			end
			UIGradient_3_upvr.Enabled = var1160
			var1160 = Shop_upvr.MenuShop.GiftBanner
			local function INLINED_10() -- Internal function, doesn't exist in bytecode
				var1160 = `You have {var1129_upvw} UNCLAIMED gifts!`
				return var1160
			end
			if 1 >= var1129_upvw or not INLINED_10() then
				var1160 = `You have {var1129_upvw} UNCLAIMED gift!`
			end
			var1160.TextLabel.Text = var1160
			var1160 = var1129_upvw
			if 0 < var1160 then
				local _ = "Gifts"
			else
			end
			var1160 = var1144_upvw
			if "Default" ~= var1160 then
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
				var1144_upvw = "Default"
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
				var1160 = tbl_36_upvr.Default:SetState
				var1160()
			end
		end
		local var1162_upvw = false
		local function shopOpened_upvr() -- Line 3003, Named "shopOpened"
			--[[ Upvalues[7]:
				[1]: var1162_upvw (read and write)
				[2]: AnalyticsClient_upvr (copied, readonly)
				[3]: var1155_upvw (read and write)
				[4]: var1128_upvw (copied, read and write)
				[5]: any_new_result1_upvr_5 (copied, readonly)
				[6]: GiftClaimWindow_upvr (copied, readonly)
				[7]: updateGiftBanner_upvr (readonly)
			]]
			if not var1162_upvw then
				var1162_upvw = true
				AnalyticsClient_upvr:ReportShoppingStep({
					funnelId = "Shop";
					step = 1;
				})
			end
			if var1155_upvw then
			else
				var1155_upvw = require(game.ReplicatedStorage.Modules.Util.Trove).new()
				var1155_upvw:Add(function() -- Line 3018
					--[[ Upvalues[3]:
						[1]: var1128_upvw (copied, read and write)
						[2]: var1155_upvw (copied, read and write)
						[3]: any_new_result1_upvr_5 (copied, readonly)
					]]
					var1128_upvw = false
					var1155_upvw = nil
					any_new_result1_upvr_5:Set(0)
				end)
				var1155_upvw:Add(GiftClaimWindow_upvr.GiftsChanged:Connect(updateGiftBanner_upvr))
				updateGiftBanner_upvr()
			end
		end
		Shop_upvr:GetAttributeChangedSignal("IsVisible"):Connect(function() -- Line 3029
			--[[ Upvalues[3]:
				[1]: Shop_upvr (copied, readonly)
				[2]: shopOpened_upvr (readonly)
				[3]: var1155_upvw (read and write)
			]]
			if Shop_upvr:GetAttribute("IsVisible") then
				shopOpened_upvr()
			elseif var1155_upvw then
				var1155_upvw:Destroy()
			end
		end)
		Shop_upvr:GetPropertyChangedSignal("Visible"):Connect(function() -- Line 3038
			--[[ Upvalues[3]:
				[1]: Shop_upvr (copied, readonly)
				[2]: shopOpened_upvr (readonly)
				[3]: var1155_upvw (read and write)
			]]
			if Shop_upvr.Visible then
				shopOpened_upvr()
			elseif var1155_upvw then
				var1155_upvw:Destroy()
			end
		end)
		local var1167_upvw = 0
		local function giftsChanged_upvr(arg1, arg2) -- Line 3047, Named "giftsChanged"
			--[[ Upvalues[3]:
				[1]: var1167_upvw (read and write)
				[2]: any_new_result1_upvr_5 (copied, readonly)
				[3]: module_3_upvr (copied, readonly)
			]]
			if arg2 < arg1 then
				if var1167_upvw ~= 0 then
					local var1168 = arg1 - arg2
					if var1168 == 1 then
						any_new_result1_upvr_5:Increment(var1168)
					elseif 1 < var1168 then
						any_new_result1_upvr_5:Set(var1168)
					end
				end
				if var1167_upvw == 0 then
					module_3_upvr.new("<Color=Green>You have unclaimed gifts, check the shop!<Color=/>", 5):Display()
				end
			end
			var1167_upvw += 1
		end
		GiftClaimWindow_upvr.GiftsChanged:Connect(giftsChanged_upvr)
		ClaimIcon_upvr.Activated:Connect(function() -- Line 3067
			--[[ Upvalues[1]:
				[1]: GiftClaimWindow_upvr (copied, readonly)
			]]
			closeMenu("Shop")
			GiftClaimWindow_upvr:Open()
		end)
		require(game.ReplicatedStorage.Modules.PlayerUtil).PlayerReady(game.Players.LocalPlayer, function() -- Line 3073
			--[[ Upvalues[3]:
				[1]: tbl_36_upvr (readonly)
				[2]: GiftClaimWindow_upvr (copied, readonly)
				[3]: giftsChanged_upvr (readonly)
			]]
			tbl_36_upvr.Default:SetState()
			giftsChanged_upvr(GiftClaimWindow_upvr:GetSummary().TotalGifts, 0)
		end)
	end
	updateGuideQuestNPC_upvr(var1126_upvr)
	updateGuideQuestNPC_upvr = nil
	local var1171_upvw = updateGuideQuestNPC_upvr
	var1126_upvr = {}
	local var1172_upvr = var1126_upvr
	var1172_upvr.NameMap = {
		WinterCombo24 = {
			Id = 2679601475;
			Max = 5;
		};
		HolidayEssentials24 = {
			Id = 2679601753;
			Max = 5;
		};
		ULTIMATEBUNDLE24 = {
			Id = 2679601096;
			Max = 2;
		};
	}
	var1172_upvr.IdMap = {-- : First try: runluau:11745: attempt to index nil with 't'

	local var1181_upvw
	local function updateBuyButton_upvr(arg1) -- Line 3095, Named "updateBuyButton"
		--[[ Upvalues[5]:
			[1]: var1171_upvw (read and write)
			[2]: var1172_upvr (readonly)
			[3]: var1181_upvw (read and write)
			[4]: Net_upvr (readonly)
			[5]: Shop_upvr (readonly)
		]]
		local var1182 = var1171_upvw
		if var1182 then
			var1182 = var1172_upvr.NameMap[var1171_upvw]
		end
		if var1182 then
			if not var1181_upvw then
				var1181_upvw = Net_upvr:RemoteFunction("ShopNetworkRequest"):InvokeServer({
					Context = "GetTransactionHistory";
					History = {"WinterCombo24", "HolidayEssentials24", "ULTIMATEBUNDLE24"};
				})
			end
			Shop_upvr.Blackout.Confirm.Gift.TextLabel.Text = `Gift ({math.max(0, var1182.Max - var1181_upvw.Gifted[var1171_upvw])})`
		else
			Shop_upvr.Blackout.Confirm.Gift.TextLabel.Text = "Gift"
		end
	end
	game:GetService("MarketplaceService").PromptProductPurchaseFinished:Connect(function(arg1, arg2, arg3) -- Line 3110
		--[[ Upvalues[4]:
			[1]: LocalPlayer_upvr (readonly)
			[2]: var1172_upvr (readonly)
			[3]: var1171_upvw (read and write)
			[4]: var1181_upvw (read and write)
		]]
		if LocalPlayer_upvr == game.Players.LocalPlayer and arg3 then
			local var1187 = var1172_upvr.IdMap[arg2]
			if var1187 and var1187.Name == var1171_upvw and var1181_upvw and var1181_upvw.Gifted[var1171_upvw] then
				var1181_upvw.Gifted[var1171_upvw] = math.max(0, var1181_upvw.Gifted[var1171_upvw] + 1)
			end
		end
	end)
	local GiftWindow_upvr = require(game.ReplicatedStorage:WaitForChild("Controllers").UI.GiftWindow)
	function hookBuy(arg1, arg2) -- Line 3123
		--[[ Upvalues[9]:
			[1]: GiftWindow_upvr (readonly)
			[2]: var1171_upvw (read and write)
			[3]: updateBuyButton_upvr (readonly)
			[4]: var1102_upvw (read and write)
			[5]: AnalyticsClient_upvr (readonly)
			[6]: Remotes_upvr (readonly)
			[7]: Shop_upvr (readonly)
			[8]: UserInputService_upvr (readonly)
			[9]: GuiService_upvr (readonly)
		]]
		GiftWindow_upvr:Close()
		var1171_upvw = arg1
		task.spawn(updateBuyButton_upvr)
		if var1102_upvw then
		else
			var1102_upvw = true
			local tbl_19 = {
				funnelId = "Shop";
				purchaseLocation = "Shop";
			}
			tbl_19.storageName = arg1
			tbl_19.step = 2
			AnalyticsClient_upvr:ReportShoppingStep(tbl_19)
			local var1191_upvr = require(game.ReplicatedStorage.ShopService):GetLegacyRobuxItems()[arg1]
			if var1191_upvr and not var1191_upvr.gift then
				if arg2 and arg2.Buy then
					arg2.Buy(var1191_upvr)
				else
					local tbl_7 = {}
					tbl_7.StorageName = arg1
					tbl_7.PurchaseLocation = "Shop"
					tbl_7.FunnelId = "Shop"
				end
				var1102_upvw = false
				return
			end
			local any_new_result1_upvw = require(game.ReplicatedStorage.Modules.Util.Trove).new()
			any_new_result1_upvw:Add(function() -- Line 3153
				--[[ Upvalues[2]:
					[1]: any_new_result1_upvw (read and write)
					[2]: Shop_upvr (copied, readonly)
				]]
				any_new_result1_upvw = nil
				Shop_upvr.Blackout.Visible = false
			end)
			Shop_upvr.Blackout.Visible = true
			if UserInputService_upvr.GamepadEnabled then
				GuiService_upvr.SelectedObject = Shop_upvr.Blackout.Confirm.Buy
			end
			any_new_result1_upvw:Add(Shop_upvr.Blackout.Confirm.Cancel.Activated:Connect(function() -- Line 3164
				--[[ Upvalues[2]:
					[1]: any_new_result1_upvw (read and write)
					[2]: var1102_upvw (copied, read and write)
				]]
				if any_new_result1_upvw then
					any_new_result1_upvw:Destroy()
				end
				var1102_upvw = false
			end))
			any_new_result1_upvw:Add(Shop_upvr.Blackout.Confirm.Gift.Activated:Connect(function() -- Line 3171
				--[[ Upvalues[4]:
					[1]: any_new_result1_upvw (read and write)
					[2]: GiftWindow_upvr (copied, readonly)
					[3]: var1191_upvr (readonly)
					[4]: var1102_upvw (copied, read and write)
				]]
				if any_new_result1_upvw then
					any_new_result1_upvw:Destroy()
				end
				local any_Open_result1 = GiftWindow_upvr:Open({
					shopData = var1191_upvr;
					purchaseLocation = "Shop";
				})
				if any_Open_result1 then
					any_Open_result1:Add(function() -- Line 3179
						--[[ Upvalues[1]:
							[1]: var1102_upvw (copied, read and write)
						]]
						var1102_upvw = false
					end)
				else
					var1102_upvw = false
				end
			end))
			any_new_result1_upvw:Add(Shop_upvr.Blackout.Confirm.Buy.Activated:Connect(function() -- Line 3187
				--[[ Upvalues[6]:
					[1]: any_new_result1_upvw (read and write)
					[2]: arg2 (readonly)
					[3]: var1191_upvr (readonly)
					[4]: arg1 (readonly)
					[5]: Remotes_upvr (copied, readonly)
					[6]: var1102_upvw (copied, read and write)
				]]
				if any_new_result1_upvw then
					any_new_result1_upvw:Destroy()
				end
				if arg2 and arg2.Buy then
					arg2.Buy(var1191_upvr)
				else
					local tbl_3 = {}
					tbl_3.StorageName = arg1
					tbl_3.PurchaseLocation = "Shop"
					tbl_3.FunnelId = "Shop"
				end
				var1102_upvw = false
			end))
		end
	end
	_G.hookBuy = hookBuy
	local function SetupShopButton_upvr(arg1, arg2) -- Line 3203, Named "SetupShopButton"
		-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
		arg1:SetAttribute("ShopItem", arg2)
		-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [40] 30. Error Block 13 start (CF ANALYSIS FAILED)
		local Bottom_2 = arg1:FindFirstChild("Bottom")
		if Bottom_2 then
			Bottom_2:FindFirstChild("TextLabel").RichText = true
		end
		arg1.Activated:Connect(function() -- Line 3217
			--[[ Upvalues[1]:
				[1]: arg2 (readonly)
			]]
			hookBuy(arg2)
		end)
		-- KONSTANTERROR: [40] 30. Error Block 13 end (CF ANALYSIS FAILED)
	end
	if _G.CurrentWorld ~= "Main" then
		local _ = {
			Pack1 = "+$30K";
			Pack2 = "+$150K";
			Pack3 = "+$405K";
			Pack4 = "+$900K";
			Pack5 = "+$1.5M";
		}
		if _G.CurrentWorld == "Zou" then
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack1, "60K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack2, "305K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack3, "810K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack4, "1.8M Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack5, "3M Money")
		else
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack1, "30K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack2, "150K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack3, "405K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack4, "900K Money")
			SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack5, "1.5M Money")
		end
		for _, v_15 in pairs(ScrollingFrame_3_upvr:WaitForChild("Beli"):GetChildren()) do
			var1434_upvw = "Top"
			local SOME_3 = v_15:FindFirstChild(var1434_upvw)
			if SOME_3 then
				var1434_upvw = ({
					Pack1 = "+$60K";
					Pack2 = "+$305K";
					Pack3 = "+$810K";
					Pack4 = "+$1.8M";
					Pack5 = "+$3M";
				})[v_15.Name]
				SOME_3.TextLabel.Text = var1434_upvw
			end
		end
		for _, v_16 in pairs(ScrollingFrame_3_upvr:WaitForChild("Fragments"):GetChildren()) do
			var1434_upvw = v_16:FindFirstChild("Top")
			local Bottom = v_16:FindFirstChild("Bottom")
			if var1434_upvw then
				var1434_upvw.TextLabel.Text = ({
					Pack1 = "+ƒ500";
					Pack2 = "+ƒ2,100";
					Pack3 = "+ƒ4,500";
					Pack4 = "+ƒ10,000";
					Pack5 = "+ƒ16,000";
				})[v_16.Name]
			end
			if Bottom then
				Bottom.TextLabel.Text = ({
					Pack1 = "75";
					Pack2 = "250";
					Pack3 = "499";
					Pack4 = "999";
					Pack5 = "1499";
				})[v_16.Name]
			end
		end
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Fragments").Pack1, "500 Fragments")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Fragments").Pack2, "2.1K Fragments")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Fragments").Pack3, "4.5K Fragments")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Fragments").Pack4, "10K Fragments")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Fragments").Pack5, "16K Fragments")
	else
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack1, "10K Money")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack2, "50K Money")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack3, "135K Money")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack4, "300K Money")
		SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Beli").Pack5, "500K Money")
	end
	local function HookSaleObj(arg1) -- Line 3310
		if arg1:GetAttribute("ShopHooked") then
		else
			if arg1.Name == "DualBanner" then
				arg1.Pack1.Activated:Connect(function() -- Line 3314
					--[[ Upvalues[1]:
						[1]: arg1 (readonly)
					]]
					hookBuy(arg1.Pack1:GetAttribute("ShopItem2"))
				end)
				arg1.Pack2.Activated:Connect(function() -- Line 3317
					--[[ Upvalues[1]:
						[1]: arg1 (readonly)
					]]
					hookBuy(arg1.Pack2:GetAttribute("ShopItem2"))
				end)
				arg1:SetAttribute("ShopHooked", true)
				return
			end
			if arg1.Name == "WideBanner" then
				arg1.Pack1.Activated:Connect(function() -- Line 3322
					--[[ Upvalues[1]:
						[1]: arg1 (readonly)
					]]
					hookBuy(arg1.Pack1:GetAttribute("ShopItem2"))
				end)
				arg1:SetAttribute("ShopHooked", true)
			end
		end
	end
	ScrollingFrame_3_upvr.ChildAdded:Connect(HookSaleObj)
	for _, v_17 in pairs(ScrollingFrame_3_upvr:GetChildren()) do
		HookSaleObj(v_17)
		local _
	end
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products").RespawnAll, "Respawn Bosses")
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products").RefundStats, "Refund Points")
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products").ChangeRace, "Change Race")
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products2").UpgradeBag, "+1 Fruit Storage")
	if _G.CurrentWorld ~= "Zou" then
		for _, v_18 in pairs(ScrollingFrame_3_upvr.Products2.ScrollPack1:GetChildren()) do
			v_18:Destroy()
		end
		for _, v_19 in pairs(ScrollingFrame_3_upvr.Products2.ScrollPack2:GetChildren()) do
			v_19:Destroy()
		end
		ScrollingFrame_3_upvr.Products2.ScrollPack1.ImageColor3 = ScrollingFrame_3_upvr.Products2.ScrollPack1.ImageColor3:Lerp(Color3.new(1, 1, 1), 0.11)
		ScrollingFrame_3_upvr.Products2.ScrollPack2.ImageColor3 = ScrollingFrame_3_upvr.Products2.ScrollPack2.ImageColor3:Lerp(Color3.new(1, 1, 1), 0.11)
		-- KONSTANTWARNING: GOTO [2410] #1727
	end
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products2").ScrollPack1, "5x Legendary Scrolls")
	SetupShopButton_upvr(ScrollingFrame_3_upvr:WaitForChild("Products2").ScrollPack2, "3x Mythical Scrolls")
	ScrollingFrame_3_upvr:WaitForChild("Premium").Pack1.Activated:Connect(function() -- Line 3368
		--[[ Upvalues[1]:
			[1]: Remotes_upvr (readonly)
		]]
		Remotes_upvr.CommF_:InvokeServer("buyPremium")
	end)
	ScrollingFrame_3_upvr:WaitForChild("ViewAllFruits").More.More.Activated:Connect(openFruitShop_upvr)
	local function _() -- Line 3382, Named "closeFruitShop"
		require(script.FruitShop):Close()
	end
	require(script.FruitShop).OnClose:Connect(function(arg1) -- Line 3393
		--[[ Upvalues[2]:
			[1]: var899_upvw (read and write)
			[2]: Shop_upvr (readonly)
		]]
		if arg1 == "ShopGui" then
			var899_upvw = true
			Shop_upvr.Visible = true
			Shop_upvr.Position = UDim2.new(0.5, 0, 0.5, 0)
		end
	end)
	local tbl_28_upvr = {}
	var1434_upvw = ScrollingFrame_3_upvr.Fruits
	local loadData = {}
	local tbl_2 = {}
	var1434_upvw = 0
	var1434_upvw = ColorSequenceKeypoint.new(0.384, Color3.fromRGB(135, 0, 255))
	tbl_2[1] = ColorSequenceKeypoint.new(var1434_upvw, Color3.fromRGB(51, 0, 255))
	tbl_2[2] = var1434_upvw
	tbl_2[3] = ColorSequenceKeypoint.new(0.483, Color3.fromRGB(135, 0, 255))
	tbl_2[4] = ColorSequenceKeypoint.new(0.561, Color3.fromRGB(135, 0, 255))
	tbl_2[5] = ColorSequenceKeypoint.new(1, Color3.fromRGB(51, 0, 255))
	loadData["Gas-Gas"] = ColorSequence.new(tbl_2)
	local var1235_upvw
	local Color_upvr = var1434_upvw.Featured.Featured.Middle.UIGradient.Color
	local function var1234_upvr() -- Line 3419
		--[[ Upvalues[6]:
			[1]: var1235_upvw (read and write)
			[2]: ScrollingFrame_3_upvr (readonly)
			[3]: GetFeaturedFruits_upvr (readonly)
			[4]: tbl_28_upvr (readonly)
			[5]: loadData (readonly)
			[6]: Color_upvr (readonly)
		]]
		if not var1235_upvw then
			local Featured_2 = ScrollingFrame_3_upvr:WaitForChild("Fruits").Featured
			Featured_2.Visible = false
			var1235_upvw = Featured_2:Clone()
			Featured_2:Destroy()
		end
		local var56_result1_2 = GetFeaturedFruits_upvr(workspace:GetAttribute("FeaturedFruit"))
		for i_24, v_20 in pairs(tbl_28_upvr) do
			if not table.find(var56_result1_2, i_24) then
				tbl_28_upvr[i_24] = nil
				if v_20.Parent then
					v_20:Destroy()
				end
			end
		end
		for i_25, v_21_upvw in pairs(var56_result1_2) do
			local var1277_upvr = "Permanent "..v_21_upvw
			if not tbl_28_upvr[v_21_upvw] then
				tbl_28_upvr[v_21_upvw] = var1235_upvw:Clone()
				tbl_28_upvr[v_21_upvw].Parent = ScrollingFrame_3_upvr.Fruits
				local var1278 = tbl_28_upvr[v_21_upvw]
				var1278.Name = v_21_upvw
				var1278.Featured.Activated:Connect(function() -- Line 3449
					--[[ Upvalues[2]:
						[1]: v_21_upvw (read and write)
						[2]: var1277_upvr (readonly)
					]]
					if v_21_upvw == "Dragon-Dragon" and game:GetService("CollectionService"):HasTag(game.Players.LocalPlayer, "DiscountedDragonEnabled") then
						require(game.ReplicatedStorage.Notification).new("<Color=Red>Please visit the fruit shop to use your discount!<Color=/>"):Display()
					else
						hookBuy(var1277_upvr)
					end
				end)
			end
			var1278.Featured.Price.TextLabel.Text = ""..require(game.ReplicatedStorage.ShopService):GetLegacyRobuxItems()[var1277_upvr].RobuxPrice
			local Top_2 = var1278.Featured.Top
			local var1281 = v_21_upvw
			local var1282
			if var1281 == "" then
				Top_2 = "Fruitless"
			else
				var1282 = ""
				if var1281:match("^Permanent %a+%-%a+") then
					var1282 = "Permanent "
				end
				local string_match_result1 = string.match(var1281, "(((%u)%-?)([^-.]+))$")
				if string_match_result1 then
					Top_2 = var1282..string_match_result1
				else
					Top_2 = var1281
				end
			end
			Top_2.TextLabel.Text = Top_2
			var1278.Visible = true
			if v_21_upvw == "DragonEast" or v_21_upvw == "DragonWest" then
				v_21_upvw = "Dragon"
			end
			ApplySprite(var1278.Featured.Middle.ImageLabel, v_21_upvw)
			local var1284 = loadData[v_21_upvw]
			if not var1284 then
				var1284 = Color_upvr
			end
			var1278.Featured.Middle.UIGradient.Color = var1284
		end
		if #var56_result1_2 == 1 then
			i_25 = 0.31
			ScrollingFrame_3_upvr.Fruits.Skins.Size = UDim2.fromScale(0.6, i_25)
		else
			if #var56_result1_2 == 2 then
				i_25 = 0.31
				ScrollingFrame_3_upvr.Fruits.Skins.Size = UDim2.fromScale(0.5, i_25)
				return
			end
			ScrollingFrame_3_upvr.Fruits.Skins.Size = UDim2.fromScale(1, 0.31)
		end
	end
	function var1434_upvw() -- Line 3486
		--[[ Upvalues[1]:
			[1]: var1234_upvr (readonly)
		]]
		while task.wait(60) do
			var1234_upvr()
		end
	end
	task.defer(var1434_upvw)
	workspace:GetAttributeChangedSignal("FeaturedFruit"):Connect(var1234_upvr)
	var1434_upvw = var1234_upvr
	task.spawn(var1434_upvw)
	var1434_upvw = game.ReplicatedStorage.Shop.ShopChanged
	var1434_upvw.Event:Connect(var1234_upvr)
	Color_upvr = task.spawn
	function loadData() -- Line 3498
		--[[ Upvalues[3]:
			[1]: ScrollingFrame_3_upvr (readonly)
			[2]: Shop_upvr (readonly)
			[3]: tbl_28_upvr (readonly)
		]]
		local tbl_26 = {
			Rotation = 0;
		}
		local tbl_25 = {
			Rotation = 0;
		}
		local function var1293(arg1, arg2) -- Line 3503
			local var1298 = arg2
			if not var1298 then
				var1298 = Color3.new(1, 0, 0)
			end
			local var1299 = var1298
			local clone_2 = arg1:Clone()
			clone_2:ClearAllChildren()
			clone_2.Size = UDim2.new(1, -4, 1, -4)
			clone_2.Position = UDim2.new(0, 2, 0, 2)
			clone_2.Parent = arg1
			arg1.Image = ""
			arg1.BackgroundColor3 = Color3.new(1, 1, 1)
			local UIGradient_2 = Instance.new("UIGradient")
			UIGradient_2.Color = ColorSequence.new(var1299, var1299:Lerp(Color3.new(1, 1, 1), 0.8))
			UIGradient_2.Parent = arg1
			arg1.Parent:WaitForChild("Top"):WaitForChild("ImageLabel").ImageColor3 = var1299:Lerp(Color3.new(1, 1, 1), 0.1)
			for _, v_22 in pairs(arg1:GetChildren()) do
				if v_22:IsA("ImageLabel") then
					v_22.ZIndex += 1
				end
			end
			return UIGradient_2
		end
		local var1306 = {
			p1 = var1293(ScrollingFrame_3_upvr:WaitForChild("MiscFruits"):WaitForChild("Pack1"):WaitForChild("Middle"), Color3.fromRGB(179, 179, 179));
			p2 = var1293(ScrollingFrame_3_upvr:WaitForChild("MiscFruits"):WaitForChild("Pack2"):WaitForChild("Middle"), Color3.fromRGB(92, 140, 211));
			p3 = var1293(ScrollingFrame_3_upvr:WaitForChild("MiscFruits"):WaitForChild("Pack3"):WaitForChild("Middle"), Color3.fromRGB(140, 82, 255));
			p4 = var1293(ScrollingFrame_3_upvr:WaitForChild("MiscFruits"):WaitForChild("Pack4"):WaitForChild("Middle"), Color3.fromRGB(213, 43, 228));
			p5 = var1293(ScrollingFrame_3_upvr:WaitForChild("MiscFruits"):WaitForChild("Pack5"):WaitForChild("Middle"), Color3.fromRGB(238, 47, 50));
		}
		while true do
			while not Shop_upvr:GetAttribute("IsVisible") do
				Shop_upvr:GetAttributeChangedSignal("IsVisible"):Wait()
			end
			tbl_25.Rotation = (tbl_25.Rotation + (1/60) * 90) % 360
			tbl_26.Rotation = math.sin(math.rad(tbl_25.Rotation)) * 5
			for _, v_23 in pairs(tbl_28_upvr) do
				v_23.Featured.Middle.UIGradient.Rotation = tbl_25.Rotation
				v_23.Featured.Middle.ImageLabel.Rotation = tbl_26.Rotation
			end
			var1306.p1.Rotation = tbl_25.Rotation
			var1306.p2.Rotation = tbl_25.Rotation
			var1306.p3.Rotation = tbl_25.Rotation
			var1306.p4.Rotation = tbl_25.Rotation
			var1306.p5.Rotation = tbl_25.Rotation
		end
	end
	Color_upvr(loadData)
	Color_upvr = task.spawn
	function loadData() -- Line 3572
		--[[ Upvalues[3]:
			[1]: ScrollingFrame_3_upvr (readonly)
			[2]: GetFeaturedFruits_upvr (readonly)
			[3]: SetupShopButton_upvr (readonly)
		]]
		-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
		repeat
			if workspace:GetAttribute("FeaturedFruit") then break end
			wait(1)
		until 15 <= 0 + 1
		local MiscFruits = ScrollingFrame_3_upvr:WaitForChild("MiscFruits")
		for _, v_24 in pairs(require(game.ReplicatedStorage.ShopService):GetLegacyRobuxItems()) do
			if v_24.subtype == "Fruit" and not v_24.doNotFeature then
				table.insert({}, v_24)
			end
		end
		local tbl_16 = {101, 450, 900, 1800}
		for _, v_25 in pairs(GetFeaturedFruits_upvr(workspace:GetAttribute("FeaturedFruit"))) do
			v_25 = "Permanent "..v_25
			;({})[v_25] = true
			local var1347
		end
		for i_30 = 1, 5 do
			local var1348
			if i_30 == 5 then
				var1348 = math.huge
			else
				var1348 = tbl_16[i_30]
			end
			local tbl_24 = {}
			-- KONSTANTERROR: Expression was reused, decompilation is incorrect
			for _, v_26 in pairs({}) do
				if not v_26.RobuxPrice or typeof(v_26.RobuxPrice) ~= "number" then
					_G.TestGameWarn("RobuxPrice NOT found for", v_26.storageName)
				elseif (tbl_16[i_30 - 1] or 0) <= v_26.RobuxPrice and v_26.RobuxPrice < var1348 and not var1347[v_26.storageName] and not v_26.offsale then
					table.insert(tbl_24, v_26)
				end
			end
			local var1353 = tbl_24[Random.new(math.floor(os.time() / 86400)):NextInteger(1, #tbl_24)]
			local string_gsub_result1 = string.gsub(var1353.storageName, "Permanent ", "")
			local SOME_2 = MiscFruits:WaitForChild("Pack"..i_30)
			SOME_2.Price.TextLabel.Text = ""..var1353.RobuxPrice
			local var1356 = string_gsub_result1
			if var1356 == "" then
			else
				if var1356:match("^Permanent %a+%-%a+") then
				end
				if string.match(var1356, "(((%u)%-?)([^-.]+))$") then
				else
				end
			end
			SOME_2.Top.TextLabel.Text = var1356
			ApplySprite(SOME_2.Middle.ImageLabel, string_gsub_result1)
			SetupShopButton_upvr(SOME_2, `Permanent {string_gsub_result1}`)
		end
		MiscFruits.Visible = true
	end
	Color_upvr(loadData)
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Exp").Exp1
	Color_upvr(loadData, "2x EXP (15 mins.)")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Exp").Exp2
	Color_upvr(loadData, "2x EXP (1 hour)")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Exp").Exp3
	Color_upvr(loadData, "2x EXP (6 hours)")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Exp").Exp4
	Color_upvr(loadData, "2x EXP (12 hours)")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Exp").Exp5
	Color_upvr(loadData, "2x EXP (24 hours)")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses1").DoubleBeli
	Color_upvr(loadData, "2x Money")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses2").DoubleMastery
	Color_upvr(loadData, "2x Mastery")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses1").DoubleDrops
	Color_upvr(loadData, "2x Boss Drops")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses2").Yoru
	Color_upvr(loadData, "Dark Blade")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses2").Notifier
	Color_upvr(loadData, "Fruit Notifier")
	Color_upvr = SetupShopButton_upvr
	loadData = ScrollingFrame_3_upvr:WaitForChild("Gamepasses1").FastBoat
	Color_upvr(loadData, "Fast Boats")
	Color_upvr = {}
	local var1358_upvr = Color_upvr
	function loadData(arg1) -- Line 4114
		--[[ Upvalues[2]:
			[1]: AwakeningToggler_upvr (readonly)
			[2]: Remotes_upvr (readonly)
		]]
		local pairs_result1_11, pairs_result2_10, _ = pairs(AwakeningToggler_upvr.BottomContainer.Frame:GetChildren())
		local var1378
		for _, v_27 in pairs_result1_11, pairs_result2_10, var1378 do
			if v_27:IsA("ImageButton") and v_27.Name ~= "Template" then
				v_27:Destroy()
			end
		end
		var1378 = AwakeningToggler_upvr.TopContainer
		local pairs_result1, pairs_result2_8, pairs_result3_6 = pairs(var1378.Frame:GetChildren())
		for _, v_28 in pairs_result1, pairs_result2_8, pairs_result3_6 do
			if v_28:IsA("ImageButton") then
				if v_28.Name ~= "Template" then
					v_28:Destroy()
				end
			end
		end
		pairs_result3_6 = Remotes_upvr
		local any_InvokeServer_result1_6 = pairs_result3_6.CommF_:InvokeServer("getAwakenedAbilities")
		pairs_result3_6 = 0
		for _, _ in next, any_InvokeServer_result1_6 do
			pairs_result3_6 += 1
		end
		for _, v_30_upvr in next, any_InvokeServer_result1_6 do
			local var1384
			if v_30_upvr.Awakened then
				var1384 = AwakeningToggler_upvr.TopContainer
				local clone_6_upvr = var1384.Frame.Template:Clone()
				clone_6_upvr.Name = v_30_upvr.Key
				if v_30_upvr.Enabled then
					var1384 = "(Awakened)"
				else
					var1384 = "(Unawakened)"
				end
				clone_6_upvr.Label.Text = var1384
				if not v_30_upvr.Enabled or not Color3.new(0, 1, 0) then
				end
				clone_6_upvr.ImageLabel.ImageColor3 = Color3.new(1, 1, 1)
				clone_6_upvr.TextLabel.Text = v_30_upvr.Key
				clone_6_upvr.Activated:Connect(function() -- Line 4150
					--[[ Upvalues[3]:
						[1]: clone_6_upvr (readonly)
						[2]: Remotes_upvr (copied, readonly)
						[3]: v_30_upvr (readonly)
					]]
					if clone_6_upvr.Label.Text == "(Unawakened)" then
						clone_6_upvr.Label.Text = "(Awakened)"
						clone_6_upvr.ImageLabel.ImageColor3 = Color3.new(0, 1, 0)
					else
						clone_6_upvr.Label.Text = "(Unawakened)"
						clone_6_upvr.ImageLabel.ImageColor3 = Color3.new(1, 1, 1)
					end
					Remotes_upvr.CommF_:InvokeServer("toggleAwakening", v_30_upvr.Key)
				end)
				clone_6_upvr.LayoutOrder = ({
					Z = 1;
					X = 2;
					C = 3;
					V = 4;
					F = 5;
				})[v_30_upvr.Key] or 6
				if 5 < pairs_result3_6 and 3 < 1 then
					clone_6_upvr.Parent = AwakeningToggler_upvr.BottomContainer.Frame
				else
					clone_6_upvr.Parent = AwakeningToggler_upvr.TopContainer.Frame
				end
				clone_6_upvr.Visible = true
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
			end
		end
		local var1387 = AwakeningToggler_upvr
		if 5 >= pairs_result3_6 then
			var1387 = false
		else
			var1387 = true
		end
		var1387.BottomContainer.Visible = var1387
	end
	var1358_upvr.loadData = loadData
	loadData = AwakeningToggler_upvr:GetPropertyChangedSignal("Visible")
	loadData = loadData:Connect
	loadData(function() -- Line 4179
		--[[ Upvalues[6]:
			[1]: AwakeningToggler_upvr (readonly)
			[2]: var898_upvw (read and write)
			[3]: var899_upvw (read and write)
			[4]: var900_upvw (read and write)
			[5]: var901_upvw (read and write)
			[6]: var1358_upvr (readonly)
		]]
		if AwakeningToggler_upvr.Visible then
			if var898_upvw then
				statsMenuFunction()
			end
			if var899_upvw then
				shopMenuFunction()
			end
			if var900_upvw then
				alliesMenuFunction()
			end
			if var901_upvw then
				crewMenuFunction()
			end
			var1358_upvr:loadData()
		end
	end)
	loadData = AwakeningToggler_upvr:WaitForChild("Info"):WaitForChild("Exit").Activated
	loadData = loadData:Connect
	loadData(function() -- Line 4196
		--[[ Upvalues[1]:
			[1]: AwakeningToggler_upvr (readonly)
		]]
		AwakeningToggler_upvr.Visible = false
	end)
	loadData = {}
	local var1390_upvr = loadData
	function var1390_upvr.loadData(arg1, arg2) -- Line 4200
		--[[ Upvalues[3]:
			[1]: Titles_upvr (readonly)
			[2]: Remotes_upvr (readonly)
			[3]: var1390_upvr (readonly)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [5] 5. Error Block 74 start (CF ANALYSIS FAILED)
		for _, v_31 in pairs(({
			gui = Titles_upvr;
		}).gui.Left.Container.Titles.ScrollingFrame:GetChildren()) do
			if v_31:IsA("Frame") and v_31.Name ~= "Template" then
				v_31:Destroy()
			end
		end
		-- KONSTANTERROR: [5] 5. Error Block 74 end (CF ANALYSIS FAILED)
	end
	Titles_upvr:GetPropertyChangedSignal("Visible"):Connect(function() -- Line 4301
		--[[ Upvalues[6]:
			[1]: Titles_upvr (readonly)
			[2]: var898_upvw (read and write)
			[3]: var899_upvw (read and write)
			[4]: var900_upvw (read and write)
			[5]: var901_upvw (read and write)
			[6]: var1390_upvr (readonly)
		]]
		if Titles_upvr.Visible then
			if var898_upvw then
				statsMenuFunction()
			end
			if var899_upvw then
				shopMenuFunction()
			end
			if var900_upvw then
				alliesMenuFunction()
			end
			if var901_upvw then
				crewMenuFunction()
			end
			var1390_upvr:loadData()
		end
	end)
	var1434_upvw = "Info"
	var1434_upvw = "Exit"
	Titles_upvr:WaitForChild(var1434_upvw):WaitForChild(var1434_upvw).Activated:Connect(function() -- Line 4318
		--[[ Upvalues[1]:
			[1]: Titles_upvr (readonly)
		]]
		Titles_upvr.Visible = false
	end)
	var1434_upvw = "Info"
	var1434_upvw = "Disable"
	Titles_upvr:WaitForChild(var1434_upvw):WaitForChild(var1434_upvw).Activated:Connect(function() -- Line 4319
		--[[ Upvalues[1]:
			[1]: Remotes_upvr (readonly)
		]]
		Remotes_upvr.CommF_:InvokeServer("activateTitle", "")
	end)
	var1434_upvw = "Info"
	var1434_upvw = "Exit"
	Colors_upvr:WaitForChild(var1434_upvw):WaitForChild(var1434_upvw).Activated:Connect(function() -- Line 4414
		--[[ Upvalues[1]:
			[1]: Colors_upvr (readonly)
		]]
		Colors_upvr.Visible = false
	end)
	var1434_upvw = "Info"
	var1434_upvw = "Disable"
	Colors_upvr:WaitForChild(var1434_upvw):WaitForChild(var1434_upvw).Activated:Connect(function() -- Line 4415
		--[[ Upvalues[1]:
			[1]: Remotes_upvr (readonly)
		]]
		Remotes_upvr.CommF_:InvokeServer("activateColor", "")
	end)
	var1005_upvw = {
		invites = 0;
		players = Allies_upvr.Container.Players;
		requests = Allies_upvr.Container.Requests;
		allies = Allies_upvr.Container.Allies;
		busy = false;
		load = function(arg1) -- Line 4436, Named "load"
			--[[ Upvalues[1]:
				[1]: LocalPlayer_upvr (readonly)
			]]
			arg1:removeAll()
			for _, v_32 in next, game.Players:GetPlayers() do
				if v_32 ~= LocalPlayer_upvr and v_32.Team == game.Teams.Pirates then
					arg1:displayItem(v_32)
				end
			end
		end;
		removeAll = function(arg1) -- Line 4444, Named "removeAll"
			arg1.invites = 0
			for _, v_33 in next, {arg1.players, arg1.requests, arg1.allies} do
				for _, v_34 in next, v_33.ScrollingFrame.Frame:GetChildren() do
					if v_34:IsA("ImageButton") and v_34.Name ~= "Template" then
						v_34:Destroy()
					end
				end
			end
			arg1:adjustBar()
		end;
		adjustBar = function(arg1) -- Line 4455, Named "adjustBar"
			--[[ Upvalues[2]:
				[1]: Parent_upvr_2 (readonly)
				[2]: var1005_upvw (read and write)
			]]
			local _ = {arg1.players, arg1.requests, arg1.allies}
			local var1419
			for _, v_35 in next, var1419 do
				local ScrollingFrame = v_35.ScrollingFrame
				ScrollingFrame.CanvasSize = UDim2.new(0, 0, (#ScrollingFrame.Frame:GetChildren() - 2) * ScrollingFrame.Frame.Template.Size.Y.Scale * 1.5, 0)
			end
			var1419 = Parent_upvr_2.AlliesButton
			if 0 >= var1005_upvw.invites then
				var1419 = false
			else
				var1419 = true
			end
			var1419.Notify.Visible = var1419
		end;
		displayItem = function(arg1, arg2) -- Line 4465, Named "displayItem"
			--[[ Upvalues[2]:
				[1]: LocalPlayer_upvr (readonly)
				[2]: Remotes_upvr (readonly)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			-- KONSTANTERROR: [0] 1. Error Block 33 start (CF ANALYSIS FAILED)
			local var1421_upvw
			if game:GetService("CollectionService"):HasTag(arg2, "Ally"..LocalPlayer_upvr.Name) or game:GetService("CollectionService"):HasTag(LocalPlayer_upvr, "Ally"..arg2.Name) or arg2.Team == game.Teams.Marines and LocalPlayer_upvr.Team == game.Teams.Marines then
				var1421_upvw = arg1.allies
				-- KONSTANTWARNING: GOTO [106] #75
			end
			-- KONSTANTERROR: [0] 1. Error Block 33 end (CF ANALYSIS FAILED)
			-- KONSTANTERROR: [59] 40. Error Block 34 start (CF ANALYSIS FAILED)
			if game:GetService("CollectionService"):HasTag(LocalPlayer_upvr, "Requested"..arg2.Name) then
				var1421_upvw = arg1.requests
				arg1.invites += 1
			elseif game:GetService("CollectionService"):HasTag(arg2, "Requested"..LocalPlayer_upvr.Name) then
				local Color3_fromRGB_result1_upvw = Color3.fromRGB(50, 250, 50)
				local var1423 = "(Pending)"
			end
			local Name_2_upvr = arg2.Name
			local clone_12_upvr = var1421_upvw.ScrollingFrame.Frame.Template:Clone()
			if Color3_fromRGB_result1_upvw then
				clone_12_upvr.ImageLabel.ImageColor3 = Color3_fromRGB_result1_upvw
			end
			if var1423 then
				clone_12_upvr.Label.Text = var1423
			end
			clone_12_upvr.Name = Name_2_upvr
			clone_12_upvr.TextLabel.Text = Name_2_upvr
			if var1421_upvw == arg1.requests then
				clone_12_upvr.Accept.Activated:Connect(function() -- Line 4490
					--[[ Upvalues[5]:
						[1]: arg1 (readonly)
						[2]: Remotes_upvr (copied, readonly)
						[3]: Name_2_upvr (readonly)
						[4]: clone_12_upvr (readonly)
						[5]: arg2 (readonly)
					]]
					if arg1.busy then
					else
						arg1.busy = true
						Remotes_upvr.CommF_:InvokeServer("AcceptAlly", Name_2_upvr)
						arg1.invites -= 1
						clone_12_upvr:Destroy()
						arg1:displayItem(arg2)
						arg1.busy = false
					end
				end)
				clone_12_upvr.Cancel.Activated:Connect(function() -- Line 4499
					--[[ Upvalues[5]:
						[1]: arg1 (readonly)
						[2]: Remotes_upvr (copied, readonly)
						[3]: Name_2_upvr (readonly)
						[4]: clone_12_upvr (readonly)
						[5]: arg2 (readonly)
					]]
					if arg1.busy then
					else
						arg1.busy = true
						Remotes_upvr.CommF_:InvokeServer("CancelAlly", Name_2_upvr)
						arg1.invites -= 1
						clone_12_upvr:Destroy()
						arg1:displayItem(arg2)
						arg1.busy = false
					end
				end)
			else
				clone_12_upvr.Activated:Connect(function() -- Line 4509
					--[[ Upvalues[7]:
						[1]: Color3_fromRGB_result1_upvw (read and write)
						[2]: arg1 (readonly)
						[3]: var1421_upvw (read and write)
						[4]: Remotes_upvr (copied, readonly)
						[5]: Name_2_upvr (readonly)
						[6]: clone_12_upvr (readonly)
						[7]: arg2 (readonly)
					]]
					-- KONSTANTERROR: [0] 1. Error Block 19 start (CF ANALYSIS FAILED)
					if Color3_fromRGB_result1_upvw ~= nil then
					else
						if arg1.busy then return end
						arg1.busy = true
						if var1421_upvw == arg1.players then
							if Remotes_upvr.CommF_:InvokeServer("InviteAlly", Name_2_upvr) then
								clone_12_upvr:Destroy()
								arg1:displayItem(arg2)
								-- KONSTANTWARNING: GOTO [62] #48
							end
						elseif var1421_upvw == arg1.allies and Remotes_upvr.CommF_:InvokeServer("RemoveAlly", Name_2_upvr) then
							clone_12_upvr:Destroy()
							arg1:displayItem(arg2)
						end
						-- KONSTANTERROR: [0] 1. Error Block 19 end (CF ANALYSIS FAILED)
						-- KONSTANTERROR: [62] 48. Error Block 12 start (CF ANALYSIS FAILED)
						arg1.busy = false
						-- KONSTANTERROR: [62] 48. Error Block 12 end (CF ANALYSIS FAILED)
					end
				end)
			end
			clone_12_upvr.Parent = var1421_upvw.ScrollingFrame.Frame
			clone_12_upvr.Visible = true
			arg1:adjustBar()
			-- KONSTANTERROR: [59] 40. Error Block 34 end (CF ANALYSIS FAILED)
		end;
	}
	Remotes_upvr.Allies.OnClientEvent:Connect(function() -- Line 4534
		--[[ Upvalues[1]:
			[1]: var1005_upvw (read and write)
		]]
		var1005_upvw:load()
	end)
	LocalPlayer_upvr:GetPropertyChangedSignal("Team"):Connect(function() -- Line 4539
		--[[ Upvalues[2]:
			[1]: IsMobile_upvr (readonly)
			[2]: GuiService_upvr (readonly)
		]]
		if IsMobile_upvr() then
			GuiService_upvr.TouchControlsEnabled = true
		end
		require(script.Parent.Shared).reflectHUDButtonVisibility()
	end)
	var1434_upvw = script.Parent
	require(var1434_upvw.Shared).EnableGuiComponentsOnSpawn()
	local Buttons_upvr = Parent_upvr_2.Settings:WaitForChild("Buttons")
	_G.postSpawn = {}
	local function gamepadNavigation_upvr(arg1) -- Line 4576, Named "gamepadNavigation"
		--[[ Upvalues[4]:
			[1]: UserInputService_upvr (readonly)
			[2]: module_3_upvr (readonly)
			[3]: GuiService_upvr (readonly)
			[4]: Parent_upvr_2 (readonly)
		]]
		UserInputService_upvr:SetNavigationGamepad(arg1, true)
		table.insert(_G.postSpawn, function() -- Line 4578
			--[[ Upvalues[3]:
				[1]: UserInputService_upvr (copied, readonly)
				[2]: module_3_upvr (copied, readonly)
				[3]: GuiService_upvr (copied, readonly)
			]]
			if UserInputService_upvr.GamepadEnabled then
				module_3_upvr.new("<Color=Green>Console mode activated (Gamepad).<Color=/>"):Display()
			end
			GuiService_upvr.SelectedObject = nil
		end)
		GuiService_upvr.SelectedObject = Parent_upvr_2:WaitForChild("ChooseTeam"):WaitForChild("Container"):WaitForChild("Pirates"):WaitForChild("Frame"):WaitForChild("TextButton")
	end
	UserInputService_upvr.GamepadConnected:Connect(function(arg1) -- Line 4587
		--[[ Upvalues[2]:
			[1]: module_3_upvr (readonly)
			[2]: gamepadNavigation_upvr (readonly)
		]]
		module_3_upvr.new("<Color=Green>Console mode activated (Gamepad).<Color=/>"):Display()
		gamepadNavigation_upvr(arg1)
	end)
	function var1434_upvw() -- Line 4595
		--[[ Upvalues[2]:
			[1]: UserInputService_upvr (readonly)
			[2]: gamepadNavigation_upvr (readonly)
		]]
		for _, v_36 in UserInputService_upvr:GetConnectedGamepads() do
			gamepadNavigation_upvr(v_36)
		end
	end
	task.spawn(var1434_upvw)
	local MobileSettingsButtons_upvw = Parent_upvr_2:FindFirstChild("MobileSettingsButtons")
	var1434_upvw = nil
	local any_new_result1_upvr_3 = require(game.ReplicatedStorage:WaitForChild("Util"):WaitForChild("Signal2")).new()
	if MobileSettingsButtons_upvw then
		var1434_upvw = MobileSettingsButtons_upvw:WaitForChild("PvpEnableButton")
	else
		Parent_upvr_2.ChildAdded:Connect(function(arg1) -- Line 4617
			--[[ Upvalues[3]:
				[1]: MobileSettingsButtons_upvw (read and write)
				[2]: var1434_upvw (read and write)
				[3]: any_new_result1_upvr_3 (readonly)
			]]
			if arg1.Name == "MobileSettingsButtons" then
				MobileSettingsButtons_upvw = arg1
				var1434_upvw = MobileSettingsButtons_upvw:WaitForChild("PvpEnableButton")
				any_new_result1_upvr_3:Fire(MobileSettingsButtons_upvw)
			end
		end)
	end
	local PvpEnableButton_upvr = Buttons_upvr:WaitForChild("PvpEnableButton")
	local function toggleSettings() -- Line 4627
		--[[ Upvalues[7]:
			[1]: MobileUIController_upvr (readonly)
			[2]: IsMobile_upvr (readonly)
			[3]: Flags_upvr (readonly)
			[4]: MobileSettingsButtons_upvw (read and write)
			[5]: Buttons_upvr (readonly)
			[6]: PvpEnableButton_upvr (readonly)
			[7]: var1434_upvw (read and write)
		]]
		if IsMobile_upvr() then
			if MobileUIController_upvr:IsNewUIEnabled() and Flags_upvr.NEW_MOBILE_CONTROLS_OPTION_ENABLED then
				MobileSettingsButtons_upvw.Visible = not MobileSettingsButtons_upvw.Visible
				-- KONSTANTWARNING: GOTO [27] #22
			end
		end
		Buttons_upvr.Visible = not Buttons_upvr.Visible
		if game.Players.LocalPlayer:GetAttribute("PvpDisabled") then
			PvpEnableButton_upvr:SetAttribute("IsEnabled", true)
			var1434_upvw:SetAttribute("IsEnabled", true)
		else
			PvpEnableButton_upvr:SetAttribute("IsEnabled", false)
			var1434_upvw:SetAttribute("IsEnabled", false)
		end
	end
	Parent_upvr_2.Settings.Activated:Connect(toggleSettings)
	game.ReplicatedStorage.Events.ToggleSettingsWindow.Event:Connect(toggleSettings)
	local function onPvpAttribute_upvr(arg1) -- Line 4645, Named "onPvpAttribute"
		if arg1:GetAttribute("IsEnabled") then
			arg1.AutoButtonColor = true
			arg1.BackgroundColor3 = Color3.fromRGB(255, 214, 49)
			arg1.BorderColor3 = Color3.fromRGB(255, 240, 69)
			arg1:WaitForChild("Trans").BackgroundColor3 = Color3.fromRGB(255, 241, 87)
			arg1.Notify2.Visible = true
		else
			arg1.AutoButtonColor = false
			arg1.BackgroundColor3 = Color3.fromRGB(132, 132, 132)
			arg1.BorderColor3 = Color3.fromRGB(91, 91, 91)
			arg1:WaitForChild("Trans").BackgroundColor3 = Color3.fromRGB(194, 194, 194)
			arg1.Notify2.Visible = false
		end
	end
	PvpEnableButton_upvr:GetAttributeChangedSignal("IsEnabled"):Connect(function() -- Line 4660
		--[[ Upvalues[2]:
			[1]: onPvpAttribute_upvr (readonly)
			[2]: PvpEnableButton_upvr (readonly)
		]]
		onPvpAttribute_upvr(PvpEnableButton_upvr)
	end)
	task.defer(onPvpAttribute_upvr, PvpEnableButton_upvr)
	if var1434_upvw then
		var1434_upvw:GetAttributeChangedSignal("IsEnabled"):Connect(function() -- Line 4666
			--[[ Upvalues[2]:
				[1]: onPvpAttribute_upvr (readonly)
				[2]: var1434_upvw (read and write)
			]]
			onPvpAttribute_upvr(var1434_upvw)
		end)
		task.defer(onPvpAttribute_upvr, var1434_upvw)
	else
		any_new_result1_upvr_3:Connect(function(arg1) -- Line 4671
			--[[ Upvalues[2]:
				[1]: var1434_upvw (read and write)
				[2]: onPvpAttribute_upvr (readonly)
			]]
			var1434_upvw:GetAttributeChangedSignal("IsEnabled"):Connect(function() -- Line 4672
				--[[ Upvalues[2]:
					[1]: onPvpAttribute_upvr (copied, readonly)
					[2]: var1434_upvw (copied, read and write)
				]]
				onPvpAttribute_upvr(var1434_upvw)
			end)
			task.defer(onPvpAttribute_upvr, var1434_upvw)
		end)
	end
	Remotes_upvr:WaitForChild("BreakTree").OnClientEvent:Connect(function(arg1) -- Line 4682
		local _G_Encode_result1_2 = _G.Encode(arg1)
		require(game.ReplicatedStorage.Effect).new("TreeBreak"):replicate({_G_Encode_result1_2})
		if _G.reducing then
			for _, v_37 in next, _G_Encode_result1_2:GetDescendants() do
				if v_37:IsA("BasePart") then
					v_37.Material = Enum.Material.SmoothPlastic
				end
			end
		end
	end)
	Remotes_upvr:WaitForChild("RegenModel").OnClientEvent:Connect(function(arg1) -- Line 4694
		if _G.reducing then
			for _, v_38 in next, _G.Encode(arg1):GetDescendants() do
				if v_38:IsA("BasePart") then
					v_38.Material = Enum.Material.SmoothPlastic
				end
			end
		end
	end)
	local ChooseTeam_upvr = Parent_upvr_2:WaitForChild("ChooseTeam")
	_G.reducing = false
	local Util_upvr = require(game.ReplicatedStorage.Util)
	local function fastModeButton_upvr() -- Line 4710, Named "fastModeButton"
		--[[ Upvalues[4]:
			[1]: ChooseTeam_upvr (readonly)
			[2]: Buttons_upvr (readonly)
			[3]: MobileSettingsButtons_upvw (read and write)
			[4]: Util_upvr (readonly)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 49 start (CF ANALYSIS FAILED)
		local FastModeButton = ChooseTeam_upvr:FindFirstChild("FastModeButton")
		if FastModeButton then
			FastModeButton = ChooseTeam_upvr.FastModeButton:FindFirstChild("TextLabel")
		end
		local tbl_4 = {
			Text = "";
		}
		if MobileSettingsButtons_upvw then
		end
		if _G.reducing then return end
		_G.reducing = true
		if FastModeButton then
			FastModeButton.Text = "Working.."
			ChooseTeam_upvr.FastModeButton.Notify.Text = "(You can play while it's working, usually takes 20 to 80 seconds to finish)"
		end
		Buttons_upvr.FastModeButton.TextLabel.Text = "Working.."
		if tbl_4 then
			tbl_4.Text = "Working.."
		end
		Buttons_upvr.FastModeButton.Notify.Text = "(You can play while it's working, usually takes 20 to 80 seconds to finish)"
		if MobileSettingsButtons_upvw then
			MobileSettingsButtons_upvw.FastModeButton.Notify.Text = "(You can play while it's working, usually takes 20 to 80 seconds to finish)"
		end
		_G.FastMode = true
		local _ = game.ReplicatedStorage:WaitForChild("Unloaded")
		wait(0.5)
		wait(0.5)
		local _ = task.wait
		local _ = os.clock()
		-- KONSTANTERROR: [0] 1. Error Block 49 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [180] 130. Error Block 23 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [180] 130. Error Block 23 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [135] 93. Error Block 60 start (CF ANALYSIS FAILED)
		-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [180.22]
		if nil then
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [180.23]
			if nil < nil then
				if FastModeButton then
				end
				-- KONSTANTWARNING: GOTO [180] #130
			end
		else
			-- KONSTANTERROR: Expression was reused, decompilation is incorrect (x2)
			if nil and not nil then
			end
		end
		-- KONSTANTERROR: [135] 93. Error Block 60 end (CF ANALYSIS FAILED)
	end
	ChooseTeam_upvr:WaitForChild("FastModeButton").Activated:Connect(fastModeButton_upvr)
	local function hookUpSettingsButtons_upvr(arg1) -- Line 4832, Named "hookUpSettingsButtons"
		--[[ Upvalues[3]:
			[1]: fastModeButton_upvr (readonly)
			[2]: Remotes_upvr (readonly)
			[3]: LocalPlayer_upvr (readonly)
		]]
		arg1:WaitForChild("FastModeButton").Activated:Connect(fastModeButton_upvr)
		local PvpEnableButton_upvr_2 = arg1:WaitForChild("PvpEnableButton")
		local Text_upvr_2 = arg1:WaitForChild("PvpEnableButton"):WaitForChild("TextLabel").Text
		PvpEnableButton_upvr_2.Activated:Connect(function() -- Line 4837
			--[[ Upvalues[5]:
				[1]: PvpEnableButton_upvr_2 (readonly)
				[2]: arg1 (readonly)
				[3]: Remotes_upvr (copied, readonly)
				[4]: LocalPlayer_upvr (copied, readonly)
				[5]: Text_upvr_2 (readonly)
			]]
			if not PvpEnableButton_upvr_2:GetAttribute("IsEnabled") then
			else
				if PvpEnableButton_upvr_2.TextLabel.Text == "Enabling..." then return end
				PvpEnableButton_upvr_2.TextLabel.Text = "Enabling..."
				arg1.Parent:WaitForChild("Notify").Visible = false
				if Remotes_upvr.CommF_:InvokeServer("EnablePvp") then
					PvpEnableButton_upvr_2:SetAttribute("IsEnabled", false)
					LocalPlayer_upvr:SetAttribute("PvpDisabled", false)
				end
				PvpEnableButton_upvr_2.TextLabel.Text = Text_upvr_2
			end
		end)
		local DmgCounterButton_upvr = arg1:WaitForChild("DmgCounterButton")
		DmgCounterButton_upvr.Activated:Connect(function() -- Line 4850
			--[[ Upvalues[2]:
				[1]: DmgCounterButton_upvr (readonly)
				[2]: Remotes_upvr (copied, readonly)
			]]
			local Enabled = _G.dmgCounter.Enabled
			_G.dmgCounter.Enabled = not Enabled
			if _G.dmgCounter.Enabled then
				Enabled = "(ON)"
			else
				Enabled = "(OFF)"
			end
			DmgCounterButton_upvr.TextLabel.Text = "Counter "..Enabled
			Remotes_upvr.CommF_:InvokeServer("ToggleCounter", _G.dmgCounter.Enabled)
		end)
	end
	hookUpSettingsButtons_upvr(Buttons_upvr)
	if MobileSettingsButtons_upvw then
		hookUpSettingsButtons_upvr(MobileSettingsButtons_upvw)
	else
		Parent_upvr_2.ChildAdded:Connect(function(arg1) -- Line 4869
			--[[ Upvalues[2]:
				[1]: MobileSettingsButtons_upvw (read and write)
				[2]: hookUpSettingsButtons_upvr (readonly)
			]]
			if arg1.Name == "MobileSettingsButtons" then
				MobileSettingsButtons_upvw = arg1
				hookUpSettingsButtons_upvr(MobileSettingsButtons_upvw)
			end
		end)
	end
	task.spawn(function() -- Line 4879
		--[[ Upvalues[4]:
			[1]: Remotes_upvr (readonly)
			[2]: any_new_result1_upvr_7 (readonly)
			[3]: Buttons_upvr (readonly)
			[4]: MobileSettingsButtons_upvw (read and write)
		]]
		-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
		local var1477
		repeat
			var1477 = Remotes_upvr.CommF_:InvokeServer("GetDmgCounterSetting")
		until var1477 ~= nil
		any_new_result1_upvr_7.Enabled = var1477
		if any_new_result1_upvr_7.Enabled then
		else
		end
		local var1478 = "Counter ".."(OFF)"
		Buttons_upvr:WaitForChild("DmgCounterButton").TextLabel.Text = var1478
		if MobileSettingsButtons_upvw then
			MobileSettingsButtons_upvw:WaitForChild("DmgCounterButton").TextLabel.Text = var1478
		end
	end)
	local UIGradient_upvr_2 = script.Parent.Level.FriendBoost.TextLabel2.UIGradient
	function fixFriendBoostIcon() -- Line 4907
		local udim2 = UDim2.new(0, script.Parent.Level.AbsoluteSize.X - script.Parent.Level.FriendBoost.AbsoluteSize.X + 5, 0.5, 0)
		if script.Parent.Level.AbsoluteSize.X - script.Parent.Level.FriendBoost.AbsoluteSize.X - 3 < script.Parent.Level.TextBounds.X then
			udim2 = UDim2.new(1, 20, 0.5, 0)
		end
		script.Parent.Level.FriendBoost.Position = udim2
	end
	fixFriendBoostIcon()
	script.Parent.Level:GetPropertyChangedSignal("TextBounds"):Connect(fixFriendBoostIcon)
	LocalPlayer_upvr:GetAttributeChangedSignal("FriendBoost"):Connect(function() -- Line 4917
		--[[ Upvalues[1]:
			[1]: LocalPlayer_upvr (readonly)
		]]
		local FriendBoost_2 = LocalPlayer_upvr:GetAttribute("FriendBoost")
		if not FriendBoost_2 or FriendBoost_2 <= 0 then
			script.Parent.Level.FriendBoost.Visible = false
		else
			local rounded = math.floor(FriendBoost_2 * 100 + 0.5)
			local rounded_3 = math.floor(rounded / 15 + 0.5)
			local minimum_6 = math.min(rounded, 45)
			script.Parent.Level.FriendBoost.Visible = true
			script.Parent.Level.FriendBoost.TextLabel.Text = minimum_6..'%'
			local script = script
			if 1 < rounded_3 then
				script = "s are "
			else
				script = " is "
			end
			script.Parent.Level.FriendBoost.TextLabel2.Text = rounded_3.." friend"..script.."in your server! +"..minimum_6.."% EXP"
		end
	end)
	local FriendBoost = LocalPlayer_upvr:GetAttribute("FriendBoost")
	if not FriendBoost or FriendBoost <= 0 then
		script.Parent.Level.FriendBoost.Visible = false
		-- KONSTANTWARNING: GOTO [3225] #2324
	end
	local rounded_2 = math.floor(FriendBoost * 100 + 0.5)
	local rounded_4 = math.floor(rounded_2 / 15 + 0.5)
	local minimum_4 = math.min(rounded_2, 45)
	script.Parent.Level.FriendBoost.Visible = true
	script.Parent.Level.FriendBoost.TextLabel.Text = minimum_4..'%'
	if 1 < rounded_4 then
	else
	end
	script.Parent.Level.FriendBoost.TextLabel2.Text = rounded_4.." friend".." is ".."in your server! +"..minimum_4.."% EXP"
	script.Parent.Level.FriendBoost.MouseEnter:Connect(function() -- Line 4946
		--[[ Upvalues[1]:
			[1]: UIGradient_upvr_2 (readonly)
		]]
		UIGradient_upvr_2.Parent = script.Parent.Level.FriendBoost.TextLabel
	end)
	script.Parent.Level.FriendBoost.MouseLeave:Connect(function() -- Line 4949
		--[[ Upvalues[1]:
			[1]: UIGradient_upvr_2 (readonly)
		]]
		UIGradient_upvr_2.Parent = script.Parent.Level.FriendBoost.TextLabel2
	end)
	local UIGradient_upvr = script.Parent.Level.ExploreBoost.TextLabel2.UIGradient
	function fixExploreBoostIcon() -- Line 4957
		local udim2_2 = UDim2.new(0, script.Parent.Level.AbsoluteSize.X - script.Parent.Level.ExploreBoost.AbsoluteSize.X + 5, 0.5, 0)
		if script.Parent.Level.AbsoluteSize.X - script.Parent.Level.ExploreBoost.AbsoluteSize.X - 3 < script.Parent.Level.TextBounds.X then
			udim2_2 = UDim2.new(1, 20, 0.5, 0)
		end
		script.Parent.Level.ExploreBoost.Position = udim2_2
	end
	fixExploreBoostIcon()
	script.Parent.Level:GetPropertyChangedSignal("TextBounds"):Connect(fixExploreBoostIcon)
	local function ExploreBoostVisibilityUpdate() -- Line 4969
		--[[ Upvalues[1]:
			[1]: LocalPlayer_upvr (readonly)
		]]
		local ExploreBoost = LocalPlayer_upvr:GetAttribute("ExploreBoost")
		if not ExploreBoost or ExploreBoost <= 1 then
			script.Parent.Level.ExploreBoost.Visible = false
		else
			script.Parent.Level.ExploreBoost.Visible = true
			script.Parent.Level.ExploreBoost.TextLabel.Text = ExploreBoost
			script.Parent.Level.ExploreBoost.TextLabel2.Text = `Sea Exploration Group: {ExploreBoost} Players`
		end
	end
	LocalPlayer_upvr:GetAttributeChangedSignal("ExploreBoost"):Connect(ExploreBoostVisibilityUpdate)
	ExploreBoostVisibilityUpdate()
	script.Parent.Level.ExploreBoost.MouseEnter:Connect(function() -- Line 4984
		--[[ Upvalues[1]:
			[1]: UIGradient_upvr (readonly)
		]]
		UIGradient_upvr.Parent = script.Parent.Level.ExploreBoost.TextLabel
	end)
	script.Parent.Level.ExploreBoost.MouseLeave:Connect(function() -- Line 4987
		--[[ Upvalues[1]:
			[1]: UIGradient_upvr (readonly)
		]]
		UIGradient_upvr.Parent = script.Parent.Level.ExploreBoost.TextLabel2
	end)
	local Bar = Main_upvr:WaitForChild("Bar")
	local CommandBox_upvr = Bar:WaitForChild("CommandBox")
	Bar:WaitForChild("Invite").Activated:Connect(function() -- Line 4995
		--[[ Upvalues[4]:
			[1]: var993_upvw (read and write)
			[2]: CommandBox_upvr (readonly)
			[3]: Remotes_upvr (readonly)
			[4]: module_3_upvr (readonly)
		]]
		if var993_upvw or #CommandBox_upvr.Text == 0 then
		else
			local _, any_InvokeServer_result2_6, _ = Remotes_upvr.Crew:InvokeServer("Invite", CommandBox_upvr.Text)
			CommandBox_upvr.Text = ""
			if any_InvokeServer_result2_6 then
				module_3_upvr.new(any_InvokeServer_result2_6):Display()
			end
		end
	end)
	Bar:WaitForChild("Kick").Activated:Connect(function() -- Line 5003
		--[[ Upvalues[5]:
			[1]: var993_upvw (read and write)
			[2]: CommandBox_upvr (readonly)
			[3]: Remotes_upvr (readonly)
			[4]: module_3_upvr (readonly)
			[5]: var1515_upvw (read and write)
		]]
		if var993_upvw or #CommandBox_upvr.Text == 0 then
		else
			local _, any_InvokeServer_result2, any_InvokeServer_result3_3 = Remotes_upvr.Crew:InvokeServer("Kick", CommandBox_upvr.Text)
			CommandBox_upvr.Text = ""
			module_3_upvr.new(any_InvokeServer_result2):Display()
			if any_InvokeServer_result3_3 then
				var1515_upvw(any_InvokeServer_result3_3)
			end
		end
	end)
	Bar:WaitForChild("Abandon").Activated:Connect(function() -- Line 5012
		--[[ Upvalues[1]:
			[1]: Main_upvr (readonly)
		]]
		Main_upvr.ConfirmAbandon.Visible = true
	end)
	Main_upvr:WaitForChild("ConfirmAbandon"):WaitForChild("Yes").Activated:Connect(function() -- Line 5015
		--[[ Upvalues[5]:
			[1]: var993_upvw (read and write)
			[2]: Remotes_upvr (readonly)
			[3]: module_3_upvr (readonly)
			[4]: Create_upvr (readonly)
			[5]: Main_upvr (readonly)
		]]
		if var993_upvw then
		else
			local any_InvokeServer_result1_4, any_InvokeServer_result2_4, _ = Remotes_upvr.Crew:InvokeServer("Abandon")
			module_3_upvr.new(any_InvokeServer_result2_4):Display()
			if any_InvokeServer_result1_4 then
				Create_upvr.Visible = true
				Main_upvr.Visible = false
				Main_upvr.ConfirmAbandon.Visible = false
			end
		end
	end)
	Main_upvr:WaitForChild("ConfirmAbandon"):WaitForChild("No").Activated:Connect(function() -- Line 5025
		--[[ Upvalues[1]:
			[1]: Main_upvr (readonly)
		]]
		Main_upvr.ConfirmAbandon.Visible = false
	end)
	Main_upvr:GetPropertyChangedSignal("Visible"):Connect(function() -- Line 5028
		--[[ Upvalues[1]:
			[1]: var1515_upvw (read and write)
		]]
		var1515_upvw()
	end)
	function var1515_upvw(arg1, arg2) -- Line 5031
		--[[ Upvalues[4]:
			[1]: Main_upvr (readonly)
			[2]: Remotes_upvr (readonly)
			[3]: LocalPlayer_upvr (readonly)
			[4]: Text_upvr (readonly)
		]]
		-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
		local var1551
		for _, v_39 in next, Main_upvr.Members:GetChildren() do
			if v_39:IsA("Frame") and v_39.Visible and v_39.Name == "Entry" then
				v_39:Destroy()
			end
		end
		if not var1551 then
			local any_InvokeServer_result1_3, any_InvokeServer_result2_3, any_InvokeServer_result3_2, any_InvokeServer_result4_2 = Remotes_upvr.Crew:InvokeServer("GetData")
			_ = any_InvokeServer_result1_3 -- Setting global
			_ = any_InvokeServer_result2_3 -- Setting global
			var1551 = any_InvokeServer_result3_2
			local var1556 = any_InvokeServer_result4_2
		end
		if var1551 then
			if var1551.Owner.UserId == LocalPlayer_upvr.UserId then
				Main_upvr.Bar.Kick.Visible = true
				Main_upvr.Bar.Invite.Visible = true
				Main_upvr.Bar.CommandBox.Visible = true
				Main_upvr.Bar.Warning.Visible = false
			else
				Main_upvr.Bar.Kick.Visible = false
				Main_upvr.Bar.Invite.Visible = false
				Main_upvr.Bar.CommandBox.Visible = false
				Main_upvr.Bar.Warning.Visible = true
			end
			any_InvokeServer_result4_2 = " | Members: "
			v_39 = #var1551.Members
			Main_upvr.CrewName.Text = var1551.Name..any_InvokeServer_result4_2..v_39..'/'..var1551.MaxMembers
			v_39 = var1551.Owner
			any_InvokeServer_result4_2 = v_39.Name
			Main_upvr.CrewOwner.Text = "Captain: "..any_InvokeServer_result4_2
			v_39 = Text_upvr
			any_InvokeServer_result4_2 = v_39.commaValue
			v_39 = var1551.TotalBounty
			any_InvokeServer_result4_2 = any_InvokeServer_result4_2(v_39)
			Main_upvr.CrewBounty.Text = "Total Bounty: $"..any_InvokeServer_result4_2
			table.sort(var1551.Members, function(arg1_25, arg2_10) -- Line 5053
				local var1558
				if arg2_10.Bounty >= arg1_25.Bounty then
					var1558 = false
				else
					var1558 = true
				end
				return var1558
			end)
			any_InvokeServer_result4_2 = nil
			for _, v_40 in next, var1551.Members, any_InvokeServer_result4_2 do
				local clone_9 = Main_upvr.Members.Entry:Clone()
				clone_9.Bounty.Text = '$'..Text_upvr.shortValue(v_40.Bounty)
				local var1560
				local function INLINED_11() -- Internal function, doesn't exist in bytecode
					var1560 = v_40.Level
					return var1560
				end
				if 0 >= v_40.Level or not INLINED_11() then
					var1560 = "(Loading..)"
				end
				clone_9.Level.Text = var1560
				var1560 = v_40.Name
				clone_9:FindFirstChild("Name").Text = var1560
				clone_9.LayoutOrder = 0 + 1
				clone_9.Visible = true
				var1560 = Main_upvr
				clone_9.Parent = var1560.Members
			end
			any_InvokeServer_result4_2 = 0
			Main_upvr.Members.CanvasSize = UDim2.new(any_InvokeServer_result4_2, 0, 0, (1 + var1551.MaxMembers) * 18)
		end
		if var1556 then
			for _, v_41 in next, Main_upvr.Leaderboard:GetChildren() do
				if v_41:IsA("Frame") and v_41.Visible and v_41.Name == "Entry" then
					v_41:Destroy()
				end
			end
			for _, v_42 in next, var1556 do
				local clone_8 = Main_upvr.Leaderboard.Entry:Clone()
				clone_8.Rank.Text = v_42.Rank or "#?"
				clone_8.Bounty.Text = '$'..Text_upvr.shortValue(v_42.TotalBounty)
				clone_8:FindFirstChild("Name").Text = v_42.Name:match("(.+);") or "(Loading..)"
				clone_8.LayoutOrder = 0 + 1
				clone_8.Visible = true
				clone_8.Parent = Main_upvr.Leaderboard
				local _
			end
			Main_upvr.Leaderboard.CanvasSize = UDim2.new(0, 0, 0, 1818)
		end
	end
	local var1516_upvw = var1515_upvw
	Create_upvr:WaitForChild("CreateButton").Activated:Connect(function() -- Line 5087
		--[[ Upvalues[6]:
			[1]: var993_upvw (read and write)
			[2]: Remotes_upvr (readonly)
			[3]: Create_upvr (readonly)
			[4]: var1516_upvw (read and write)
			[5]: Main_upvr (readonly)
			[6]: module_3_upvr (readonly)
		]]
		if var993_upvw then
		else
			var993_upvw = true
			local tbl_38 = {
				Name = Create_upvr.CrewNameBox.Text;
			}
			local any_match_result1 = Create_upvr.Preview.Image.Image:match("&assetId=(%d+)")
			if not any_match_result1 then
				any_match_result1 = Create_upvr.Preview.Image.Image:match("rbxassetid://(%d+)")
			end
			tbl_38.Logo = any_match_result1
			local any_InvokeServer_result1_2, any_InvokeServer_result2_2, any_InvokeServer_result3_4 = Remotes_upvr.Crew:InvokeServer("Create", tbl_38)
			if any_InvokeServer_result1_2 then
				var1516_upvw(any_InvokeServer_result3_4)
				Create_upvr.Visible = false
				Main_upvr.Visible = true
			elseif any_InvokeServer_result3_4 then
				Create_upvr.CrewNameBox.Text = any_InvokeServer_result3_4
			end
			module_3_upvr.new(any_InvokeServer_result2_2):Display()
			var993_upvw = false
		end
	end)
	Create_upvr:WaitForChild("CrewNameBox"):GetPropertyChangedSignal("Text"):Connect(function() -- Line 5101
		--[[ Upvalues[1]:
			[1]: Create_upvr (readonly)
		]]
		Create_upvr.CrewNameBox.Text = string.sub(Create_upvr.CrewNameBox.Text, 0, 21)
	end)
	Create_upvr:WaitForChild("LogoBox").FocusLost:Connect(function() -- Line 5104
		--[[ Upvalues[2]:
			[1]: Create_upvr (readonly)
			[2]: module_3_upvr (readonly)
		]]
		local string_match_result1_3 = string.match(Create_upvr.LogoBox.Text, "library/(%d+)/")
		if not string_match_result1_3 then
			string_match_result1_3 = string.match(Create_upvr.LogoBox.Text, "asset/(%d+)/")
		end
		if string_match_result1_3 then
			Create_upvr.Preview.Image.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId="..string_match_result1_3
			module_3_upvr.new("<Logo ID set to "..string_match_result1_3..'>'):Display()
		else
			Create_upvr.Preview.Image.Image = ""
			module_3_upvr.new("<ERROR: Invalid Link.>"):Display()
		end
	end)
	local Invite_upvw = Create_upvr:WaitForChild("Invite")
	local var1575_upvw
	Invite_upvw:WaitForChild("Accept").Activated:Connect(function() -- Line 5116
		--[[ Upvalues[7]:
			[1]: var993_upvw (read and write)
			[2]: var1575_upvw (read and write)
			[3]: Remotes_upvr (readonly)
			[4]: var1516_upvw (read and write)
			[5]: Create_upvr (readonly)
			[6]: Main_upvr (readonly)
			[7]: module_3_upvr (readonly)
		]]
		if var993_upvw then
		else
			var993_upvw = true
			if var1575_upvw then
				local any_InvokeServer_result1, any_InvokeServer_result2_5, any_InvokeServer_result3_5 = Remotes_upvr.Crew:InvokeServer("Join", {
					CrewID = var1575_upvw;
				})
				if any_InvokeServer_result1 then
					var1516_upvw(any_InvokeServer_result3_5)
					Create_upvr.Visible = false
					Main_upvr.Visible = true
					var1575_upvw = nil
					Create_upvr.Invite.Visible = false
				end
				module_3_upvr.new(any_InvokeServer_result2_5):Display()
			end
			var993_upvw = false
		end
	end)
	Invite_upvw:WaitForChild("Cancel").Activated:Connect(function() -- Line 5132
		--[[ Upvalues[2]:
			[1]: Invite_upvw (readonly)
			[2]: var1575_upvw (read and write)
		]]
		Invite_upvw.Visible = false
		var1575_upvw = nil
	end)
	Remotes_upvr:WaitForChild("RefreshCrew").OnClientEvent:Connect(function(arg1, arg2, arg3) -- Line 5136
		--[[ Upvalues[5]:
			[1]: var901_upvw (read and write)
			[2]: var1516_upvw (read and write)
			[3]: Create_upvr (readonly)
			[4]: Main_upvr (readonly)
			[5]: var1575_upvw (read and write)
		]]
		if arg1 == "CrewInfo" and var901_upvw then
			if arg2 then
				var1516_upvw(arg2, arg3)
				Create_upvr.Visible = false
				Main_upvr.Visible = true
				Main_upvr.ConfirmAbandon.Visible = false
			else
				Create_upvr.Visible = true
				Main_upvr.Visible = false
				Main_upvr.ConfirmAbandon.Visible = false
			end
		end
		if arg1 == "CrewInvite" then
			if arg2 then
				var1575_upvw = arg2.CrewID
				Create_upvr.Invite.name.Text = arg2.Name
				Create_upvr.Invite.Visible = true
				return
			end
			var1575_upvw = nil
			Create_upvr.Invite.Visible = false
		end
	end)
	local function secondsToClock_upvr(arg1) -- Line 5166, Named "secondsToClock"
		local tonumber_result1 = tonumber(arg1)
		if tonumber_result1 <= 0 then
			return "00:00"
		end
		local formatted = string.format("%02.f", math.floor(tonumber_result1 / 3600))
		local formatted_2 = string.format("%02.f", math.floor(tonumber_result1 / 60 - formatted * 60))
		return formatted_2..':'..string.format("%02.f", math.floor(tonumber_result1 - formatted * 3600 - formatted_2 * 60))
	end
	Invite_upvw = Parent_upvr_2.TopHUDList
	CommandBox_upvr = Invite_upvw.RaidTimer
	Invite_upvw = 0
	Remotes_upvr:WaitForChild("Raids").OnClientEvent:Connect(function(arg1, ...) -- Line 5181
		--[[ Upvalues[3]:
			[1]: Invite_upvw (read and write)
			[2]: CommandBox_upvr (readonly)
			[3]: secondsToClock_upvr (readonly)
		]]
		if arg1 == "StartTimer" then
			Invite_upvw += 1
			local var1587, var1588 = ...
			CommandBox_upvr.Text = ""
			CommandBox_upvr.Visible = true
			if var1588 then
				var1588 = workspace:GetServerTimeNow() - var1588
			else
				var1588 = 0
			end
			if CommandBox_upvr.Visible and Invite_upvw == Invite_upvw then
				CommandBox_upvr.Text = "Time Left: "..secondsToClock_upvr((var1587) - ((tick()) - (tick() - var1588)))
				task.wait(0.1)
				-- KONSTANTWARNING: GOTO [29] #24
			end
		elseif arg1 == "Finished" then
			CommandBox_upvr.Visible = false
		end
	end)
	secondsToClock_upvr = task.defer
	CommandBox_upvr = require(game.ReplicatedStorage.Util.AwaitCurrentWorld).ReturnBlankFunctionOnWorldFail
	CommandBox_upvr = CommandBox_upvr("Zou", function() -- Line 5209
		--[[ Upvalues[3]:
			[1]: Parent_upvr_2 (readonly)
			[2]: IsMobile_upvr (readonly)
			[3]: Net_upvr (readonly)
		]]
		local ActiveRocks_upvr = Parent_upvr_2.TopHUDList.ActiveRocks
		local ActiveMobs_upvr = Parent_upvr_2.TopHUDList.ActiveMobs
		local PrehistoricRaidTimer_upvr = Parent_upvr_2.TopHUDList.PrehistoricRaidTimer
		local PrehistoricRelicHealth_upvr = Parent_upvr_2.TopHUDList.PrehistoricRelicHealth
		local Color3_fromRGB_result1_upvr_2 = Color3.fromRGB(255, 255, 255)
		local Color3_fromRGB_result1_upvr = Color3.fromRGB(85, 0, 0)
		local var1596_upvw
		Net_upvr:RemoteEvent("PrehistoricEvent").OnClientEvent:Connect(function(...) -- Line 5217, Named "handlePrehistoricEvent"
			--[[ Upvalues[8]:
				[1]: ActiveRocks_upvr (readonly)
				[2]: ActiveMobs_upvr (readonly)
				[3]: IsMobile_upvr (copied, readonly)
				[4]: PrehistoricRaidTimer_upvr (readonly)
				[5]: PrehistoricRelicHealth_upvr (readonly)
				[6]: Color3_fromRGB_result1_upvr_2 (readonly)
				[7]: Color3_fromRGB_result1_upvr (readonly)
				[8]: var1596_upvw (read and write)
			]]
			-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
			local args_list = {...}
			local _1_3 = args_list[1]
			local var1599
			if _1_3 == "Rocks" then
				local _ = ActiveRocks_upvr
				var1599 = "Active Rocks"
			elseif _1_3 == "Mobs" then
				var1599 = "Active Mobs"
			end
			if IsMobile_upvr() then
				ActiveRocks_upvr.Size = UDim2.new(1, 0, 0, 20)
				ActiveMobs_upvr.Size = UDim2.new(1, 0, 0, 20)
				PrehistoricRaidTimer_upvr.Size = UDim2.new(1, 0, 0, 20)
				PrehistoricRelicHealth_upvr.Size = UDim2.new(1, 0, 0, 20)
			end
			if _1_3 == "Rocks" or _1_3 == "Mobs" then
				local _2 = args_list[2]
				ActiveMobs_upvr.Text = string.format("%s: %s", var1599, _2)
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
				ActiveMobs_upvr.Visible = true
				-- KONSTANTERROR: Expression was reused, decompilation is incorrect
				ActiveMobs_upvr.TextColor3 = Color3_fromRGB_result1_upvr_2:Lerp(Color3_fromRGB_result1_upvr, _2 / 5)
			else
				if _1_3 == "HideLabels" then
					if var1596_upvw then
						var1596_upvw:Disconnect()
						var1596_upvw = nil
					end
					ActiveRocks_upvr.TextColor3 = Color3.fromRGB(20, 20, 20)
					ActiveMobs_upvr.TextColor3 = Color3.fromRGB(20, 20, 20)
					PrehistoricRaidTimer_upvr.TextColor3 = Color3.fromRGB(255, 237, 97)
					PrehistoricRelicHealth_upvr.TextColor3 = Color3.fromRGB(255, 255, 255)
					task.wait(3)
					ActiveRocks_upvr.Visible = false
					ActiveMobs_upvr.Visible = false
					PrehistoricRaidTimer_upvr.Visible = false
					PrehistoricRelicHealth_upvr.Visible = false
					return
				end
				if _1_3 == "UpdatePressure" then
					PrehistoricRaidTimer_upvr.Text = string.format("Volcano Pressure: %s%%", args_list[2])
					PrehistoricRaidTimer_upvr.TextColor3 = Color3.fromRGB(255, 237, 97):Lerp(Color3.fromRGB(200, 0, 0), args_list[2] / 100)
					PrehistoricRaidTimer_upvr.Visible = true
					return
				end
				if _1_3 == "ListenToRelicHealth" then
					local PrehistoricRelic = workspace.Map:WaitForChild("PrehistoricIsland"):WaitForChild("Core"):WaitForChild("PrehistoricRelic")
					local Health_upvr = PrehistoricRelic.Health
					local MaxHealth_upvr = PrehistoricRelic.MaxHealth
					local function healthChanged() -- Line 5266
						--[[ Upvalues[3]:
							[1]: Health_upvr (readonly)
							[2]: MaxHealth_upvr (readonly)
							[3]: PrehistoricRelicHealth_upvr (copied, readonly)
						]]
						PrehistoricRelicHealth_upvr.Text = string.format("Relic Health: %s%%", math.floor(Health_upvr.Value / MaxHealth_upvr.Value * 100))
						PrehistoricRelicHealth_upvr.TextColor3 = Color3.fromRGB(200, 0, 0):Lerp(Color3.fromRGB(255, 255, 255), Health_upvr.Value / MaxHealth_upvr.Value)
					end
					healthChanged()
					var1596_upvw = Health_upvr.Changed:Connect(healthChanged)
					PrehistoricRelicHealth_upvr.Visible = true
				end
			end
		end)
	end)
	secondsToClock_upvr(CommandBox_upvr)
	secondsToClock_upvr = task.defer
	function CommandBox_upvr() -- Line 5282
		--[[ Upvalues[3]:
			[1]: Parent_upvr_2 (readonly)
			[2]: IsMobile_upvr (readonly)
			[3]: GuiService_upvr (readonly)
		]]
		local TopHUDList = Parent_upvr_2.TopHUDList
		if IsMobile_upvr() then
			TopHUDList.Position = UDim2.new(0.5, 0, 0, 0)
		else
			local any_GetGuiInset_result1, _ = GuiService_upvr:GetGuiInset()
			TopHUDList.Position = UDim2.new(0.5, 0, 0, -any_GetGuiInset_result1.Y + 10)
		end
	end
	secondsToClock_upvr(CommandBox_upvr)
	secondsToClock_upvr = Remotes_upvr:WaitForChild("TradeFunction")
	local var1609_upvr = secondsToClock_upvr
	CommandBox_upvr = Parent_upvr_2:WaitForChild("Trade")
	local var1610_upvr = CommandBox_upvr
	local var1611_upvw = false
	var1610_upvr:WaitForChild("Info"):WaitForChild("Accept").Activated:Connect(function() -- Line 5300
		--[[ Upvalues[2]:
			[1]: var1609_upvr (readonly)
			[2]: var1610_upvr (readonly)
		]]
		var1609_upvr:InvokeServer("accept")
		var1610_upvr.Container['1'].FrameAdd.Visible = false
		var1610_upvr.Container['1'].Frame.Visible = true
	end)
	var1610_upvr:WaitForChild("Info"):WaitForChild("Cancel").Activated:Connect(function() -- Line 5305
		--[[ Upvalues[1]:
			[1]: var1609_upvr (readonly)
		]]
		var1609_upvr:InvokeServer("cancel")
	end)
	local var1614_upvw = false
	local var1615_upvw = false
	local function tradeClear_upvr(arg1) -- Line 5312, Named "tradeClear"
		--[[ Upvalues[2]:
			[1]: var1615_upvw (read and write)
			[2]: var1610_upvr (readonly)
		]]
		var1615_upvw = false
		for _, v_43 in pairs(var1610_upvr.Container[""..arg1].Frame:GetChildren()) do
			if v_43.Name ~= "Template" and v_43.Name ~= "EmptyTemplate" and v_43.Name ~= "UIGridLayout" then
				v_43:Destroy()
			end
		end
	end
	local function newItemButton_upvr(arg1, arg2, arg3) -- Line 5320, Named "newItemButton"
		--[[ Upvalues[8]:
			[1]: var1610_upvr (readonly)
			[2]: ImageUtil_2_upvr (readonly)
			[3]: GetDisplayName_upvr (readonly)
			[4]: Text_upvr (readonly)
			[5]: SkinUtil_upvr (readonly)
			[6]: var1615_upvw (read and write)
			[7]: var1614_upvw (read and write)
			[8]: var1609_upvr (readonly)
		]]
		local clone_5 = var1610_upvr.Container[""..arg1].Frame.Template:Clone()
		clone_5.LayoutOrder = 0
		ImageUtil_2_upvr.applySprite(arg2.Name, clone_5.IconLabel)
		local var1622
		local function INLINED_12() -- Internal function, doesn't exist in bytecode
			var1622 = '$'..Text_upvr.commaValue(arg2.Price)
			return var1622
		end
		if 0 >= arg2.Price or not INLINED_12() then
			var1622 = "Special"
		end
		local any_GetInfoForSkin_result1 = SkinUtil_upvr:GetInfoForSkin(arg2.Name)
		local IconExtra = clone_5.IconLabel:FindFirstChild("IconExtra")
		local var1625
		if any_GetInfoForSkin_result1 and IconExtra and any_GetInfoForSkin_result1.Type == "FruitSkin" then
			var1625 = true
			ImageUtil_2_upvr.applySprite(any_GetInfoForSkin_result1.Item, {
				Icon = IconExtra;
			})
			local var1627
		end
		if IconExtra then
			if var1625 ~= true then
				var1627 = false
			else
				var1627 = true
			end
			IconExtra.Visible = var1627
		end
		clone_5.Title.TextLabel.Text = GetDisplayName_upvr(arg2.Name)
		clone_5.Type.TextLabel.Text = var1622
		clone_5.Name = arg2.Name
		clone_5.Parent = var1610_upvr.Container[""..arg1].Frame
		clone_5.Visible = true
		if arg3 then
			clone_5.Activated:Connect(function() -- Line 5350
				--[[ Upvalues[4]:
					[1]: var1615_upvw (copied, read and write)
					[2]: var1614_upvw (copied, read and write)
					[3]: var1609_upvr (copied, readonly)
					[4]: arg2 (readonly)
				]]
				if var1615_upvw or var1614_upvw then
				else
					var1609_upvr:InvokeServer("removeItem", arg2.Name)
				end
			end)
		end
	end
	local function newAddButton_upvr(arg1) -- Line 5357, Named "newAddButton"
		--[[ Upvalues[9]:
			[1]: var1610_upvr (readonly)
			[2]: var1615_upvw (read and write)
			[3]: var1614_upvw (read and write)
			[4]: Remotes_upvr (readonly)
			[5]: ImageUtil_2_upvr (readonly)
			[6]: SkinUtil_upvr (readonly)
			[7]: GetDisplayName_upvr (readonly)
			[8]: Text_upvr (readonly)
			[9]: var1609_upvr (readonly)
		]]
		local var1629_upvr
		if arg1.Player1 == game.Players.LocalPlayer then
			var1629_upvr = 1
		else
			var1629_upvr = 2
		end
		if #arg1.Offer[var1629_upvr] <= 3 then
			local clone_7 = var1610_upvr.Container['1'].Frame.EmptyTemplate:Clone()
			clone_7.LayoutOrder = 10
			clone_7.Parent = var1610_upvr.Container['1'].Frame
			clone_7.Name = "AddButton"
			clone_7.Visible = true
			clone_7.Activated:Connect(function() -- Line 5367
				--[[ Upvalues[11]:
					[1]: var1615_upvw (copied, read and write)
					[2]: var1614_upvw (copied, read and write)
					[3]: var1610_upvr (copied, readonly)
					[4]: Remotes_upvr (copied, readonly)
					[5]: arg1 (readonly)
					[6]: var1629_upvr (readonly)
					[7]: ImageUtil_2_upvr (copied, readonly)
					[8]: SkinUtil_upvr (copied, readonly)
					[9]: GetDisplayName_upvr (copied, readonly)
					[10]: Text_upvr (copied, readonly)
					[11]: var1609_upvr (copied, readonly)
				]]
				-- KONSTANTERROR: [0] 1. Error Block 38 start (CF ANALYSIS FAILED)
				if var1615_upvw or var1614_upvw then return end
				var1610_upvr.Container['1'].Frame.Visible = false
				for _, v_44 in pairs(var1610_upvr.Container['1'].FrameAdd.Frame:GetChildren()) do
					if v_44.Name ~= "Template" and v_44.Name ~= "EmptyTemplate" and v_44.Name ~= "UIGridLayout" then
						v_44:Destroy()
					end
				end
				local clone_4 = var1610_upvr.Container['1'].FrameAdd.Frame.EmptyTemplate:Clone()
				clone_4.Name = "Back"
				clone_4.Parent = var1610_upvr.Container['1'].FrameAdd.Frame
				clone_4.Visible = true
				clone_4.Activated:Connect(function() -- Line 5382
					--[[ Upvalues[1]:
						[1]: var1610_upvr (copied, readonly)
					]]
					var1610_upvr.Container['1'].FrameAdd.Visible = false
					var1610_upvr.Container['1'].Frame.Visible = true
				end)
				local _, _, _ = pairs(arg1.Offer[var1629_upvr])
				-- KONSTANTERROR: [0] 1. Error Block 38 end (CF ANALYSIS FAILED)
				-- KONSTANTERROR: [104] 67. Error Block 12 start (CF ANALYSIS FAILED)
				local _, _, _ = pairs(Remotes_upvr.CommF_:InvokeServer("getTradeInventory"))
				-- KONSTANTERROR: [104] 67. Error Block 12 end (CF ANALYSIS FAILED)
			end)
		end
	end
	local function _() -- Line 5453, Named "tradeSetup"
		--[[ Upvalues[4]:
			[1]: var1615_upvw (read and write)
			[2]: var1610_upvr (readonly)
			[3]: var1614_upvw (read and write)
			[4]: tradeClear_upvr (readonly)
		]]
		var1615_upvw = false
		var1610_upvr.Countdown.Visible = false
		var1610_upvr.Lock1.Visible = false
		var1610_upvr.Lock2.Visible = false
		var1614_upvw = false
		tradeClear_upvr(1)
		tradeClear_upvr(2)
		var1610_upvr.Container['1'].FrameAdd.Visible = false
		var1610_upvr.Container['1'].Frame.Visible = true
	end
	game:GetService("UserInputService").JumpRequest:Connect(function() -- Line 5468
		--[[ Upvalues[2]:
			[1]: var1610_upvr (readonly)
			[2]: var1611_upvw (read and write)
		]]
		if var1610_upvr.Visible then
			_G.TestGamePrint("I WANT TO JUMP")
		end
		var1611_upvw = true
	end)
	Remotes_upvr:WaitForChild("TradeFunction").OnClientInvoke = function(arg1, ...) -- Line 5474
		--[[ Upvalues[1]:
			[1]: var1611_upvw (read and write)
		]]
		({})[1] = ...
		if var1611_upvw then
			print("i tried to jump")
			return false
		end
		return true
	end
	local var1648_upvw = false
	local var1649_upvw
	local var1650_upvw = 0
	Remotes_upvr:WaitForChild("TradeEvent").OnClientEvent:Connect(function(arg1, ...) -- Line 5482
		--[[ Upvalues[11]:
			[1]: var1611_upvw (read and write)
			[2]: var1610_upvr (readonly)
			[3]: var1615_upvw (read and write)
			[4]: var1614_upvw (read and write)
			[5]: tradeClear_upvr (readonly)
			[6]: var1648_upvw (read and write)
			[7]: var1649_upvw (read and write)
			[8]: var1650_upvw (read and write)
			[9]: newItemButton_upvr (readonly)
			[10]: Text_upvr (readonly)
			[11]: newAddButton_upvr (readonly)
		]]
		if arg1 == "start" then
			var1611_upvw = false
			var1610_upvr.Visible = true
			var1615_upvw = false
			var1610_upvr.Countdown.Visible = false
			var1610_upvr.Lock1.Visible = false
			var1610_upvr.Lock2.Visible = false
			var1614_upvw = false
			tradeClear_upvr(1)
			tradeClear_upvr(2)
			var1610_upvr.Container['1'].FrameAdd.Visible = false
			var1610_upvr.Container['1'].Frame.Visible = true
			var1648_upvw = math.random(99999999)
			if var1649_upvw then
				var1649_upvw:Destroy()
			end
			var1649_upvw = Instance.new("Sound")
			var1649_upvw.Looped = true
			var1649_upvw.SoundId = "rbxassetid://9165268097"
			var1649_upvw.Volume = 0.85
			var1649_upvw.Parent = var1610_upvr
			var1649_upvw:Play()
			_G.updateMusic2(true)
			if var1648_upvw == var1648_upvw then
				var1610_upvr.Border.BorderSizePixel = 2 + (var1649_upvw.PlaybackLoudness or 0) / 1000 * 88
				game:GetService("RunService").RenderStepped:Wait()
				-- KONSTANTWARNING: GOTO [100] #75
			end
		else
			if arg1 == "leave" then
				var1610_upvr.Visible = false
				var1648_upvw = false
				if var1649_upvw then
					var1649_upvw:Destroy()
					var1649_upvw = nil
				end
				_G.updateMusic2(false)
				tradeClear_upvr(1)
				tradeClear_upvr(2)
				return
			end
			if arg1 == "countdown_start" then
				var1615_upvw = ...
				var1610_upvr.Countdown.Visible = true
				var1610_upvr.Container['1'].FrameAdd.Visible = false
				var1610_upvr.Container['1'].Frame.Visible = true
				var1650_upvw += 1
				if var1650_upvw == var1650_upvw then
					var1610_upvr.Countdown.Text = 10
					wait(1)
					-- KONSTANTWARNING: GOTO [196] #147
				end
			else
				if arg1 == "countdown_cancel" then
					var1615_upvw = false
					var1610_upvr.Countdown.Visible = false
					return
				end
				if arg1 == "update_state" then
					local var1652_upvr = ...
					var1610_upvr.Container['1'].TextLabel.Text = game.Players.LocalPlayer.DisplayName
					local var1653_upvw = false
					local function _(arg1_26) -- Line 5542, Named "flip"
						--[[ Upvalues[1]:
							[1]: var1653_upvw (read and write)
						]]
						if var1653_upvw then
							if arg1_26 == 1 then
								return 2
							end
							return 1
						end
						return arg1_26
					end
					local var1654
					if var1652_upvr.Player1 == game.Players.LocalPlayer then
						var1654 = var1652_upvr.Player2
					else
						var1654 = var1652_upvr.Player1
						var1653_upvw = true
					end
					var1610_upvr.Container['2'].TextLabel.Text = var1654.DisplayName
					local function updateReady(arg1_27) -- Line 5564
						--[[ Upvalues[4]:
							[1]: var1610_upvr (copied, readonly)
							[2]: var1653_upvw (read and write)
							[3]: var1652_upvr (readonly)
							[4]: var1614_upvw (copied, read and write)
						]]
						-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
						local var1655
						if var1653_upvw then
							if arg1_27 == 1 then
								var1655 = 2
							else
								var1655 = 1
							end
						else
							var1655 = arg1_27
						end
						local var1656 = var1610_upvr.Info["Ready"..var1655]
						if var1652_upvr.Ready[arg1_27] then
							if var1653_upvw then
								if arg1_27 == 1 then
								else
								end
							else
							end
							if arg1_27 == 1 then
								var1614_upvw = true
							end
							var1656.Text = "Ready!"
							var1655 = 0.25
							var1656.TextColor3 = Color3.new(0.25, 1, var1655)
							var1655 = "Lock"
							if var1653_upvw then
								if arg1_27 == 1 then
								else
								end
							else
							end
							var1610_upvr[var1655..arg1_27].Visible = true
						else
							if var1653_upvw then
								if arg1_27 == 1 then
								else
								end
							else
							end
							if arg1_27 == 1 then
								var1614_upvw = false
							end
							var1656.Text = "Not ready."
							var1655 = 1
							var1656.TextColor3 = Color3.new(1, 1, var1655)
							var1655 = "Lock"
							if var1653_upvw then
								if arg1_27 == 1 then
								else
								end
							else
							end
							var1610_upvr[var1655..arg1_27].Visible = false
						end
					end
					updateReady(1)
					updateReady(2)
					local var1657_upvw = 0
					local var1658_upvw = false
					local tbl_13_upvr = {0, 0}
					local function updateItems(arg1_28) -- Line 5591
						--[[ Upvalues[9]:
							[1]: tradeClear_upvr (copied, readonly)
							[2]: var1653_upvw (read and write)
							[3]: var1652_upvr (readonly)
							[4]: newItemButton_upvr (copied, readonly)
							[5]: var1658_upvw (read and write)
							[6]: var1657_upvw (read and write)
							[7]: var1610_upvr (copied, readonly)
							[8]: Text_upvr (copied, readonly)
							[9]: tbl_13_upvr (readonly)
						]]
						-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
						local var1668
						if var1653_upvw then
							if arg1_28 == 1 then
								var1668 = 2
							else
								var1668 = 1
							end
						else
							var1668 = arg1_28
						end
						tradeClear_upvr(var1668)
						var1668 = pairs(var1652_upvr.Offer[arg1_28])
						local pairs_result1_3, pairs_result2_3, pairs_result3_2 = pairs(var1652_upvr.Offer[arg1_28])
						for _, v_45 in pairs_result1_3, pairs_result2_3, pairs_result3_2 do
							local var1672 = 0 + v_45.Price
							local var1673
							if var1653_upvw then
								if arg1_28 == 1 then
									var1673 = 2
								else
									var1673 = 1
								end
							else
								var1673 = arg1_28
							end
							if var1652_upvr["Player"..arg1_28] ~= game.Players.LocalPlayer then
							else
							end
							newItemButton_upvr(var1673, v_45, true)
							if v_45.Special then
								var1658_upvw = true
							end
							if v_45.Reducer then
								var1673 = v_45.Reducer
								var1657_upvw += var1673
							end
						end
						if var1653_upvw then
							if arg1_28 == 1 then
							else
							end
						else
						end
						pairs_result1_3 = var1610_upvr.Info["Value"..arg1_28]
						pairs_result1_3.Text = "Value: $"..Text_upvr.commaValue(var1672)
						pairs_result1_3 = tbl_13_upvr
						pairs_result1_3[arg1_28] = var1672
					end
					updateItems(1)
					updateItems(2)
					local var1674 = 1 - math.min(tbl_13_upvr[1], tbl_13_upvr[2]) / math.max(tbl_13_upvr[1], tbl_13_upvr[2], 0.01)
					var1610_upvr.BottomTitle.Text = "Value difference: "..math.ceil(var1674 * 100)..'%'
					if var1657_upvw + 0.4 < var1674 then
						var1610_upvr.BottomTitle.TextColor3 = Color3.new(1, 0.1, 0.1)
					else
						var1610_upvr.BottomTitle.TextColor3 = Color3.new(1, 1, 1)
					end
					var1610_upvr.BottomTitle.Text = var1610_upvr.BottomTitle.Text.." (Max. "..math.min(100, math.ceil(var1657_upvw * 100 + 40)).."%)"
					if var1657_upvw + 0.4 < var1674 then
						var1610_upvr.BottomTitle.Text = var1610_upvr.BottomTitle.Text.." - Value must be around the same."
					elseif var1658_upvw then
						var1610_upvr.BottomTitle.Text = var1610_upvr.BottomTitle.Text.." - Special items are auto-redeemed."
					end
					newAddButton_upvr(var1652_upvr)
				end
			end
		end
	end)
	var1609_upvr = Parent_upvr_2:WaitForChild("BottomHUDList"):WaitForChild("Radar")
	var1610_upvr = nil
	local var1675_upvw = var1610_upvr
	local var1676_upvw
	local var1677_upvw
	Remotes_upvr:WaitForChild("RadarNotify").OnClientEvent:Connect(function(arg1, arg2) -- Line 5640
		--[[ Upvalues[4]:
			[1]: var1675_upvw (read and write)
			[2]: var1676_upvw (read and write)
			[3]: var1677_upvw (read and write)
			[4]: module_3_upvr (readonly)
		]]
		var1675_upvw = _G.Encode(arg1)
		var1676_upvw = arg2
		var1677_upvw = tick()
		module_3_upvr.new("<Color=Green>A BLOX FRUIT HAS SPAWNED IN THE GAME!<Color=/>"):Display()
		module_3_upvr.new("Radar activated."):Display()
	end)
	task.spawn(function() -- Line 5650
		require(script.SeaExploration)
	end)
	Parent_upvr_2.BottomHUDList.Position = UDim2.new(0.5, 0, 1, PlayerGui_upvr:WaitForChild("Backpack"):WaitForChild("Hotbar").Position.Y.Offset - 5)
	if GuiService_upvr:IsTenFootInterface() then
		script.Parent.BottomHUDList.Position = UDim2.new(0.5, 0, 1, -125)
		script.Parent.BottomHUDList.UniversalContextButtons.Size = UDim2.fromScale(1, 1)
	end
	if IsMobile_upvr() then
		Parent_upvr_2.Level.Position = UDim2.new(0, 6, 0.71, 0)
		Parent_upvr_2.Fragments.Position = UDim2.new(0, 6, 0.8700000000000001, 0)
		Parent_upvr_2.HP.Position = UDim2.new(0.305, -1, 0.93, -70)
		Parent_upvr_2.Energy.Position = UDim2.new(0.505, 1, 0.93, -70)
		Parent_upvr_2.RaceEnergy.Position = UDim2.new(0, 10, 0.815, 0)
		Parent_upvr_2.DodgeNotifier.Position = UDim2.new(0.5, 0, 0.95, -85)
		game.ReplicatedStorage.Events.MobileUIModeUpdated.Event:Connect(function(arg1) -- Line 5671
			--[[ Upvalues[4]:
				[1]: LocalPlayer_upvr (readonly)
				[2]: Parent_upvr_2 (readonly)
				[3]: MobileUIController_upvr (readonly)
				[4]: var874_upvw (read and write)
			]]
			local Character = LocalPlayer_upvr.Character
			if not Character then
			else
				require(script.Parent.Shared).reflectHUDButtonVisibility()
				local class_Tool = Character:FindFirstChildOfClass("Tool")
				if class_Tool then
					if Parent_upvr_2.Skills.Visible and arg1 then
						Parent_upvr_2.Skills.Visible = false
					else
						MobileUIController_upvr:UnbindSkillContextButtons()
					end
					var874_upvw(class_Tool)
				end
			end
		end)
	end
	task.defer(function() -- Line 5690
		--[[ Upvalues[2]:
			[1]: LocalPlayer_upvr (readonly)
			[2]: module_3_upvr (readonly)
		]]
		repeat
			task.wait()
		until not LocalPlayer_upvr.Character or not LocalPlayer_upvr.Character:IsDescendantOf(workspace.Characters) or LocalPlayer_upvr.Team ~= nil
		module_3_upvr.new("Joined <"..LocalPlayer_upvr.Team.Name.."> team."):Display()
		for _, v_46 in _G.postSpawn do
			v_46()
		end
	end)
	while not _G.NPCReady do
		task.wait()
	end
	task.defer(function() -- Line 5704
		--[[ Upvalues[15]:
			[1]: Flags_upvr (readonly)
			[2]: module_upvr_2 (readonly)
			[3]: var199_upvw (read and write)
			[4]: var76_upvw (read and write)
			[5]: var201_upvw (read and write)
			[6]: var1095_upvw (read and write)
			[7]: UI_upvw (read and write)
			[8]: var1675_upvw (read and write)
			[9]: var1676_upvw (read and write)
			[10]: var1677_upvw (read and write)
			[11]: var1609_upvr (readonly)
			[12]: module_3_upvr (readonly)
			[13]: UserInputService_upvr (readonly)
			[14]: Parent_upvr_2 (readonly)
			[15]: Remotes_upvr (readonly)
		]]
		task.wait(3)
		while true do
			if not Flags_upvr.COMPASS_REWORK_ENABLED then
				if module_upvr_2.Data.Ready and var199_upvw and 0 < var199_upvw.Health then
					local HumanoidRootPart_2 = var76_upvw:FindFirstChild("HumanoidRootPart")
					if HumanoidRootPart_2 then
						local any_GetNearestNPC_result1 = module_upvr_2:GetNearestNPC(HumanoidRootPart_2.Position, var201_upvw.Level.Value)
						local _1 = any_GetNearestNPC_result1[1]
						local _3_2 = any_GetNearestNPC_result1[3]
						local _5_2 = any_GetNearestNPC_result1[5]
						if not var1095_upvw then
							if _1 then
								local floored_2 = math.floor((module_upvr_2:GetDistance(_1) - HumanoidRootPart_2.Position).magnitude / 10)
								module_upvr_2.Data.LastMeters = floored_2
								module_upvr_2:PointCompass(_1)
								local TopFrame_2 = UI_upvw.TopFrame
								if 9999 < floored_2 then
									TopFrame_2 = "Over 9999m away.."
								else
									local function INLINED_14() -- Internal function, doesn't exist in bytecode
										TopFrame_2 = floored_2.."m away"
										return TopFrame_2
									end
									if floored_2 > 9999 or 8 >= floored_2 or not INLINED_14() then
										TopFrame_2 = "Nearby!"
									end
								end
								TopFrame_2.Subtitle2.Text = TopFrame_2
								if _5_2 then
									if _5_2 == 1 then
										UI_upvw.TopFrame.Subtitle1.Text = "Capture the <Frozen Heart> using a harpoon!"
									elseif _5_2 == 2 then
										UI_upvw.TopFrame.Subtitle1.Text = "Deliver the <Frozen Heart> to Tiki Outpost."
									end
									UI_upvw:WaitForChild("LeftFrame").IconFrame.UIStroke.UIGradient.Color = ColorSequence.new(Color3.fromRGB(255, 197, 20))
								elseif _3_2 then
									if typeof(_3_2) == "string" then
										UI_upvw.TopFrame.Subtitle1.Text = _3_2
									else
										UI_upvw.TopFrame.Subtitle1.Text = "Find the NPC at ".._3_2.Name..'.'
									end
								else
									UI_upvw.TopFrame.Subtitle1.Text = "Find the "..any_GetNearestNPC_result1[2]..'.'
									UI_upvw:WaitForChild("LeftFrame").IconFrame.UIStroke.UIGradient.Color = ColorSequence.new(Color3.fromRGB(255, 197, 20))
								end
							else
								module_upvr_2:PointCompass()
								UI_upvw.TopFrame.Subtitle1.Text = "(None)"
								UI_upvw.TopFrame.Subtitle2.Text = '-'
								UI_upvw:WaitForChild("LeftFrame").IconFrame.UIStroke.UIGradient.Color = ColorSequence.new(Color3.fromRGB(255, 197, 20))
							end
						else
							module_upvr_2:PointCompass(_1)
						end
					end
				end
			end
			if var1675_upvw then
				if not var1675_upvw:IsDescendantOf(workspace) then
					var1675_upvw = nil
					var1676_upvw = nil
					var1677_upvw = nil
					var1609_upvr.Visible = false
					module_3_upvr.new("Blox Fruit despawned."):Display()
				elseif var1676_upvw and var199_upvw and 0 < var199_upvw.Health and var76_upvw:FindFirstChild("HumanoidRootPart") then
					-- KONSTANTERROR: Expression was reused, decompilation is incorrect
					local magnitude = (var1676_upvw - var76_upvw:FindFirstChild("HumanoidRootPart").Position).magnitude
					local var1706 = tick() - var1677_upvw
					local var1707 = (magnitude / 40) * ((0.8 + math.random() * 0.2) * math.max(1 - var1706 * 0.2, 0))
					if 0 < var1707 then
						var1706 = " (Calibrating...)"
					else
						var1706 = ""
					end
					var1609_upvr.Text = "FRUIT DETECTED: "..math.floor(magnitude / 10 + var1707).."m away."..var1706
					var1609_upvr.Visible = true
				end
			end
			if UserInputService_upvr.GamepadEnabled or not UserInputService_upvr.MouseEnabled then
				pcall(function() -- Line 5810
					--[[ Upvalues[2]:
						[1]: Parent_upvr_2 (copied, readonly)
						[2]: Remotes_upvr (copied, readonly)
					]]
					Parent_upvr_2.Parent.Smokescreen:Destroy()
					Remotes_upvr.CommF_:InvokeServer("NoSmoke2")
				end)
			end
			task.wait(0.2)
		end
	end)
end
-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-12 20:28:00
-- Luau version 6, Types version 3
-- Time taken: 0.000786 seconds

local FruitShopAndDealer = script.Parent:WaitForChild("FruitShopAndDealer")
local function _(arg1) -- Line 3, Named "applyFix"
	arg1.ChildRemoved:Connect(function() -- Line 4
		game:GetService("GuiService").TouchControlsEnabled = true
	end)
end
FruitShopAndDealer:WaitForChild("Root").ChildRemoved:Connect(function() -- Line 4
	game:GetService("GuiService").TouchControlsEnabled = true
end)
FruitShopAndDealer.ChildAdded:Connect(function(arg1) -- Line 10
	if arg1.Name == "Root" then
		arg1.ChildRemoved:Connect(function() -- Line 4
			game:GetService("GuiService").TouchControlsEnabled = true
		end)
	end
end)
