Heres everything u would need to spawn a fruit in blox fruits all the code and everything



-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:59:52
-- Luau version 6, Types version 3
-- Time taken: 0.046158 seconds

local module_4 = {
	["Flame-Flame"] = {{{'Z', 1, "Fire Bullets"}, {'X', 20, "Burning Blast"}, {'C', 50, "Fire Column"}, {'V', 100, "Flame Destroyer"}, {'F', 10, "Fire Flight"}}, {{'Z', 1, "Blue Fire Bullets"}, {'X', 20, "Prominence Burst"}, {'C', 50, "Flaming Vortex"}, {'V', 100, "Hell's Core"}, {'F', 10, "Rocket Flight"}}};
	["Dark-Dark"] = {{{'Z', 1, "Dark Rocks"}, {'X', 20, "Black Spiral"}, {'C', 50, "Black Hole"}, {'V', 100, "Dark Bomb"}}, {{'Z', 1, "Dimensional Slash"}, {'X', 20, "Abyssal Darkness"}, {'C', 50, "Endless Hole"}, {'V', 100, "World of Darkness"}, {'F', 10, "Ghastly Step"}}};
	["Quake-Quake"] = {{{'Z', 1, "Quake Punch"}, {'X', 20, "Quake Wave"}, {'C', 50, "Quake Erupt"}, {'V', 100, "Dual Tsunami"}}, {{'Z', 1, "Fatal Demolisher"}, {'X', 20, "Air Crusher"}, {'C', 50, "Spatial Shockwave"}, {'V', 100, "Seaquake"}}};
	["Light-Light"] = {{{'Z', 1, "Light Ray"}, {'X', 50, "Barrage of Light"}, {'C', 20, "Reflection Kick"}, {'V', 100, "Sky Beam Barrage"}, {'F', 10, "Light Flight"}}, {{'Z', 1, "Divine Arrow"}, {'X', 50, "Hand of the Emperor"}, {'C', 20, "Lightspeed Destroyer"}, {'V', 100, "Wrath of God"}, {'F', 10, "Shining Flight"}}};
	["Buddha-Buddha"] = {{{'Z', 1, "Transform"}, {'X', 20, "Impact"}, {'C', 50, "Buddha Leap"}, {'V', 100, "Buddha Explosion"}}, {{'Z', 1, "Shift"}, {'X', 20, "Heavenly Impact"}, {'C', 50, "Light of Annihilation"}, {'V', 100, "Twilight of the Gods"}, {'F', 100, "Retribution Dash"}}};
	["Rubber-Rubber"] = {{{'Z', 1, "Cannon"}, {'X', 25, "Smash"}, {'C', 75, "Rush"}, {'V', 150, "Transformation"}, {'F', 75, "Slingshot"}}};
	["Spring-Spring"] = {{{'Z', 1, "Knock"}, {'X', 25, "Spring Snipe"}, {'C', 60, "Spring Cannon"}, {'V', 60, "Spring Emperor"}, {'F', 80, "Spring Leap"}}};
	["Kilo-Kilo"] = {{{'Z', 1, "10,000 Kg"}, {'X', 25, "20,000 Kg"}, {'C', 60, "50,000 Kg"}, {'F', 80, "Lighten"}}};
	["Rocket-Rocket"] = {{{'Z', 1, "Missile Fist"}, {'X', 25, "Air Strike"}, {'C', 60, "Rocket Crash"}, {'F', 80, "Blast Off"}}};
	["Diamond-Diamond"] = {{{'Z', 1, "Encrust"}, {'X', 25, "Shard Storm"}, {'C', 60, "Shimmering Disruption"}, {'V', 80, "Prismatic Reflection"}}};
	["Love-Love"] = {{{'Z', 1, "Heart Shot"}, {'X', 25, "Cupid's Zone"}, {'C', 60, "Irresistible Attraction"}, {'V', 80, "Besto Friendo"}, {'F', 80, "Flamingo Ride"}}};
	["Spin-Spin"] = {{{'Z', 1, "Razor Wind"}, {'X', 25, "Tornado Assault"}, {'C', 60, "Air Slasher"}, {'F', 80, "Helicopter Flight"}}};
	["Ghost-Ghost"] = {{{'Z', 1, "Shivering Possession"}, {'X', 25, "Spectral Release"}, {'C', 60, "Cries of the Underworld"}, {'V', 80, "Ghost Busters"}, {'F', 80, "Wandering Soul"}}};
	["Shadow-Shadow"] = {{{'Z', 1, "Somber Rebellion"}, {'X', 20, "Shade Nest"}, {'C', 20, "Nightmare Leech"}, {'V', 20, "Corvus Torment"}, {'F', 20, "Umbrage"}}};
	["Door-Door"] = {{{'Z', 1, "Spinning Door"}, {'X', 25, "Dimensional Door"}, {'C', 60, "Door Gateway"}, {'F', 80, "Hallway"}}};
	["Portal-Portal"] = {{{'Z', 1, "Portal Dash"}, {'X', 20, "Parallel Escape"}, {'C', 20, "World Warp"}, {'V', 20, "Dimensional Rift"}, {'F', 20, "Quantum Leap"}}};
	["Ice-Ice"] = {{{'Z', 1, "Ice Spears"}, {'X', 20, "Ice Surge"}, {'C', 50, "Ice Bird"}, {'V', 100, "Glacial Epoch"}}, {{'Z', 1, "Cold Storm"}, {'X', 20, "Glacial Surge"}, {'C', 50, "Frozen Dragon"}, {'V', 100, "Absolute Zero"}, {'F', 100, "Ice Skating"}}};
	["Control-Control"] = {{{'Z', 1, "Control Area"}, {'X', 20, "Levitate"}, {'C', 50, "Echo Knife"}, {'V', 100, "Gamma Rush"}, {'F', 10, "Teleport"}}};
	["Dragon (Classic)-Dragon (Classic)"] = {{{'Z', 1, "Heatwave Beam"}, {'X', 20, "Dragonic Claw"}, {'C', 50, "Fire Shower"}, {'V', 100, "Transformation"}, {'F', 10, "Dragon Flight"}}};
	["Dragon-Dragon"] = {{{'Z', 1, "Heatwave Cannon"}, {'X', 20, "Infernal Pincer"}, {'C', 50, "Scorching Downfall"}, {'V', 100, "Imperial Evolution"}, {'F', 10, "Draconic Soar"}}};
	["Gas-Gas"] = {{{'Z', 1, "Suffocating Fumes"}, {'X', 20, "Bursting Vapor"}, {'C', 50, "Smog Demons"}, {'V', 100, "Vapor Condensation"}, {'F', 10, "Traveling Gas"}}};
	["Magma-Magma"] = {{{'Z', 1, "Magma Clap"}, {'X', 20, "Magma Eruption"}, {'C', 50, "Magma Fist"}, {'V', 100, "Magma Meteors"}, {'F', 10, "Magma Floor"}}, {{'Z', 1, "Magma Shower"}, {'X', 20, "Volcanic Assault"}, {'C', 50, "Great Magma Hound"}, {'V', 100, "Volcanic Storm"}, {'F', 10, "Beast Ride"}}};
	["Venom-Venom"] = {{{'Z', 1, "Poison Daggers"}, {'X', 20, "Noxious Shot"}, {'C', 20, "Toxic Fog"}, {'V', 20, "Transformation"}, {'F', 20, "Serpent's Wrath"}}};
	["Leopard-Leopard"] = {{{'Z', 1, "Finger Revolver"}, {'X', 20, "Spiraling Kick"}, {'C', 20, "Afterimage Assault"}, {'V', 20, "Transformation"}, {'F', 20, "Body Flicker"}}};
	["Yeti-Yeti"] = {{{'Z', 1, "Arctic Clap"}, {'X', 20, "Frostbite Boulder"}, {'C', 20, "Glacial Execution"}, {'V', 20, "Transformation"}, {'F', 20, "Tundra Rush"}}};
	["Sand-Sand"] = {{{'Z', 1, "Desert Sword"}, {'X', 20, "Desert Funeral"}, {'C', 50, "Sand Tornado"}, {'V', 100, "Heavy Sand"}, {'F', 10, "Sand Flight"}}, {{'Z', 1, "Desert Blade"}, {'X', 20, "Sand Coffin"}, {'C', 50, "Sandstorm"}, {'V', 100, "Deep Sand"}, {'F', 100, "Tornado Flight"}}};
	["Soul-Soul"] = {{{'Z', 1, "Soul Snatcher"}, {'X', 20, "Wrath of Ra"}, {'C', 20, "Outraged Raijin"}, {'V', 20, "End of Times"}, {'F', 20, "Sky Ruler"}}};
	["Spirit-Spirit"] = {{{'Z', 1, "Frostfire Grasp"}, {'X', 20, "Wrath of Ra"}, {'C', 20, "Wrath of Shu"}, {'V', 20, "End of Times"}, {'F', 20, "Sky Ruler"}}};
	["Hollow-Hollow"] = {{{'Z', 1, "Kamikaze Ghosts"}, {'X', 20, "Gloomy Spirit"}, {'C', 20, "Starved Phantom"}, {'V', 20, "Revenant Lift"}, {'F', 20, "Spirit Projection"}}};
	["Blizzard-Blizzard"] = {{{'Z', 1, "Snowflake Shuriken"}, {'X', 20, "White Out"}, {'C', 20, "Howling Wind"}, {'V', 20, "Blizzard Domain"}, {'F', 20, "Tornado Flight"}}};
	["Bomb-Bomb"] = {{{'Z', 1, "Targeted Bomb"}, {'X', 20, "Bomb Grab"}, {'C', 20, "Land Mines"}, {'V', 20, "Self Destruct"}, {'F', 20, "Explosive Jump"}}};
	["Spike-Spike"] = {{{'Z', 1, "Spike Summon"}, {'X', 20, "Whirlwind"}, {'C', 20, "Spiky Ball"}, {'V', 20, "Spike Barrage"}}};
	["Chop-Chop"] = {{{'Z', 1, "Tackle"}, {'X', 20, "Dance"}, {'C', 20, "Party"}, {'F', 20, "Helicopter"}}};
	["Blade-Blade"] = {{{'Z', 1, "Razor Cyclone"}, {'X', 20, "Blade Dance"}, {'C', 20, "Saw Shredder"}, {'F', 20, "Turbine Flight"}}};
	["Smoke-Smoke"] = {{{'Z', 1, "Smoke Slam"}, {'X', 20, "Smoke Blast"}, {'C', 20, "Smoke Liberation"}, {'F', 20, "Smoke Bomber"}}};
	["Phoenix-Phoenix"] = {{{'Z', 1, "Cannon"}, {'X', 20, "Regeneration Flames"}, {'C', 20, "Fast Kick"}, {'V', 20, "Full Transformation"}, {'F', 20, "Hybrid Flight"}}, {{'Z', 1, "Cremation Cannon"}, {'X', 20, "Blue Flames"}, {'C', 20, "Flame Exodus"}, {'V', 20, "Blazing Plumage"}, {'F', 20, "Swift Flight"}}};
	["Falcon-Falcon"] = {{{'Z', 1, "Plumage"}, {'X', 20, "Wind Burst"}, {'C', 20, "Bone Crusher"}, {'V', 20, "Soaring Talon"}, {'F', 20, "Flight"}}};
	["Sound-Sound"] = {{{'Z', 1, "Rhapsody Notes"}, {'X', 20, "Fortissimo"}, {'C', 20, "Symphonic Radiance"}, {'V', 20, "Glorious Harmony"}, {'F', 20, "Tempo: Prestissimo"}}};
	["Mammoth-Mammoth"] = {{{'Z', 1, "Ancient Cutter"}, {'X', 20, "True Prehistoric Punt"}, {'C', 20, "Colossal Crusher"}, {'V', 20, "Transformation"}, {'F', 20, "Stampede"}}};
	["Rumble-Rumble"] = {{{'Z', 1, "Rumble Dragon"}, {'X', 20, "Sky Thunder"}, {'C', 20, "Sky Beam"}, {'V', 20, "Thunder Bomb"}, {'F', 20, "Lightning Dash"}}, {{'Z', 1, "Lightning Beast"}, {'X', 20, "Thunderstorm"}, {'C', 20, "Sky Judgement"}, {'V', 20, "Thunderball Destruction"}, {'F', 20, "Electric Flash"}}};
	["Spider-Spider"] = {{{'Z', 1, "Spider Wraith"}, {'X', 20, "Multi-string Attack"}, {'C', 20, "Over-heated Sniper"}, {'V', 20, "Ultimate Thread"}, {'F', 20, "Spider Path"}}, {{'Z', 1, "Thermal Laceration"}, {'X', 20, "Silk Prison"}, {'C', 20, "Eternal White"}, {'V', 20, "Heavenly Punishment"}, {'F', 20, "Spider Highway"}}};
	["Gravity-Gravity"] = {{{'Z', 1, "Gravity Push"}, {'X', 20, "Gravity Obeisance"}, {'C', 20, "Meteor Pitch"}, {'V', 20, "Meteors Rain"}, {'F', 20, "Boulder Flight"}}};
	["Pain-Pain"] = {{{'Z', 1, "Heavy Pain"}, {'X', 20, "Pain Barrage"}, {'C', 20, "Pain Nuke"}, {'V', 20, "Torture"}, {'F', 20, "Self Repel"}}};
	["Barrier-Barrier"] = {{{'Z', 1, "Barrier Wall"}, {'X', 20, "Surprise Attack"}, {'C', 20, "Barrier Prison"}, {'V', 20, "Barrier Towers"}, {'F', 20, "Stairs"}}};
	["Kitsune-Kitsune"] = {{{'Z', 1, "Accursed Enchantment"}, {'X', 20, "Tails of Burning Agony"}, {'C', 20, "Fox Fire Disruption"}, {'V', 20, "Transformation"}, {'F', 20, "Wild Assault"}}};
	["T-Rex-T-Rex"] = {{{'Z', 1, "Tail Swipe"}, {'X', 20, "Predatory Screech"}, {'C', 20, "Hunter's Rage"}, {'V', 20, "Reptilian Scales"}, {'F', 20, "Gigantic Leap"}}};
	["Dough-Dough"] = {{{'Z', 1, "Fried Dough"}, {'X', 20, "Sticky Dough"}, {'C', 20, "Carved Dough"}, {'V', 20, "Restless Dough Barrage"}, {'F', 20, "Roller Donut"}}, {{'Z', 1, "Missile Jab"}, {'X', 20, "Pastry River"}, {'C', 20, "Piercing Clothesline"}, {'V', 20, "Dough Fist Fusillade"}, {'F', 20, "Scorching Donut"}}};
	["Bastar-Bastar"] = {{{'Z', 1, "Room"}}};
	["Meme-Meme"] = {{{'Z', 1, "Traffic Cone"}}};
	["Rogue-Rogue"] = {{{'Z', 1, "Mori"}, {'X', 1, "Snap Mori"}}};
	Combat = {{{'Z', 1, "Quick Tackle"}, {'X', 20, "Ground Smash"}}};
	["Black Leg"] = {{{'Z', 1, "Flying Kick"}, {'X', 20, "Breakdance"}, {'C', 50, "Barrage"}, {'V', 100, "Overheat"}}};
	["Death Step"] = {{{'Z', 1, "Rocket Kick"}, {'X', 20, "Wind Bullet"}, {'C', 50, "Vermillion Drill"}, {'V', 100, "Maximum Overheat"}}};
	Electro = {{{'Z', 1, "Stomp"}, {'X', 20, "Electrical Tackle"}, {'C', 50, "Electrical Floor"}}};
	["Electric Claw"] = {{{'Z', 1, "Electric Rampage"}, {'X', 20, "Lightning Thrust"}, {'C', 50, "Thunderclap and Flash"}}};
	["Fishman Karate"] = {{{'Z', 1, "Steam-Charged Fist"}, {'X', 20, "Deadly Shower"}, {'C', 50, "Heavy Water Punch"}}};
	["Sharkman Karate"] = {{{'Z', 1, "Twelve Water Palms"}, {'X', 20, "Pressure Vortex"}, {'C', 50, "Great Sea Spear"}}};
	["Dragon Claw"] = {{{'Z', 1, "Dragon Rush"}, {'X', 20, "Dragon Flames"}, {'C', 50, "Dragon Explosion"}}};
	Superhuman = {{{'Z', 1, "Beast Owl Pounce"}, {'X', 20, "Thunder Clap"}, {'C', 50, "Conqueror Gun"}}};
	Godhuman = {{{'Z', 1, "Soaring Beast"}, {'X', 20, "Heaven and Earth"}, {'C', 50, "Sixth Realm Gun"}}};
	["Dragon Talon"] = {{{'Z', 1, "Talon Lighter"}, {'X', 20, "Ember Annihilation"}, {'C', 50, "Infernal Vortex"}}};
	["Sanguine Art"] = {{{'Z', 1, "Bloodbane Drain"}, {'X', 20, "Scarlet Tear"}, {'C', 50, "Devourer of Worlds"}}};
	["Divine Art"] = {{{'Z', 1, "Fool's Demise"}, {'X', 20, "Judgement of the Pitiful"}, {'C', 50, "Timeless Misery"}}};
	["Twin Hooks"] = {{{'Z', 1, "Sky Cyclone"}, {'X', 20, "Prehistoric Punt"}}};
	["Spikey Trident"] = {{{'Z', 1, "Dough Hurricane"}, {'X', 20, "Flying Trident Pull"}}};
	["Buddy Sword"] = {{{'Z', 1, "Heat Slash"}, {'X', 20, "Lightning Wave"}}};
	["Dual Katana"] = {{{'Z', 1, "Whirlwind"}, {'X', 20, "Tornado"}}};
	Katana = {{{'Z', 1, "Quiet Rush"}, {'X', 20, "Air Slash"}}};
	Cutlass = {{{'Z', 1, "Quiet Rush"}, {'X', 20, "Air Slash"}}};
	["Dark Blade"] = {{{'Z', 1, "One Thousand Slices"}, {'X', 20, "Dark Air Slash"}}};
	["Triple Dark Blade"] = {{{'Z', 1, "One Thousand Slices"}, {'X', 20, "Dark Air Slash"}}};
	["Dark Dagger"] = {{{'Z', 1, "Proficient Impale"}, {'X', 20, "Shaming Slash"}}};
	["Shark Anchor"] = {{{'Z', 1, "Typhoon Toss"}, {'X', 20, "Armor Breaker"}}};
	["Fox Lamp"] = {{{'Z', 1, "Scorching Azure"}, {'X', 20, "Infernal Firestorm"}}};
	Bisento = {{{'Z', 1, "Wind Breaker"}, {'X', 20, "Quake Sphere"}}};
	Flail = {{{'Z', 1, "Smoke Leopard"}, {'X', 20, "Smoke Apparition"}}};
	Koko = {{{'Z', 1, "Electric Stab"}, {'X', 20, "Injection Shot"}}};
	["Triple Katana"] = {{{'Z', 1, "Air Slashes Barrage"}, {'X', 20, "Violent Rush"}}};
	["True Triple Katana"] = {{{'Z', 1, "Wolf Fang Rush"}, {'X', 20, "Dragon Hurricane"}}};
	["Hallow Scythe"] = {{{'Z', 1, "Death Cyclone"}, {'X', 20, "Soul Execution"}}};
	Trident = {{{'Z', 1, "Trident Throw"}, {'X', 20, "Water Pulse"}}};
	["Dragon Trident"] = {{{'Z', 1, "Sea Dragon Fury"}, {'X', 20, "Water Dragon Shower"}}};
	Rengoku = {{{'Z', 1, "Demon Slayer"}, {'X', 20, "Burning Slash"}}};
	Saber = {{{'Z', 1, "Deadly Rush"}, {'X', 20, "Triple Slash"}}};
	["Shark Saw"] = {{{'Z', 1, "Consecutive Slashes"}, {'X', 20, "Execution"}}};
	["Iron Mace"] = {{{'Z', 1, "Mace Smash"}, {'X', 20, "Killer Combo"}}};
	["Wardens Sword"] = {{{'Z', 1, "Multi-Target Slash"}, {'X', 20, "Tornado Slash"}}};
	Pipe = {{{'Z', 1, "Pipe Ignition"}, {'X', 20, "Dragon Blast"}}};
	["Dual-Headed Blade"] = {{{'Z', 1, "Assassinate"}, {'X', 20, "Raging Wind"}}};
	["Soul Cane"] = {{{'Z', 1, "Soul Beam"}, {'X', 20, "Soul Slashes"}}};
	["Pole (1st Form)"] = {{{'Z', 1, "Explosive Cloud"}, {'X', 20, "Lightning Rain"}}};
	["Pole (2nd Form)"] = {{{'Z', 1, "Hand of God"}, {'X', 20, "Electric Prison"}}};
	["Gravity Blade"] = {{{'Z', 1, "Dimensional Grasp"}, {'X', 20, "Lunar Blitz"}}};
	Shizu = {{{'Z', 1, "True Quiet Rush"}, {'X', 20, "Focus Shot"}}};
	Canvander = {{{'Z', 1, "Piercing Dash"}, {'X', 20, "Scattering Gust"}}};
	Yama = {{{'Z', 1, "Hellish Slash"}, {'X', 20, "Infernal Hurricane"}}};
	["Cursed Dual Katana"] = {{{'Z', 1, "Revolving Ravager"}, {'X', 20, "Slayer of Goliath"}}};
	Tushita = {{{'Z', 1, "Heavenly Lunges"}, {'X', 20, "Celestial Ravager"}}};
	Saishi = {{{'Z', 1, "Swords Dance"}, {'X', 20, "True Air Slash"}}};
	Oroshi = {{{'Z', 1, "Continuous Slashing"}, {'X', 20, "Dragon Gust"}}};
	Longsword = {{{'Z', 1, "Annihilate"}, {'X', 20, "Glorious Smash"}}};
	["Midnight Blade"] = {{{'Z', 1, "Portal Opening"}, {'X', 20, "Crescent Dash"}}};
	Dragonheart = {{{'Z', 1, "Draconic Blitz"}, {'X', 20, "Infernal Catastrophe"}}};
	Slingshot = {{{'Z', 1, "Ink Bomb"}, {'X', 20, "Proximity Bomb"}}};
	["Refined Slingshot"] = {{{'Z', 1, "Ink Swarm"}, {'X', 20, "Cluster Bomb"}}};
	Flintlock = {{{'Z', 1, "Concentrated Shot"}, {'X', 20, "Marksman Fury"}}};
	["Dual Flintlock"] = {{{'Z', 1, "Splitting Beam"}, {'X', 20, "Bullet Storm"}}};
	Musket = {{{'Z', 1, "Draconic Bullet"}, {'X', 20, "Torching Shot"}}};
	["Magma Blaster"] = {{{'Z', 1, "Scorching Burst"}, {'X', 20, "Magmatic Pressure"}}};
	Cannon = {{{'Z', 1, "Chain Detonation"}, {'X', 20, "Incendiary Ammo"}}};
	Bazooka = {{{'Z', 1, "Heat Wave"}, {'X', 20, "Flaring Missiles"}}};
	Kabucha = {{{'Z', 1, "Blazing Phoenix"}, {'X', 20, "Dragon Tempest"}}};
	["Venom Bow"] = {{{'Z', 1, "Venomous Spit"}, {'X', 20, "Serpent Bite"}}};
	["Skull Guitar"] = {{{'Z', 1, "Soul Shaker"}, {'X', 20, "El Diablo"}}};
	["Acidum Rifle"] = {{{'Z', 1, "Spiky Bomb"}, {'X', 20, "Acidic Smoke"}}};
	["Bizarre Revolver"] = {{{'Z', 1, "Space Bending Blast"}, {'X', 20, "Dimensional Surge"}}};
	Dragonstorm = {{{'Z', 1, "Draconic Cascade"}, {'X', 20, "Infernal Comet"}}};
	Gun = {};
}
function decodeLegacyEntry(arg1) -- Line 715
	-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
	-- KONSTANTERROR: [0] 1. Error Block 20 start (CF ANALYSIS FAILED)
	local _1_3 = arg1[1]
	local var1386
	if typeof(_1_3) ~= "string" then
		var1386 = false
	else
		var1386 = true
	end
	assert(var1386, `bad trigger: "{_1_3}"`)
	local _2_4 = arg1[2]
	if typeof(_2_4) ~= "number" then
		-- KONSTANTWARNING: GOTO [31] #25
	end
	-- KONSTANTERROR: [0] 1. Error Block 20 end (CF ANALYSIS FAILED)
	-- KONSTANTERROR: [30] 24. Error Block 22 start (CF ANALYSIS FAILED)
	var1386 = assert
	var1386(true, `bad level: "{_2_4}"`)
	var1386 = arg1[3]
	if typeof(var1386) ~= "string" then
	else
	end
	assert(true, `bad name: "{var1386}"`)
	do
		return {
			Lvl = _2_4;
			Trigger = _1_3;
			Name = var1386;
		}
	end
	-- KONSTANTERROR: [30] 24. Error Block 22 end (CF ANALYSIS FAILED)
end
function encodeLegacyEntry(arg1) -- Line 729
	return {arg1.Trigger, arg1.Lvl, arg1.Name}
end
function patchRowSet(arg1, arg2) -- Line 733
	for i, v in ipairs(arg1) do
		local decodeLegacyEntry_result1_2 = decodeLegacyEntry(v)
		local var1398 = arg2.Lvl[decodeLegacyEntry_result1_2.Trigger]
		if not var1398 then
			var1398 = decodeLegacyEntry_result1_2.Lvl
		end
		decodeLegacyEntry_result1_2.Lvl = var1398
		arg1[i] = encodeLegacyEntry(decodeLegacyEntry_result1_2)
	end
end
for i_2, v_2 in pairs(module_4) do
	local var1402 = require(game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("FruitSkillUtil")).getFruitDataAsync()[i_2]
	if var1402 then
		local _1 = v_2[1]
		assert(_1, `empty entry: "{i_2}"`)
		patchRowSet(_1, var1402)
		local _2 = v_2[2]
		if _2 then
			patchRowSet(_2, var1402)
		end
	end
end
return module_4




-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:59:44
-- Luau version 6, Types version 3
-- Time taken: 0.042922 seconds

local module_4 = {
	["Flame-Flame"] = {{{'Z', 1, "Fire Bullets"}, {'X', 20, "Burning Blast"}, {'C', 50, "Fire Column"}, {'V', 100, "Flame Destroyer"}, {'F', 10, "Fire Flight"}}, {{'Z', 1, "Blue Fire Bullets"}, {'X', 20, "Prominence Burst"}, {'C', 50, "Flaming Vortex"}, {'V', 100, "Hell's Core"}, {'F', 10, "Rocket Flight"}}};
	["Dark-Dark"] = {{{'Z', 1, "Dark Rocks"}, {'X', 20, "Black Spiral"}, {'C', 50, "Black Hole"}, {'V', 100, "Dark Bomb"}}, {{'Z', 1, "Dimensional Slash"}, {'X', 20, "Abyssal Darkness"}, {'C', 50, "Endless Hole"}, {'V', 100, "World of Darkness"}, {'F', 10, "Ghastly Step"}}};
	["Quake-Quake"] = {{{'Z', 1, "Quake Punch"}, {'X', 20, "Quake Wave"}, {'C', 50, "Quake Erupt"}, {'V', 100, "Dual Tsunami"}}, {{'Z', 1, "Fatal Demolisher"}, {'X', 20, "Air Crusher"}, {'C', 50, "Spatial Shockwave"}, {'V', 100, "Seaquake"}}};
	["Light-Light"] = {{{'Z', 1, "Light Ray"}, {'X', 50, "Barrage of Light"}, {'C', 20, "Reflection Kick"}, {'V', 100, "Sky Beam Barrage"}, {'F', 10, "Light Flight"}}, {{'Z', 1, "Divine Arrow"}, {'X', 50, "Hand of the Emperor"}, {'C', 20, "Lightspeed Destroyer"}, {'V', 100, "Wrath of God"}, {'F', 10, "Shining Flight"}}};
	["Buddha-Buddha"] = {{{'Z', 1, "Transform"}, {'X', 20, "Impact"}, {'C', 50, "Buddha Leap"}, {'V', 100, "Buddha Explosion"}}, {{'Z', 1, "Shift"}, {'X', 20, "Heavenly Impact"}, {'C', 50, "Light of Annihilation"}, {'V', 100, "Twilight of the Gods"}, {'F', 100, "Retribution Dash"}}};
	["Rubber-Rubber"] = {{{'Z', 1, "Cannon"}, {'X', 25, "Smash"}, {'C', 75, "Rush"}, {'V', 150, "Transformation"}, {'F', 75, "Slingshot"}}};
	["Spring-Spring"] = {{{'Z', 1, "Knock"}, {'X', 25, "Spring Snipe"}, {'C', 60, "Spring Cannon"}, {'V', 60, "Spring Emperor"}, {'F', 80, "Spring Leap"}}};
	["Kilo-Kilo"] = {{{'Z', 1, "10,000 Kg"}, {'X', 25, "20,000 Kg"}, {'C', 60, "50,000 Kg"}, {'F', 80, "Lighten"}}};
	["Rocket-Rocket"] = {{{'Z', 1, "Missile Fist"}, {'X', 25, "Air Strike"}, {'C', 60, "Rocket Crash"}, {'F', 80, "Blast Off"}}};
	["Diamond-Diamond"] = {{{'Z', 1, "Encrust"}, {'X', 25, "Shard Storm"}, {'C', 60, "Shimmering Disruption"}, {'V', 80, "Prismatic Reflection"}}};
	["Love-Love"] = {{{'Z', 1, "Heart Shot"}, {'X', 25, "Cupid's Zone"}, {'C', 60, "Irresistible Attraction"}, {'V', 80, "Besto Friendo"}, {'F', 80, "Flamingo Ride"}}};
	["Spin-Spin"] = {{{'Z', 1, "Razor Wind"}, {'X', 25, "Tornado Assault"}, {'C', 60, "Air Slasher"}, {'F', 80, "Helicopter Flight"}}};
	["Ghost-Ghost"] = {{{'Z', 1, "Shivering Possession"}, {'X', 25, "Spectral Release"}, {'C', 60, "Cries of the Underworld"}, {'V', 80, "Ghost Busters"}, {'F', 80, "Wandering Soul"}}};
	["Shadow-Shadow"] = {{{'Z', 1, "Somber Rebellion"}, {'X', 20, "Shade Nest"}, {'C', 20, "Nightmare Leech"}, {'V', 20, "Corvus Torment"}, {'F', 20, "Umbrage"}}};
	["Door-Door"] = {{{'Z', 1, "Spinning Door"}, {'X', 25, "Dimensional Door"}, {'C', 60, "Door Gateway"}, {'F', 80, "Hallway"}}};
	["Portal-Portal"] = {{{'Z', 1, "Portal Dash"}, {'X', 20, "Parallel Escape"}, {'C', 20, "World Warp"}, {'V', 20, "Dimensional Rift"}, {'F', 20, "Quantum Leap"}}};
	["Ice-Ice"] = {{{'Z', 1, "Ice Spears"}, {'X', 20, "Ice Surge"}, {'C', 50, "Ice Bird"}, {'V', 100, "Glacial Epoch"}}, {{'Z', 1, "Cold Storm"}, {'X', 20, "Glacial Surge"}, {'C', 50, "Frozen Dragon"}, {'V', 100, "Absolute Zero"}, {'F', 100, "Ice Skating"}}};
	["Control-Control"] = {{{'Z', 1, "Control Area"}, {'X', 20, "Levitate"}, {'C', 50, "Echo Knife"}, {'V', 100, "Gamma Rush"}, {'F', 10, "Teleport"}}};
	["Dragon (Classic)-Dragon (Classic)"] = {{{'Z', 1, "Heatwave Beam"}, {'X', 20, "Dragonic Claw"}, {'C', 50, "Fire Shower"}, {'V', 100, "Transformation"}, {'F', 10, "Dragon Flight"}}};
	["Dragon-Dragon"] = {{{'Z', 1, "Heatwave Cannon"}, {'X', 20, "Infernal Pincer"}, {'C', 50, "Scorching Downfall"}, {'V', 100, "Imperial Evolution"}, {'F', 10, "Draconic Soar"}}};
	["Gas-Gas"] = {{{'Z', 1, "Suffocating Fumes"}, {'X', 20, "Bursting Vapor"}, {'C', 50, "Smog Demons"}, {'V', 100, "Vapor Condensation"}, {'F', 10, "Traveling Gas"}}};
	["Magma-Magma"] = {{{'Z', 1, "Magma Clap"}, {'X', 20, "Magma Eruption"}, {'C', 50, "Magma Fist"}, {'V', 100, "Magma Meteors"}, {'F', 10, "Magma Floor"}}, {{'Z', 1, "Magma Shower"}, {'X', 20, "Volcanic Assault"}, {'C', 50, "Great Magma Hound"}, {'V', 100, "Volcanic Storm"}, {'F', 10, "Beast Ride"}}};
	["Venom-Venom"] = {{{'Z', 1, "Poison Daggers"}, {'X', 20, "Noxious Shot"}, {'C', 20, "Toxic Fog"}, {'V', 20, "Transformation"}, {'F', 20, "Serpent's Wrath"}}};
	["Leopard-Leopard"] = {{{'Z', 1, "Finger Revolver"}, {'X', 20, "Spiraling Kick"}, {'C', 20, "Afterimage Assault"}, {'V', 20, "Transformation"}, {'F', 20, "Body Flicker"}}};
	["Yeti-Yeti"] = {{{'Z', 1, "Arctic Clap"}, {'X', 20, "Frostbite Boulder"}, {'C', 20, "Glacial Execution"}, {'V', 20, "Transformation"}, {'F', 20, "Tundra Rush"}}};
	["Sand-Sand"] = {{{'Z', 1, "Desert Sword"}, {'X', 20, "Desert Funeral"}, {'C', 50, "Sand Tornado"}, {'V', 100, "Heavy Sand"}, {'F', 10, "Sand Flight"}}, {{'Z', 1, "Desert Blade"}, {'X', 20, "Sand Coffin"}, {'C', 50, "Sandstorm"}, {'V', 100, "Deep Sand"}, {'F', 100, "Tornado Flight"}}};
	["Soul-Soul"] = {{{'Z', 1, "Soul Snatcher"}, {'X', 20, "Wrath of Ra"}, {'C', 20, "Outraged Raijin"}, {'V', 20, "End of Times"}, {'F', 20, "Sky Ruler"}}};
	["Spirit-Spirit"] = {{{'Z', 1, "Frostfire Grasp"}, {'X', 20, "Wrath of Ra"}, {'C', 20, "Wrath of Shu"}, {'V', 20, "End of Times"}, {'F', 20, "Sky Ruler"}}};
	["Hollow-Hollow"] = {{{'Z', 1, "Kamikaze Ghosts"}, {'X', 20, "Gloomy Spirit"}, {'C', 20, "Starved Phantom"}, {'V', 20, "Revenant Lift"}, {'F', 20, "Spirit Projection"}}};
	["Blizzard-Blizzard"] = {{{'Z', 1, "Snowflake Shuriken"}, {'X', 20, "White Out"}, {'C', 20, "Howling Wind"}, {'V', 20, "Blizzard Domain"}, {'F', 20, "Tornado Flight"}}};
	["Bomb-Bomb"] = {{{'Z', 1, "Targeted Bomb"}, {'X', 20, "Bomb Grab"}, {'C', 20, "Land Mines"}, {'V', 20, "Self Destruct"}, {'F', 20, "Explosive Jump"}}};
	["Spike-Spike"] = {{{'Z', 1, "Spike Summon"}, {'X', 20, "Whirlwind"}, {'C', 20, "Spiky Ball"}, {'V', 20, "Spike Barrage"}}};
	["Chop-Chop"] = {{{'Z', 1, "Tackle"}, {'X', 20, "Dance"}, {'C', 20, "Party"}, {'F', 20, "Helicopter"}}};
	["Blade-Blade"] = {{{'Z', 1, "Razor Cyclone"}, {'X', 20, "Blade Dance"}, {'C', 20, "Saw Shredder"}, {'F', 20, "Turbine Flight"}}};
	["Smoke-Smoke"] = {{{'Z', 1, "Smoke Slam"}, {'X', 20, "Smoke Blast"}, {'C', 20, "Smoke Liberation"}, {'F', 20, "Smoke Bomber"}}};
	["Phoenix-Phoenix"] = {{{'Z', 1, "Cannon"}, {'X', 20, "Regeneration Flames"}, {'C', 20, "Fast Kick"}, {'V', 20, "Full Transformation"}, {'F', 20, "Hybrid Flight"}}, {{'Z', 1, "Cremation Cannon"}, {'X', 20, "Blue Flames"}, {'C', 20, "Flame Exodus"}, {'V', 20, "Blazing Plumage"}, {'F', 20, "Swift Flight"}}};
	["Falcon-Falcon"] = {{{'Z', 1, "Plumage"}, {'X', 20, "Wind Burst"}, {'C', 20, "Bone Crusher"}, {'V', 20, "Soaring Talon"}, {'F', 20, "Flight"}}};
	["Sound-Sound"] = {{{'Z', 1, "Rhapsody Notes"}, {'X', 20, "Fortissimo"}, {'C', 20, "Symphonic Radiance"}, {'V', 20, "Glorious Harmony"}, {'F', 20, "Tempo: Prestissimo"}}};
	["Mammoth-Mammoth"] = {{{'Z', 1, "Ancient Cutter"}, {'X', 20, "True Prehistoric Punt"}, {'C', 20, "Colossal Crusher"}, {'V', 20, "Transformation"}, {'F', 20, "Stampede"}}};
	["Rumble-Rumble"] = {{{'Z', 1, "Rumble Dragon"}, {'X', 20, "Sky Thunder"}, {'C', 20, "Sky Beam"}, {'V', 20, "Thunder Bomb"}, {'F', 20, "Lightning Dash"}}, {{'Z', 1, "Lightning Beast"}, {'X', 20, "Thunderstorm"}, {'C', 20, "Sky Judgement"}, {'V', 20, "Thunderball Destruction"}, {'F', 20, "Electric Flash"}}};
	["Spider-Spider"] = {{{'Z', 1, "Spider Wraith"}, {'X', 20, "Multi-string Attack"}, {'C', 20, "Over-heated Sniper"}, {'V', 20, "Ultimate Thread"}, {'F', 20, "Spider Path"}}, {{'Z', 1, "Thermal Laceration"}, {'X', 20, "Silk Prison"}, {'C', 20, "Eternal White"}, {'V', 20, "Heavenly Punishment"}, {'F', 20, "Spider Highway"}}};
	["Gravity-Gravity"] = {{{'Z', 1, "Gravity Push"}, {'X', 20, "Gravity Obeisance"}, {'C', 20, "Meteor Pitch"}, {'V', 20, "Meteors Rain"}, {'F', 20, "Boulder Flight"}}};
	["Pain-Pain"] = {{{'Z', 1, "Heavy Pain"}, {'X', 20, "Pain Barrage"}, {'C', 20, "Pain Nuke"}, {'V', 20, "Torture"}, {'F', 20, "Self Repel"}}};
	["Barrier-Barrier"] = {{{'Z', 1, "Barrier Wall"}, {'X', 20, "Surprise Attack"}, {'C', 20, "Barrier Prison"}, {'V', 20, "Barrier Towers"}, {'F', 20, "Stairs"}}};
	["Kitsune-Kitsune"] = {{{'Z', 1, "Accursed Enchantment"}, {'X', 20, "Tails of Burning Agony"}, {'C', 20, "Fox Fire Disruption"}, {'V', 20, "Transformation"}, {'F', 20, "Wild Assault"}}};
	["T-Rex-T-Rex"] = {{{'Z', 1, "Tail Swipe"}, {'X', 20, "Predatory Screech"}, {'C', 20, "Hunter's Rage"}, {'V', 20, "Reptilian Scales"}, {'F', 20, "Gigantic Leap"}}};
	["Dough-Dough"] = {{{'Z', 1, "Fried Dough"}, {'X', 20, "Sticky Dough"}, {'C', 20, "Carved Dough"}, {'V', 20, "Restless Dough Barrage"}, {'F', 20, "Roller Donut"}}, {{'Z', 1, "Missile Jab"}, {'X', 20, "Pastry River"}, {'C', 20, "Piercing Clothesline"}, {'V', 20, "Dough Fist Fusillade"}, {'F', 20, "Scorching Donut"}}};
	["Bastar-Bastar"] = {{{'Z', 1, "Room"}}};
	["Meme-Meme"] = {{{'Z', 1, "Traffic Cone"}}};
	["Rogue-Rogue"] = {{{'Z', 1, "Mori"}, {'X', 1, "Snap Mori"}}};
	Combat = {{{'Z', 1, "Quick Tackle"}, {'X', 20, "Ground Smash"}}};
	["Black Leg"] = {{{'Z', 1, "Flying Kick"}, {'X', 20, "Breakdance"}, {'C', 50, "Barrage"}, {'V', 100, "Overheat"}}};
	["Death Step"] = {{{'Z', 1, "Rocket Kick"}, {'X', 20, "Wind Bullet"}, {'C', 50, "Vermillion Drill"}, {'V', 100, "Maximum Overheat"}}};
	Electro = {{{'Z', 1, "Stomp"}, {'X', 20, "Electrical Tackle"}, {'C', 50, "Electrical Floor"}}};
	["Electric Claw"] = {{{'Z', 1, "Electric Rampage"}, {'X', 20, "Lightning Thrust"}, {'C', 50, "Thunderclap and Flash"}}};
	["Fishman Karate"] = {{{'Z', 1, "Steam-Charged Fist"}, {'X', 20, "Deadly Shower"}, {'C', 50, "Heavy Water Punch"}}};
	["Sharkman Karate"] = {{{'Z', 1, "Twelve Water Palms"}, {'X', 20, "Pressure Vortex"}, {'C', 50, "Great Sea Spear"}}};
	["Dragon Claw"] = {{{'Z', 1, "Dragon Rush"}, {'X', 20, "Dragon Flames"}, {'C', 50, "Dragon Explosion"}}};
	Superhuman = {{{'Z', 1, "Beast Owl Pounce"}, {'X', 20, "Thunder Clap"}, {'C', 50, "Conqueror Gun"}}};
	Godhuman = {{{'Z', 1, "Soaring Beast"}, {'X', 20, "Heaven and Earth"}, {'C', 50, "Sixth Realm Gun"}}};
	["Dragon Talon"] = {{{'Z', 1, "Talon Lighter"}, {'X', 20, "Ember Annihilation"}, {'C', 50, "Infernal Vortex"}}};
	["Sanguine Art"] = {{{'Z', 1, "Bloodbane Drain"}, {'X', 20, "Scarlet Tear"}, {'C', 50, "Devourer of Worlds"}}};
	["Divine Art"] = {{{'Z', 1, "Fool's Demise"}, {'X', 20, "Judgement of the Pitiful"}, {'C', 50, "Timeless Misery"}}};
	["Twin Hooks"] = {{{'Z', 1, "Sky Cyclone"}, {'X', 20, "Prehistoric Punt"}}};
	["Spikey Trident"] = {{{'Z', 1, "Dough Hurricane"}, {'X', 20, "Flying Trident Pull"}}};
	["Buddy Sword"] = {{{'Z', 1, "Heat Slash"}, {'X', 20, "Lightning Wave"}}};
	["Dual Katana"] = {{{'Z', 1, "Whirlwind"}, {'X', 20, "Tornado"}}};
	Katana = {{{'Z', 1, "Quiet Rush"}, {'X', 20, "Air Slash"}}};
	Cutlass = {{{'Z', 1, "Quiet Rush"}, {'X', 20, "Air Slash"}}};
	["Dark Blade"] = {{{'Z', 1, "One Thousand Slices"}, {'X', 20, "Dark Air Slash"}}};
	["Triple Dark Blade"] = {{{'Z', 1, "One Thousand Slices"}, {'X', 20, "Dark Air Slash"}}};
	["Dark Dagger"] = {{{'Z', 1, "Proficient Impale"}, {'X', 20, "Shaming Slash"}}};
	["Shark Anchor"] = {{{'Z', 1, "Typhoon Toss"}, {'X', 20, "Armor Breaker"}}};
	["Fox Lamp"] = {{{'Z', 1, "Scorching Azure"}, {'X', 20, "Infernal Firestorm"}}};
	Bisento = {{{'Z', 1, "Wind Breaker"}, {'X', 20, "Quake Sphere"}}};
	Flail = {{{'Z', 1, "Smoke Leopard"}, {'X', 20, "Smoke Apparition"}}};
	Koko = {{{'Z', 1, "Electric Stab"}, {'X', 20, "Injection Shot"}}};
	["Triple Katana"] = {{{'Z', 1, "Air Slashes Barrage"}, {'X', 20, "Violent Rush"}}};
	["True Triple Katana"] = {{{'Z', 1, "Wolf Fang Rush"}, {'X', 20, "Dragon Hurricane"}}};
	["Hallow Scythe"] = {{{'Z', 1, "Death Cyclone"}, {'X', 20, "Soul Execution"}}};
	Trident = {{{'Z', 1, "Trident Throw"}, {'X', 20, "Water Pulse"}}};
	["Dragon Trident"] = {{{'Z', 1, "Sea Dragon Fury"}, {'X', 20, "Water Dragon Shower"}}};
	Rengoku = {{{'Z', 1, "Demon Slayer"}, {'X', 20, "Burning Slash"}}};
	Saber = {{{'Z', 1, "Deadly Rush"}, {'X', 20, "Triple Slash"}}};
	["Shark Saw"] = {{{'Z', 1, "Consecutive Slashes"}, {'X', 20, "Execution"}}};
	["Iron Mace"] = {{{'Z', 1, "Mace Smash"}, {'X', 20, "Killer Combo"}}};
	["Wardens Sword"] = {{{'Z', 1, "Multi-Target Slash"}, {'X', 20, "Tornado Slash"}}};
	Pipe = {{{'Z', 1, "Pipe Ignition"}, {'X', 20, "Dragon Blast"}}};
	["Dual-Headed Blade"] = {{{'Z', 1, "Assassinate"}, {'X', 20, "Raging Wind"}}};
	["Soul Cane"] = {{{'Z', 1, "Soul Beam"}, {'X', 20, "Soul Slashes"}}};
	["Pole (1st Form)"] = {{{'Z', 1, "Explosive Cloud"}, {'X', 20, "Lightning Rain"}}};
	["Pole (2nd Form)"] = {{{'Z', 1, "Hand of God"}, {'X', 20, "Electric Prison"}}};
	["Gravity Blade"] = {{{'Z', 1, "Dimensional Grasp"}, {'X', 20, "Lunar Blitz"}}};
	Shizu = {{{'Z', 1, "True Quiet Rush"}, {'X', 20, "Focus Shot"}}};
	Canvander = {{{'Z', 1, "Piercing Dash"}, {'X', 20, "Scattering Gust"}}};
	Yama = {{{'Z', 1, "Hellish Slash"}, {'X', 20, "Infernal Hurricane"}}};
	["Cursed Dual Katana"] = {{{'Z', 1, "Revolving Ravager"}, {'X', 20, "Slayer of Goliath"}}};
	Tushita = {{{'Z', 1, "Heavenly Lunges"}, {'X', 20, "Celestial Ravager"}}};
	Saishi = {{{'Z', 1, "Swords Dance"}, {'X', 20, "True Air Slash"}}};
	Oroshi = {{{'Z', 1, "Continuous Slashing"}, {'X', 20, "Dragon Gust"}}};
	Longsword = {{{'Z', 1, "Annihilate"}, {'X', 20, "Glorious Smash"}}};
	["Midnight Blade"] = {{{'Z', 1, "Portal Opening"}, {'X', 20, "Crescent Dash"}}};
	Dragonheart = {{{'Z', 1, "Draconic Blitz"}, {'X', 20, "Infernal Catastrophe"}}};
	Slingshot = {{{'Z', 1, "Ink Bomb"}, {'X', 20, "Proximity Bomb"}}};
	["Refined Slingshot"] = {{{'Z', 1, "Ink Swarm"}, {'X', 20, "Cluster Bomb"}}};
	Flintlock = {{{'Z', 1, "Concentrated Shot"}, {'X', 20, "Marksman Fury"}}};
	["Dual Flintlock"] = {{{'Z', 1, "Splitting Beam"}, {'X', 20, "Bullet Storm"}}};
	Musket = {{{'Z', 1, "Draconic Bullet"}, {'X', 20, "Torching Shot"}}};
	["Magma Blaster"] = {{{'Z', 1, "Scorching Burst"}, {'X', 20, "Magmatic Pressure"}}};
	Cannon = {{{'Z', 1, "Chain Detonation"}, {'X', 20, "Incendiary Ammo"}}};
	Bazooka = {{{'Z', 1, "Heat Wave"}, {'X', 20, "Flaring Missiles"}}};
	Kabucha = {{{'Z', 1, "Blazing Phoenix"}, {'X', 20, "Dragon Tempest"}}};
	["Venom Bow"] = {{{'Z', 1, "Venomous Spit"}, {'X', 20, "Serpent Bite"}}};
	["Skull Guitar"] = {{{'Z', 1, "Soul Shaker"}, {'X', 20, "El Diablo"}}};
	["Acidum Rifle"] = {{{'Z', 1, "Spiky Bomb"}, {'X', 20, "Acidic Smoke"}}};
	["Bizarre Revolver"] = {{{'Z', 1, "Space Bending Blast"}, {'X', 20, "Dimensional Surge"}}};
	Dragonstorm = {{{'Z', 1, "Draconic Cascade"}, {'X', 20, "Infernal Comet"}}};
	Gun = {};
}
function decodeLegacyEntry(arg1) -- Line 715
	-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
	-- KONSTANTERROR: [0] 1. Error Block 20 start (CF ANALYSIS FAILED)
	local _1_3 = arg1[1]
	local var1386
	if typeof(_1_3) ~= "string" then
		var1386 = false
	else
		var1386 = true
	end
	assert(var1386, `bad trigger: "{_1_3}"`)
	local _2_4 = arg1[2]
	if typeof(_2_4) ~= "number" then
		-- KONSTANTWARNING: GOTO [31] #25
	end
	-- KONSTANTERROR: [0] 1. Error Block 20 end (CF ANALYSIS FAILED)
	-- KONSTANTERROR: [30] 24. Error Block 22 start (CF ANALYSIS FAILED)
	var1386 = assert
	var1386(true, `bad level: "{_2_4}"`)
	var1386 = arg1[3]
	if typeof(var1386) ~= "string" then
	else
	end
	assert(true, `bad name: "{var1386}"`)
	do
		return {
			Lvl = _2_4;
			Trigger = _1_3;
			Name = var1386;
		}
	end
	-- KONSTANTERROR: [30] 24. Error Block 22 end (CF ANALYSIS FAILED)
end
function encodeLegacyEntry(arg1) -- Line 729
	return {arg1.Trigger, arg1.Lvl, arg1.Name}
end
function patchRowSet(arg1, arg2) -- Line 733
	for i, v in ipairs(arg1) do
		local decodeLegacyEntry_result1_2 = decodeLegacyEntry(v)
		local var1398 = arg2.Lvl[decodeLegacyEntry_result1_2.Trigger]
		if not var1398 then
			var1398 = decodeLegacyEntry_result1_2.Lvl
		end
		decodeLegacyEntry_result1_2.Lvl = var1398
		arg1[i] = encodeLegacyEntry(decodeLegacyEntry_result1_2)
	end
end
for i_2, v_2 in pairs(module_4) do
	local var1402 = require(game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("FruitSkillUtil")).getFruitDataAsync()[i_2]
	if var1402 then
		local _1 = v_2[1]
		assert(_1, `empty entry: "{i_2}"`)
		patchRowSet(_1, var1402)
		local _2 = v_2[2]
		if _2 then
			patchRowSet(_2, var1402)
		end
	end
end
return module_4






-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:59:01
-- Luau version 6, Types version 3
-- Time taken: 0.003788 seconds

local module_upvr = {}
local function pagesToTable_upvr(arg1) -- Line 13, Named "pagesToTable"
	local module_upvr_2 = {}
	local var3_upvw = 1
	local var4_upvw = false
	repeat
		local pcall_result1, pcall_result2_2 = pcall(function() -- Line 21
			--[[ Upvalues[4]:
				[1]: module_upvr_2 (readonly)
				[2]: var3_upvw (read and write)
				[3]: arg1 (readonly)
				[4]: var4_upvw (read and write)
			]]
			module_upvr_2[var3_upvw] = arg1:GetCurrentPage()
			if arg1.IsFinished then
				var4_upvw = true
				return true
			end
			arg1:AdvanceToNextPageAsync()
			return true
		end)
		local var8
		if pcall_result1 then
			if not var4_upvw then
				var3_upvw += 1
				-- KONSTANTWARNING: GOTO [29] #26
			end
		else
			var8 += 1
			print(`FriendFinderError: {pcall_result2_2}:{var8}/{5}`)
		end
	until var4_upvw and var8 == 5
	return module_upvr_2
end
local function _(arg1) -- Line 47, Named "iterPageItems"
	--[[ Upvalues[1]:
		[1]: pagesToTable_upvr (readonly)
	]]
	local pagesToTable_upvr_result1_upvr = pagesToTable_upvr(arg1)
	local var11_upvw = 1
	local len_upvr = #pagesToTable_upvr_result1_upvr
	return coroutine.wrap(function() -- Line 55
		--[[ Upvalues[3]:
			[1]: var11_upvw (read and write)
			[2]: len_upvr (readonly)
			[3]: pagesToTable_upvr_result1_upvr (readonly)
		]]
		while var11_upvw <= len_upvr do
			for _, v in ipairs(pagesToTable_upvr_result1_upvr[var11_upvw]) do
				coroutine.yield(v, var11_upvw)
			end
			var11_upvw += 1
		end
	end)
end
local var18_upvw = 1
local var19_upvw
local UserId_upvr = game.Players.LocalPlayer.UserId
function module_upvr.GetFriendsAsync(arg1, arg2) -- Line 68
	--[[ Upvalues[4]:
		[1]: var18_upvw (read and write)
		[2]: var19_upvw (read and write)
		[3]: UserId_upvr (readonly)
		[4]: pagesToTable_upvr (readonly)
	]]
	if (arg2 or math.huge) < tick() - var18_upvw or not var19_upvw then
		var18_upvw = tick()
		local tbl = {}
		local var23_upvw
		local pcall_result1_2, pcall_result2 = pcall(function() -- Line 78
			--[[ Upvalues[2]:
				[1]: UserId_upvr (copied, readonly)
				[2]: var23_upvw (read and write)
			]]
			if UserId_upvr <= 0 then
				var23_upvw = game.Players:GetFriendsAsync(31265920)
			else
				var23_upvw = game.Players:GetFriendsAsync(UserId_upvr)
			end
		end)
		if not pcall_result1_2 then
			print(pcall_result2)
		elseif var23_upvw then
			local pagesToTable_result1_upvr = pagesToTable_upvr(var23_upvw)
			local var29_upvw = 1
			local len_upvr_2 = #pagesToTable_result1_upvr
			for i_4 in coroutine.wrap(function() -- Line 55
				--[[ Upvalues[3]:
					[1]: var29_upvw (read and write)
					[2]: len_upvr_2 (readonly)
					[3]: pagesToTable_result1_upvr (readonly)
				]]
				while var29_upvw <= len_upvr_2 do
					for _, v_3 in ipairs(pagesToTable_result1_upvr[var29_upvw]) do
						coroutine.yield(v_3, var29_upvw)
					end
					var29_upvw += 1
				end
			end) do
				local function INLINED() -- Internal function, doesn't exist in bytecode
					tbl[i_4.Id] = tbl_2
					tbl_2.UserId = i_4.Id
					tbl_2.DisplayName = i_4.DisplayName
					tbl_2.Name = i_4.Username
					local tbl_2 = {}
					return 200 <= 0 + 1
				end
				if i_4.Id == UserId_upvr or INLINED() then break end
			end
			var19_upvw = tbl
		end
	end
	return var19_upvw
end
local Promise_upvr = require(game.ReplicatedStorage:WaitForChild("Modules").Util.Promise)
function module_upvr.GetFriends(arg1, arg2) -- Line 114
	--[[ Upvalues[2]:
		[1]: Promise_upvr (readonly)
		[2]: module_upvr (readonly)
	]]
	return Promise_upvr.new(function(arg1_2, arg2_2, arg3) -- Line 115
		--[[ Upvalues[2]:
			[1]: module_upvr (copied, readonly)
			[2]: arg2 (readonly)
		]]
		-- KONSTANTERROR: [19] 18. Error Block 5 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [19] 18. Error Block 5 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 19 start (CF ANALYSIS FAILED)
		-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.3]
		if not nil then
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.4]
			if not nil then
				-- KONSTANTWARNING: GOTO [6] #7
			end
			-- KONSTANTWARNING: GOTO [21] #20
		end
		-- KONSTANTERROR: [0] 1. Error Block 19 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [21] 20. Error Block 16 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		if not nil then
			local var43
			if not var43 then
				var43 = {}
			end
			arg1_2(var43)
		end
		-- KONSTANTERROR: [21] 20. Error Block 16 end (CF ANALYSIS FAILED)
	end)
end
task.spawn(function() -- Line 138
	--[[ Upvalues[1]:
		[1]: module_upvr (readonly)
	]]
	game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("FriendFinder").OnClientInvoke = function() -- Line 139
		--[[ Upvalues[1]:
			[1]: module_upvr (copied, readonly)
		]]
		local var50
		if not var50 then
			var50 = {}
		end
		for _, v_2 in pairs(game.Players:GetPlayers()) do
			if var50[v_2.UserId] then
				table.insert({}, v_2)
			end
		end
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		return {}
	end
	game.Players.LocalPlayer:GetAttributeChangedSignal("FriendBoost"):Connect(function() -- Line 152
		print(`FriendBoostChanged:{game.Players.LocalPlayer:GetAttribute("FriendBoost")}`)
	end)
end)
return module_upvr





-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:59:01
-- Luau version 6, Types version 3
-- Time taken: 0.003788 seconds

local module_upvr = {}
local function pagesToTable_upvr(arg1) -- Line 13, Named "pagesToTable"
	local module_upvr_2 = {}
	local var3_upvw = 1
	local var4_upvw = false
	repeat
		local pcall_result1, pcall_result2_2 = pcall(function() -- Line 21
			--[[ Upvalues[4]:
				[1]: module_upvr_2 (readonly)
				[2]: var3_upvw (read and write)
				[3]: arg1 (readonly)
				[4]: var4_upvw (read and write)
			]]
			module_upvr_2[var3_upvw] = arg1:GetCurrentPage()
			if arg1.IsFinished then
				var4_upvw = true
				return true
			end
			arg1:AdvanceToNextPageAsync()
			return true
		end)
		local var8
		if pcall_result1 then
			if not var4_upvw then
				var3_upvw += 1
				-- KONSTANTWARNING: GOTO [29] #26
			end
		else
			var8 += 1
			print(`FriendFinderError: {pcall_result2_2}:{var8}/{5}`)
		end
	until var4_upvw and var8 == 5
	return module_upvr_2
end
local function _(arg1) -- Line 47, Named "iterPageItems"
	--[[ Upvalues[1]:
		[1]: pagesToTable_upvr (readonly)
	]]
	local pagesToTable_upvr_result1_upvr = pagesToTable_upvr(arg1)
	local var11_upvw = 1
	local len_upvr = #pagesToTable_upvr_result1_upvr
	return coroutine.wrap(function() -- Line 55
		--[[ Upvalues[3]:
			[1]: var11_upvw (read and write)
			[2]: len_upvr (readonly)
			[3]: pagesToTable_upvr_result1_upvr (readonly)
		]]
		while var11_upvw <= len_upvr do
			for _, v in ipairs(pagesToTable_upvr_result1_upvr[var11_upvw]) do
				coroutine.yield(v, var11_upvw)
			end
			var11_upvw += 1
		end
	end)
end
local var18_upvw = 1
local var19_upvw
local UserId_upvr = game.Players.LocalPlayer.UserId
function module_upvr.GetFriendsAsync(arg1, arg2) -- Line 68
	--[[ Upvalues[4]:
		[1]: var18_upvw (read and write)
		[2]: var19_upvw (read and write)
		[3]: UserId_upvr (readonly)
		[4]: pagesToTable_upvr (readonly)
	]]
	if (arg2 or math.huge) < tick() - var18_upvw or not var19_upvw then
		var18_upvw = tick()
		local tbl = {}
		local var23_upvw
		local pcall_result1_2, pcall_result2 = pcall(function() -- Line 78
			--[[ Upvalues[2]:
				[1]: UserId_upvr (copied, readonly)
				[2]: var23_upvw (read and write)
			]]
			if UserId_upvr <= 0 then
				var23_upvw = game.Players:GetFriendsAsync(31265920)
			else
				var23_upvw = game.Players:GetFriendsAsync(UserId_upvr)
			end
		end)
		if not pcall_result1_2 then
			print(pcall_result2)
		elseif var23_upvw then
			local pagesToTable_result1_upvr = pagesToTable_upvr(var23_upvw)
			local var29_upvw = 1
			local len_upvr_2 = #pagesToTable_result1_upvr
			for i_4 in coroutine.wrap(function() -- Line 55
				--[[ Upvalues[3]:
					[1]: var29_upvw (read and write)
					[2]: len_upvr_2 (readonly)
					[3]: pagesToTable_result1_upvr (readonly)
				]]
				while var29_upvw <= len_upvr_2 do
					for _, v_3 in ipairs(pagesToTable_result1_upvr[var29_upvw]) do
						coroutine.yield(v_3, var29_upvw)
					end
					var29_upvw += 1
				end
			end) do
				local function INLINED() -- Internal function, doesn't exist in bytecode
					tbl[i_4.Id] = tbl_2
					tbl_2.UserId = i_4.Id
					tbl_2.DisplayName = i_4.DisplayName
					tbl_2.Name = i_4.Username
					local tbl_2 = {}
					return 200 <= 0 + 1
				end
				if i_4.Id == UserId_upvr or INLINED() then break end
			end
			var19_upvw = tbl
		end
	end
	return var19_upvw
end
local Promise_upvr = require(game.ReplicatedStorage:WaitForChild("Modules").Util.Promise)
function module_upvr.GetFriends(arg1, arg2) -- Line 114
	--[[ Upvalues[2]:
		[1]: Promise_upvr (readonly)
		[2]: module_upvr (readonly)
	]]
	return Promise_upvr.new(function(arg1_2, arg2_2, arg3) -- Line 115
		--[[ Upvalues[2]:
			[1]: module_upvr (copied, readonly)
			[2]: arg2 (readonly)
		]]
		-- KONSTANTERROR: [19] 18. Error Block 5 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [19] 18. Error Block 5 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 19 start (CF ANALYSIS FAILED)
		-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.3]
		if not nil then
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.4]
			if not nil then
				-- KONSTANTWARNING: GOTO [6] #7
			end
			-- KONSTANTWARNING: GOTO [21] #20
		end
		-- KONSTANTERROR: [0] 1. Error Block 19 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [21] 20. Error Block 16 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		if not nil then
			local var43
			if not var43 then
				var43 = {}
			end
			arg1_2(var43)
		end
		-- KONSTANTERROR: [21] 20. Error Block 16 end (CF ANALYSIS FAILED)
	end)
end
task.spawn(function() -- Line 138
	--[[ Upvalues[1]:
		[1]: module_upvr (readonly)
	]]
	game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("FriendFinder").OnClientInvoke = function() -- Line 139
		--[[ Upvalues[1]:
			[1]: module_upvr (copied, readonly)
		]]
		local var50
		if not var50 then
			var50 = {}
		end
		for _, v_2 in pairs(game.Players:GetPlayers()) do
			if var50[v_2.UserId] then
				table.insert({}, v_2)
			end
		end
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		return {}
	end
	game.Players.LocalPlayer:GetAttributeChangedSignal("FriendBoost"):Connect(function() -- Line 152
		print(`FriendBoostChanged:{game.Players.LocalPlayer:GetAttribute("FriendBoost")}`)
	end)
end)
return module_upvr





-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:58:14
-- Luau version 6, Types version 3
-- Time taken: 0.006755 seconds

local tbl_3 = {
	Premium = {
		Value = 5;
		Name = "Premium";
	};
	Mythical = {
		Value = 4;
		Name = "Mythical";
	};
	Legendary = {
		Value = 3;
		Name = "Legendary";
	};
	Rare = {
		Value = 2;
		Name = "Rare";
	};
	Uncommon = {
		Value = 1;
		Name = "Uncommon";
	};
	Common = {
		Value = 0;
		Name = "Common";
	};
}
local DragonNames_upvr = require(game.ReplicatedStorage.Modules.Asset.DragonNames)
local tbl_4 = {
	M1 = {
		Images = {
			["845x845"] = "rbxassetid://18522363952";
			["34x34"] = "rbxassetid://110722339497487";
			["100x100"] = "rbxassetid://124422403020828";
		};
		Text = "Can M1";
	};
	Elemental = {
		Images = {
			["845x845"] = "rbxassetid://18522364171";
			["34x34"] = "rbxassetid://99096073700387";
			["100x100"] = "rbxassetid://116857012834974";
		};
		Text = "Immune to weak attacks";
	};
	Transformation = {
		Images = {
			["845x845"] = "rbxassetid://18522364352";
			["34x34"] = "rbxassetid://116255990226292";
			["100x100"] = "rbxassetid://85635919480021";
		};
		Text = "Can transform";
	};
	Awakening = {
		Images = {
			["845x845"] = "rbxassetid://18556567876";
			["34x34"] = "rbxassetid://138098911321101";
			["100x100"] = "rbxassetid://93842515161395";
		};
		Text = "Unlockable awakening";
	};
}
local tbl_2_upvr = {}
for i, v in pairs({
	["Rocket-Rocket"] = {
		Rarity = tbl_3.Common;
		Description = "Grants explosive movement abilities, allowing quick travel and attacks.";
	};
	["Spin-Spin"] = {
		Rarity = tbl_3.Common;
		Description = "Provides spinning attacks which will injure enemies with razor sharp wind slashes.";
	};
	["Blade-Blade"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user a body of blades, offering immunity to sword attacks and sharp striking abilities.";
		Elements = {
			Elemental = {
				Text = "Immune to sword attacks";
			};
			M1 = {};
		};
	};
	["Spring-Spring"] = {
		Rarity = tbl_3.Common;
		Description = "Offers spring-like movement and bouncing attacks.";
	};
	["Bomb-Bomb"] = {
		Rarity = tbl_3.Common;
		Description = "Provides the user with a wide range of explosive attacks.";
	};
	["Smoke-Smoke"] = {
		Rarity = tbl_3.Common;
		Description = "Offers the user an arsenal of smoke attacks, and is useful for grinding as a new player.";
		Elements = {
			Elemental = {};
		};
	};
	["Spike-Spike"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user sharp spikes on their body, full of offensive attacks skills.";
	};
	["Flame-Flame"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Enables the user to control and create fire, forcing enemies to steer clear if you don't want to burn.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Falcon-Falcon"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Gives the user wings, and bird-like attacks.";
	};
	["Ice-Ice"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Allows the user to manipulate ice, freezing their foes in place.";
		Elements = {
			M1 = {};
			Elemental = {};
			Awakening = {};
		};
	};
	["Sand-Sand"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Grants control over sand, with abilities to trap and attack.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Dark-Dark"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Provides darkness-based abilities which pull enemies in closer to you.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Diamond-Diamond"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Turns the user into diamond, enhancing defense and providing sharp attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Light-Light"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants light-speed movement and powerful light-based attacks.";
		Elements = {
			Elemental = {};
			M1 = {};
			Awakening = {};
		};
	};
	["Rubber-Rubber"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants the user a rubber body, immune to electric attacks and stretchy enough to deal a barrage of offensive attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Barrier-Barrier"] = {
		Rarity = tbl_3.Rare;
		Description = " Creates barriers for defense and can trap enemies.";
	};
	["Ghost-Ghost"] = {
		Rarity = tbl_3.Rare;
		Description = "Allows the user to transcend the barrier between life and death, granting an extra life and paranormal abilities.";
	};
	["Magma-Magma"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants magma-based attacks that deal high damage and burn enemies.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Quake-Quake"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides the ability to create shockwaves, dealing massive area damage.";
		Elements = {
			Awakening = {};
		};
	};
	["Buddha-Buddha"] = {
		Rarity = tbl_3.Legendary;
		Description = "Transforms the user into a giant Buddha, increasing the users size, power, and defense, making it perfect for farming.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {};
		};
	};
	["Love-Love"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use charming abilities to debuff enemies, and to summon your Besto Friendo.";
	};
	["Spider-Spider"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants spider-like abilities, including web attacks and agility.";
		Elements = {
			Awakening = {};
		};
	};
	["Sound-Sound"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use instrument based attacks, or ride along sheets of music to power-up this Fruit. ";
	};
	["Phoenix-Phoenix"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants regenerative abilities, powerful fire-based attacks, and the ability to transform into full body Phoenix.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Portal-Portal"] = {
		Rarity = tbl_3.Legendary;
		Description = "Allows the user to instantly travel to any location, or create a portal to a dimension of their own.";
		Elements = {
			M1 = {};
		};
	};
	["Rumble-Rumble"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides electric-based attacks, which have stun based effects.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Pain-Pain"] = {
		Rarity = tbl_3.Legendary;
		Description = "Inflicts pain-based attacks, causing damage over time.";
	};
	["Blizzard-Blizzard"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants control over powerful ice storms, which can be used to blind your enemies. ";
		Elements = {
			Elemental = {};
		};
	};
	["Gravity-Gravity"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to manipulate gravity, controlling the battlefield.";
	};
	["Mammoth-Mammoth"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mammoth, providing strength and size.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["T-Rex-T-Rex"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a T-Rex, granting powerful close-range attacks.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	["Dough-Dough"] = {
		Rarity = tbl_3.Mythical;
		Description = "Provides sticky and flexible dough-based attacks.";
		Elements = {
			Awakening = {};
			Elemental = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Shadow-Shadow"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants life-leeching abilities, useful for tactical takedowns of your enemies.";
	};
	["Venom-Venom"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a venomous hydra, granting the user poison-based attacks that damage over time.";
		Elements = {
			Transformation = {};
		};
	};
	["Control-Control"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to control objects and enemies within a specified area.";
	};
	["Gas-Gas"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to exhale clouds of explosive gas and transform into a powerful gaseous knight.";
		Elements = {
			Transformation = {};
			M1 = {};
			Elemental = {};
		};
	};
	["Spirit-Spirit"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants the user the ability to manipulate spirits, which can offer the user heavenly buffs to themselves or disastrous traps to their enemies.";
		Elements = {
			M1 = {};
		};
	};
	["Yeti-Yeti"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a hulking snow beast with cold attacks and ground-shaking strength.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Leopard-Leopard"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a leopard, granting enhanced agility and powerful melee attacks.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Kitsune-Kitsune"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants fox-like abilities, with amazing agility and blue fire-based attacks. Damage enemies to fully transform into the mythical Kitsune.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	[DragonNames_upvr.Permanent] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mighty dragon, allowing them to rule over the skies with scorching flames.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
}) do
	local tbl = {
		Elements = {};
		Description = v.Description;
		Rarity = assert(v.Rarity);
	}
	if v.Elements then
		for i_2, v_2 in pairs(v.Elements) do
			local assert_result1 = assert(tbl_4[i_2], `Element has no ElementInfo {i_2}`)
			local tbl_5 = {}
			local Images = v_2.Images
			if not Images then
				Images = assert_result1.Images
			end
			tbl_5.Images = Images
			Images = v_2.Text
			local var112 = Images
			if not var112 then
				var112 = assert_result1.Text
			end
			tbl_5.Text = var112
			tbl.Elements[i_2] = tbl_5
		end
	end
	tbl_2_upvr[i] = tbl
end
function get(arg1) -- Line 399
	--[[ Upvalues[2]:
		[1]: tbl_2_upvr (readonly)
		[2]: DragonNames_upvr (readonly)
	]]
	local var113
	if not tbl_2_upvr[arg1] and (var113 == DragonNames_upvr.West or var113 == DragonNames_upvr.East) then
		var113 = DragonNames_upvr.Permanent
	end
	return assert(tbl_2_upvr[var113], var113)
end
return {
	List = tbl_2_upvr;
	Elements = tbl_4;
	getNames = function() -- Line 416, Named "getNames"
		--[[ Upvalues[1]:
			[1]: tbl_2_upvr (readonly)
		]]
		local module = {}
		for i_3, _ in pairs(tbl_2_upvr) do
			table.insert(module, i_3)
		end
		return module
	end;
	Get = function(arg1, arg2) -- Line 423, Named "Get"
		return get(arg2)
	end;
	TryGet = function(arg1, arg2) -- Line 426, Named "TryGet"
		local var123_upvw
		local _, _ = pcall(function() -- Line 428
			--[[ Upvalues[2]:
				[1]: var123_upvw (read and write)
				[2]: arg2 (readonly)
			]]
			var123_upvw = get(arg2)
		end)
		return var123_upvw
	end;
}





-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:58:14
-- Luau version 6, Types version 3
-- Time taken: 0.006755 seconds

local tbl_3 = {
	Premium = {
		Value = 5;
		Name = "Premium";
	};
	Mythical = {
		Value = 4;
		Name = "Mythical";
	};
	Legendary = {
		Value = 3;
		Name = "Legendary";
	};
	Rare = {
		Value = 2;
		Name = "Rare";
	};
	Uncommon = {
		Value = 1;
		Name = "Uncommon";
	};
	Common = {
		Value = 0;
		Name = "Common";
	};
}
local DragonNames_upvr = require(game.ReplicatedStorage.Modules.Asset.DragonNames)
local tbl_4 = {
	M1 = {
		Images = {
			["845x845"] = "rbxassetid://18522363952";
			["34x34"] = "rbxassetid://110722339497487";
			["100x100"] = "rbxassetid://124422403020828";
		};
		Text = "Can M1";
	};
	Elemental = {
		Images = {
			["845x845"] = "rbxassetid://18522364171";
			["34x34"] = "rbxassetid://99096073700387";
			["100x100"] = "rbxassetid://116857012834974";
		};
		Text = "Immune to weak attacks";
	};
	Transformation = {
		Images = {
			["845x845"] = "rbxassetid://18522364352";
			["34x34"] = "rbxassetid://116255990226292";
			["100x100"] = "rbxassetid://85635919480021";
		};
		Text = "Can transform";
	};
	Awakening = {
		Images = {
			["845x845"] = "rbxassetid://18556567876";
			["34x34"] = "rbxassetid://138098911321101";
			["100x100"] = "rbxassetid://93842515161395";
		};
		Text = "Unlockable awakening";
	};
}
local tbl_2_upvr = {}
for i, v in pairs({
	["Rocket-Rocket"] = {
		Rarity = tbl_3.Common;
		Description = "Grants explosive movement abilities, allowing quick travel and attacks.";
	};
	["Spin-Spin"] = {
		Rarity = tbl_3.Common;
		Description = "Provides spinning attacks which will injure enemies with razor sharp wind slashes.";
	};
	["Blade-Blade"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user a body of blades, offering immunity to sword attacks and sharp striking abilities.";
		Elements = {
			Elemental = {
				Text = "Immune to sword attacks";
			};
			M1 = {};
		};
	};
	["Spring-Spring"] = {
		Rarity = tbl_3.Common;
		Description = "Offers spring-like movement and bouncing attacks.";
	};
	["Bomb-Bomb"] = {
		Rarity = tbl_3.Common;
		Description = "Provides the user with a wide range of explosive attacks.";
	};
	["Smoke-Smoke"] = {
		Rarity = tbl_3.Common;
		Description = "Offers the user an arsenal of smoke attacks, and is useful for grinding as a new player.";
		Elements = {
			Elemental = {};
		};
	};
	["Spike-Spike"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user sharp spikes on their body, full of offensive attacks skills.";
	};
	["Flame-Flame"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Enables the user to control and create fire, forcing enemies to steer clear if you don't want to burn.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Falcon-Falcon"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Gives the user wings, and bird-like attacks.";
	};
	["Ice-Ice"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Allows the user to manipulate ice, freezing their foes in place.";
		Elements = {
			M1 = {};
			Elemental = {};
			Awakening = {};
		};
	};
	["Sand-Sand"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Grants control over sand, with abilities to trap and attack.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Dark-Dark"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Provides darkness-based abilities which pull enemies in closer to you.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Diamond-Diamond"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Turns the user into diamond, enhancing defense and providing sharp attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Light-Light"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants light-speed movement and powerful light-based attacks.";
		Elements = {
			Elemental = {};
			M1 = {};
			Awakening = {};
		};
	};
	["Rubber-Rubber"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants the user a rubber body, immune to electric attacks and stretchy enough to deal a barrage of offensive attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Barrier-Barrier"] = {
		Rarity = tbl_3.Rare;
		Description = " Creates barriers for defense and can trap enemies.";
	};
	["Ghost-Ghost"] = {
		Rarity = tbl_3.Rare;
		Description = "Allows the user to transcend the barrier between life and death, granting an extra life and paranormal abilities.";
	};
	["Magma-Magma"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants magma-based attacks that deal high damage and burn enemies.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Quake-Quake"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides the ability to create shockwaves, dealing massive area damage.";
		Elements = {
			Awakening = {};
		};
	};
	["Buddha-Buddha"] = {
		Rarity = tbl_3.Legendary;
		Description = "Transforms the user into a giant Buddha, increasing the users size, power, and defense, making it perfect for farming.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {};
		};
	};
	["Love-Love"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use charming abilities to debuff enemies, and to summon your Besto Friendo.";
	};
	["Spider-Spider"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants spider-like abilities, including web attacks and agility.";
		Elements = {
			Awakening = {};
		};
	};
	["Sound-Sound"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use instrument based attacks, or ride along sheets of music to power-up this Fruit. ";
	};
	["Phoenix-Phoenix"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants regenerative abilities, powerful fire-based attacks, and the ability to transform into full body Phoenix.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Portal-Portal"] = {
		Rarity = tbl_3.Legendary;
		Description = "Allows the user to instantly travel to any location, or create a portal to a dimension of their own.";
		Elements = {
			M1 = {};
		};
	};
	["Rumble-Rumble"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides electric-based attacks, which have stun based effects.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Pain-Pain"] = {
		Rarity = tbl_3.Legendary;
		Description = "Inflicts pain-based attacks, causing damage over time.";
	};
	["Blizzard-Blizzard"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants control over powerful ice storms, which can be used to blind your enemies. ";
		Elements = {
			Elemental = {};
		};
	};
	["Gravity-Gravity"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to manipulate gravity, controlling the battlefield.";
	};
	["Mammoth-Mammoth"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mammoth, providing strength and size.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["T-Rex-T-Rex"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a T-Rex, granting powerful close-range attacks.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	["Dough-Dough"] = {
		Rarity = tbl_3.Mythical;
		Description = "Provides sticky and flexible dough-based attacks.";
		Elements = {
			Awakening = {};
			Elemental = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Shadow-Shadow"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants life-leeching abilities, useful for tactical takedowns of your enemies.";
	};
	["Venom-Venom"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a venomous hydra, granting the user poison-based attacks that damage over time.";
		Elements = {
			Transformation = {};
		};
	};
	["Control-Control"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to control objects and enemies within a specified area.";
	};
	["Gas-Gas"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to exhale clouds of explosive gas and transform into a powerful gaseous knight.";
		Elements = {
			Transformation = {};
			M1 = {};
			Elemental = {};
		};
	};
	["Spirit-Spirit"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants the user the ability to manipulate spirits, which can offer the user heavenly buffs to themselves or disastrous traps to their enemies.";
		Elements = {
			M1 = {};
		};
	};
	["Yeti-Yeti"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a hulking snow beast with cold attacks and ground-shaking strength.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Leopard-Leopard"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a leopard, granting enhanced agility and powerful melee attacks.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Kitsune-Kitsune"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants fox-like abilities, with amazing agility and blue fire-based attacks. Damage enemies to fully transform into the mythical Kitsune.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	[DragonNames_upvr.Permanent] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mighty dragon, allowing them to rule over the skies with scorching flames.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
}) do
	local tbl = {
		Elements = {};
		Description = v.Description;
		Rarity = assert(v.Rarity);
	}
	if v.Elements then
		for i_2, v_2 in pairs(v.Elements) do
			local assert_result1 = assert(tbl_4[i_2], `Element has no ElementInfo {i_2}`)
			local tbl_5 = {}
			local Images = v_2.Images
			if not Images then
				Images = assert_result1.Images
			end
			tbl_5.Images = Images
			Images = v_2.Text
			local var112 = Images
			if not var112 then
				var112 = assert_result1.Text
			end
			tbl_5.Text = var112
			tbl.Elements[i_2] = tbl_5
		end
	end
	tbl_2_upvr[i] = tbl
end
function get(arg1) -- Line 399
	--[[ Upvalues[2]:
		[1]: tbl_2_upvr (readonly)
		[2]: DragonNames_upvr (readonly)
	]]
	local var113
	if not tbl_2_upvr[arg1] and (var113 == DragonNames_upvr.West or var113 == DragonNames_upvr.East) then
		var113 = DragonNames_upvr.Permanent
	end
	return assert(tbl_2_upvr[var113], var113)
end
return {
	List = tbl_2_upvr;
	Elements = tbl_4;
	getNames = function() -- Line 416, Named "getNames"
		--[[ Upvalues[1]:
			[1]: tbl_2_upvr (readonly)
		]]
		local module = {}
		for i_3, _ in pairs(tbl_2_upvr) do
			table.insert(module, i_3)
		end
		return module
	end;
	Get = function(arg1, arg2) -- Line 423, Named "Get"
		return get(arg2)
	end;
	TryGet = function(arg1, arg2) -- Line 426, Named "TryGet"
		local var123_upvw
		local _, _ = pcall(function() -- Line 428
			--[[ Upvalues[2]:
				[1]: var123_upvw (read and write)
				[2]: arg2 (readonly)
			]]
			var123_upvw = get(arg2)
		end)
		return var123_upvw
	end;
}






-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:58:14
-- Luau version 6, Types version 3
-- Time taken: 0.006755 seconds

local tbl_3 = {
	Premium = {
		Value = 5;
		Name = "Premium";
	};
	Mythical = {
		Value = 4;
		Name = "Mythical";
	};
	Legendary = {
		Value = 3;
		Name = "Legendary";
	};
	Rare = {
		Value = 2;
		Name = "Rare";
	};
	Uncommon = {
		Value = 1;
		Name = "Uncommon";
	};
	Common = {
		Value = 0;
		Name = "Common";
	};
}
local DragonNames_upvr = require(game.ReplicatedStorage.Modules.Asset.DragonNames)
local tbl_4 = {
	M1 = {
		Images = {
			["845x845"] = "rbxassetid://18522363952";
			["34x34"] = "rbxassetid://110722339497487";
			["100x100"] = "rbxassetid://124422403020828";
		};
		Text = "Can M1";
	};
	Elemental = {
		Images = {
			["845x845"] = "rbxassetid://18522364171";
			["34x34"] = "rbxassetid://99096073700387";
			["100x100"] = "rbxassetid://116857012834974";
		};
		Text = "Immune to weak attacks";
	};
	Transformation = {
		Images = {
			["845x845"] = "rbxassetid://18522364352";
			["34x34"] = "rbxassetid://116255990226292";
			["100x100"] = "rbxassetid://85635919480021";
		};
		Text = "Can transform";
	};
	Awakening = {
		Images = {
			["845x845"] = "rbxassetid://18556567876";
			["34x34"] = "rbxassetid://138098911321101";
			["100x100"] = "rbxassetid://93842515161395";
		};
		Text = "Unlockable awakening";
	};
}
local tbl_2_upvr = {}
for i, v in pairs({
	["Rocket-Rocket"] = {
		Rarity = tbl_3.Common;
		Description = "Grants explosive movement abilities, allowing quick travel and attacks.";
	};
	["Spin-Spin"] = {
		Rarity = tbl_3.Common;
		Description = "Provides spinning attacks which will injure enemies with razor sharp wind slashes.";
	};
	["Blade-Blade"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user a body of blades, offering immunity to sword attacks and sharp striking abilities.";
		Elements = {
			Elemental = {
				Text = "Immune to sword attacks";
			};
			M1 = {};
		};
	};
	["Spring-Spring"] = {
		Rarity = tbl_3.Common;
		Description = "Offers spring-like movement and bouncing attacks.";
	};
	["Bomb-Bomb"] = {
		Rarity = tbl_3.Common;
		Description = "Provides the user with a wide range of explosive attacks.";
	};
	["Smoke-Smoke"] = {
		Rarity = tbl_3.Common;
		Description = "Offers the user an arsenal of smoke attacks, and is useful for grinding as a new player.";
		Elements = {
			Elemental = {};
		};
	};
	["Spike-Spike"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user sharp spikes on their body, full of offensive attacks skills.";
	};
	["Flame-Flame"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Enables the user to control and create fire, forcing enemies to steer clear if you don't want to burn.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Falcon-Falcon"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Gives the user wings, and bird-like attacks.";
	};
	["Ice-Ice"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Allows the user to manipulate ice, freezing their foes in place.";
		Elements = {
			M1 = {};
			Elemental = {};
			Awakening = {};
		};
	};
	["Sand-Sand"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Grants control over sand, with abilities to trap and attack.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Dark-Dark"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Provides darkness-based abilities which pull enemies in closer to you.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Diamond-Diamond"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Turns the user into diamond, enhancing defense and providing sharp attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Light-Light"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants light-speed movement and powerful light-based attacks.";
		Elements = {
			Elemental = {};
			M1 = {};
			Awakening = {};
		};
	};
	["Rubber-Rubber"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants the user a rubber body, immune to electric attacks and stretchy enough to deal a barrage of offensive attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Barrier-Barrier"] = {
		Rarity = tbl_3.Rare;
		Description = " Creates barriers for defense and can trap enemies.";
	};
	["Ghost-Ghost"] = {
		Rarity = tbl_3.Rare;
		Description = "Allows the user to transcend the barrier between life and death, granting an extra life and paranormal abilities.";
	};
	["Magma-Magma"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants magma-based attacks that deal high damage and burn enemies.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Quake-Quake"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides the ability to create shockwaves, dealing massive area damage.";
		Elements = {
			Awakening = {};
		};
	};
	["Buddha-Buddha"] = {
		Rarity = tbl_3.Legendary;
		Description = "Transforms the user into a giant Buddha, increasing the users size, power, and defense, making it perfect for farming.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {};
		};
	};
	["Love-Love"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use charming abilities to debuff enemies, and to summon your Besto Friendo.";
	};
	["Spider-Spider"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants spider-like abilities, including web attacks and agility.";
		Elements = {
			Awakening = {};
		};
	};
	["Sound-Sound"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use instrument based attacks, or ride along sheets of music to power-up this Fruit. ";
	};
	["Phoenix-Phoenix"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants regenerative abilities, powerful fire-based attacks, and the ability to transform into full body Phoenix.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Portal-Portal"] = {
		Rarity = tbl_3.Legendary;
		Description = "Allows the user to instantly travel to any location, or create a portal to a dimension of their own.";
		Elements = {
			M1 = {};
		};
	};
	["Rumble-Rumble"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides electric-based attacks, which have stun based effects.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Pain-Pain"] = {
		Rarity = tbl_3.Legendary;
		Description = "Inflicts pain-based attacks, causing damage over time.";
	};
	["Blizzard-Blizzard"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants control over powerful ice storms, which can be used to blind your enemies. ";
		Elements = {
			Elemental = {};
		};
	};
	["Gravity-Gravity"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to manipulate gravity, controlling the battlefield.";
	};
	["Mammoth-Mammoth"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mammoth, providing strength and size.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["T-Rex-T-Rex"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a T-Rex, granting powerful close-range attacks.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	["Dough-Dough"] = {
		Rarity = tbl_3.Mythical;
		Description = "Provides sticky and flexible dough-based attacks.";
		Elements = {
			Awakening = {};
			Elemental = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Shadow-Shadow"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants life-leeching abilities, useful for tactical takedowns of your enemies.";
	};
	["Venom-Venom"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a venomous hydra, granting the user poison-based attacks that damage over time.";
		Elements = {
			Transformation = {};
		};
	};
	["Control-Control"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to control objects and enemies within a specified area.";
	};
	["Gas-Gas"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to exhale clouds of explosive gas and transform into a powerful gaseous knight.";
		Elements = {
			Transformation = {};
			M1 = {};
			Elemental = {};
		};
	};
	["Spirit-Spirit"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants the user the ability to manipulate spirits, which can offer the user heavenly buffs to themselves or disastrous traps to their enemies.";
		Elements = {
			M1 = {};
		};
	};
	["Yeti-Yeti"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a hulking snow beast with cold attacks and ground-shaking strength.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Leopard-Leopard"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a leopard, granting enhanced agility and powerful melee attacks.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Kitsune-Kitsune"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants fox-like abilities, with amazing agility and blue fire-based attacks. Damage enemies to fully transform into the mythical Kitsune.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	[DragonNames_upvr.Permanent] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mighty dragon, allowing them to rule over the skies with scorching flames.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
}) do
	local tbl = {
		Elements = {};
		Description = v.Description;
		Rarity = assert(v.Rarity);
	}
	if v.Elements then
		for i_2, v_2 in pairs(v.Elements) do
			local assert_result1 = assert(tbl_4[i_2], `Element has no ElementInfo {i_2}`)
			local tbl_5 = {}
			local Images = v_2.Images
			if not Images then
				Images = assert_result1.Images
			end
			tbl_5.Images = Images
			Images = v_2.Text
			local var112 = Images
			if not var112 then
				var112 = assert_result1.Text
			end
			tbl_5.Text = var112
			tbl.Elements[i_2] = tbl_5
		end
	end
	tbl_2_upvr[i] = tbl
end
function get(arg1) -- Line 399
	--[[ Upvalues[2]:
		[1]: tbl_2_upvr (readonly)
		[2]: DragonNames_upvr (readonly)
	]]
	local var113
	if not tbl_2_upvr[arg1] and (var113 == DragonNames_upvr.West or var113 == DragonNames_upvr.East) then
		var113 = DragonNames_upvr.Permanent
	end
	return assert(tbl_2_upvr[var113], var113)
end
return {
	List = tbl_2_upvr;
	Elements = tbl_4;
	getNames = function() -- Line 416, Named "getNames"
		--[[ Upvalues[1]:
			[1]: tbl_2_upvr (readonly)
		]]
		local module = {}
		for i_3, _ in pairs(tbl_2_upvr) do
			table.insert(module, i_3)
		end
		return module
	end;
	Get = function(arg1, arg2) -- Line 423, Named "Get"
		return get(arg2)
	end;
	TryGet = function(arg1, arg2) -- Line 426, Named "TryGet"
		local var123_upvw
		local _, _ = pcall(function() -- Line 428
			--[[ Upvalues[2]:
				[1]: var123_upvw (read and write)
				[2]: arg2 (readonly)
			]]
			var123_upvw = get(arg2)
		end)
		return var123_upvw
	end;
}










-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:59:01
-- Luau version 6, Types version 3
-- Time taken: 0.003788 seconds

local module_upvr = {}
local function pagesToTable_upvr(arg1) -- Line 13, Named "pagesToTable"
	local module_upvr_2 = {}
	local var3_upvw = 1
	local var4_upvw = false
	repeat
		local pcall_result1, pcall_result2_2 = pcall(function() -- Line 21
			--[[ Upvalues[4]:
				[1]: module_upvr_2 (readonly)
				[2]: var3_upvw (read and write)
				[3]: arg1 (readonly)
				[4]: var4_upvw (read and write)
			]]
			module_upvr_2[var3_upvw] = arg1:GetCurrentPage()
			if arg1.IsFinished then
				var4_upvw = true
				return true
			end
			arg1:AdvanceToNextPageAsync()
			return true
		end)
		local var8
		if pcall_result1 then
			if not var4_upvw then
				var3_upvw += 1
				-- KONSTANTWARNING: GOTO [29] #26
			end
		else
			var8 += 1
			print(`FriendFinderError: {pcall_result2_2}:{var8}/{5}`)
		end
	until var4_upvw and var8 == 5
	return module_upvr_2
end
local function _(arg1) -- Line 47, Named "iterPageItems"
	--[[ Upvalues[1]:
		[1]: pagesToTable_upvr (readonly)
	]]
	local pagesToTable_upvr_result1_upvr = pagesToTable_upvr(arg1)
	local var11_upvw = 1
	local len_upvr = #pagesToTable_upvr_result1_upvr
	return coroutine.wrap(function() -- Line 55
		--[[ Upvalues[3]:
			[1]: var11_upvw (read and write)
			[2]: len_upvr (readonly)
			[3]: pagesToTable_upvr_result1_upvr (readonly)
		]]
		while var11_upvw <= len_upvr do
			for _, v in ipairs(pagesToTable_upvr_result1_upvr[var11_upvw]) do
				coroutine.yield(v, var11_upvw)
			end
			var11_upvw += 1
		end
	end)
end
local var18_upvw = 1
local var19_upvw
local UserId_upvr = game.Players.LocalPlayer.UserId
function module_upvr.GetFriendsAsync(arg1, arg2) -- Line 68
	--[[ Upvalues[4]:
		[1]: var18_upvw (read and write)
		[2]: var19_upvw (read and write)
		[3]: UserId_upvr (readonly)
		[4]: pagesToTable_upvr (readonly)
	]]
	if (arg2 or math.huge) < tick() - var18_upvw or not var19_upvw then
		var18_upvw = tick()
		local tbl = {}
		local var23_upvw
		local pcall_result1_2, pcall_result2 = pcall(function() -- Line 78
			--[[ Upvalues[2]:
				[1]: UserId_upvr (copied, readonly)
				[2]: var23_upvw (read and write)
			]]
			if UserId_upvr <= 0 then
				var23_upvw = game.Players:GetFriendsAsync(31265920)
			else
				var23_upvw = game.Players:GetFriendsAsync(UserId_upvr)
			end
		end)
		if not pcall_result1_2 then
			print(pcall_result2)
		elseif var23_upvw then
			local pagesToTable_result1_upvr = pagesToTable_upvr(var23_upvw)
			local var29_upvw = 1
			local len_upvr_2 = #pagesToTable_result1_upvr
			for i_4 in coroutine.wrap(function() -- Line 55
				--[[ Upvalues[3]:
					[1]: var29_upvw (read and write)
					[2]: len_upvr_2 (readonly)
					[3]: pagesToTable_result1_upvr (readonly)
				]]
				while var29_upvw <= len_upvr_2 do
					for _, v_3 in ipairs(pagesToTable_result1_upvr[var29_upvw]) do
						coroutine.yield(v_3, var29_upvw)
					end
					var29_upvw += 1
				end
			end) do
				local function INLINED() -- Internal function, doesn't exist in bytecode
					tbl[i_4.Id] = tbl_2
					tbl_2.UserId = i_4.Id
					tbl_2.DisplayName = i_4.DisplayName
					tbl_2.Name = i_4.Username
					local tbl_2 = {}
					return 200 <= 0 + 1
				end
				if i_4.Id == UserId_upvr or INLINED() then break end
			end
			var19_upvw = tbl
		end
	end
	return var19_upvw
end
local Promise_upvr = require(game.ReplicatedStorage:WaitForChild("Modules").Util.Promise)
function module_upvr.GetFriends(arg1, arg2) -- Line 114
	--[[ Upvalues[2]:
		[1]: Promise_upvr (readonly)
		[2]: module_upvr (readonly)
	]]
	return Promise_upvr.new(function(arg1_2, arg2_2, arg3) -- Line 115
		--[[ Upvalues[2]:
			[1]: module_upvr (copied, readonly)
			[2]: arg2 (readonly)
		]]
		-- KONSTANTERROR: [19] 18. Error Block 5 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [19] 18. Error Block 5 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [0] 1. Error Block 19 start (CF ANALYSIS FAILED)
		-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.3]
		if not nil then
			-- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [19.4]
			if not nil then
				-- KONSTANTWARNING: GOTO [6] #7
			end
			-- KONSTANTWARNING: GOTO [21] #20
		end
		-- KONSTANTERROR: [0] 1. Error Block 19 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [21] 20. Error Block 16 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		if not nil then
			local var43
			if not var43 then
				var43 = {}
			end
			arg1_2(var43)
		end
		-- KONSTANTERROR: [21] 20. Error Block 16 end (CF ANALYSIS FAILED)
	end)
end
task.spawn(function() -- Line 138
	--[[ Upvalues[1]:
		[1]: module_upvr (readonly)
	]]
	game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("FriendFinder").OnClientInvoke = function() -- Line 139
		--[[ Upvalues[1]:
			[1]: module_upvr (copied, readonly)
		]]
		local var50
		if not var50 then
			var50 = {}
		end
		for _, v_2 in pairs(game.Players:GetPlayers()) do
			if var50[v_2.UserId] then
				table.insert({}, v_2)
			end
		end
		-- KONSTANTERROR: Expression was reused, decompilation is incorrect
		return {}
	end
	game.Players.LocalPlayer:GetAttributeChangedSignal("FriendBoost"):Connect(function() -- Line 152
		print(`FriendBoostChanged:{game.Players.LocalPlayer:GetAttribute("FriendBoost")}`)
	end)
end)
return module_upv



-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:58:14
-- Luau version 6, Types version 3
-- Time taken: 0.006755 seconds

local tbl_3 = {
	Premium = {
		Value = 5;
		Name = "Premium";
	};
	Mythical = {
		Value = 4;
		Name = "Mythical";
	};
	Legendary = {
		Value = 3;
		Name = "Legendary";
	};
	Rare = {
		Value = 2;
		Name = "Rare";
	};
	Uncommon = {
		Value = 1;
		Name = "Uncommon";
	};
	Common = {
		Value = 0;
		Name = "Common";
	};
}
local DragonNames_upvr = require(game.ReplicatedStorage.Modules.Asset.DragonNames)
local tbl_4 = {
	M1 = {
		Images = {
			["845x845"] = "rbxassetid://18522363952";
			["34x34"] = "rbxassetid://110722339497487";
			["100x100"] = "rbxassetid://124422403020828";
		};
		Text = "Can M1";
	};
	Elemental = {
		Images = {
			["845x845"] = "rbxassetid://18522364171";
			["34x34"] = "rbxassetid://99096073700387";
			["100x100"] = "rbxassetid://116857012834974";
		};
		Text = "Immune to weak attacks";
	};
	Transformation = {
		Images = {
			["845x845"] = "rbxassetid://18522364352";
			["34x34"] = "rbxassetid://116255990226292";
			["100x100"] = "rbxassetid://85635919480021";
		};
		Text = "Can transform";
	};
	Awakening = {
		Images = {
			["845x845"] = "rbxassetid://18556567876";
			["34x34"] = "rbxassetid://138098911321101";
			["100x100"] = "rbxassetid://93842515161395";
		};
		Text = "Unlockable awakening";
	};
}
local tbl_2_upvr = {}
for i, v in pairs({
	["Rocket-Rocket"] = {
		Rarity = tbl_3.Common;
		Description = "Grants explosive movement abilities, allowing quick travel and attacks.";
	};
	["Spin-Spin"] = {
		Rarity = tbl_3.Common;
		Description = "Provides spinning attacks which will injure enemies with razor sharp wind slashes.";
	};
	["Blade-Blade"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user a body of blades, offering immunity to sword attacks and sharp striking abilities.";
		Elements = {
			Elemental = {
				Text = "Immune to sword attacks";
			};
			M1 = {};
		};
	};
	["Spring-Spring"] = {
		Rarity = tbl_3.Common;
		Description = "Offers spring-like movement and bouncing attacks.";
	};
	["Bomb-Bomb"] = {
		Rarity = tbl_3.Common;
		Description = "Provides the user with a wide range of explosive attacks.";
	};
	["Smoke-Smoke"] = {
		Rarity = tbl_3.Common;
		Description = "Offers the user an arsenal of smoke attacks, and is useful for grinding as a new player.";
		Elements = {
			Elemental = {};
		};
	};
	["Spike-Spike"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user sharp spikes on their body, full of offensive attacks skills.";
	};
	["Flame-Flame"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Enables the user to control and create fire, forcing enemies to steer clear if you don't want to burn.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Falcon-Falcon"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Gives the user wings, and bird-like attacks.";
	};
	["Ice-Ice"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Allows the user to manipulate ice, freezing their foes in place.";
		Elements = {
			M1 = {};
			Elemental = {};
			Awakening = {};
		};
	};
	["Sand-Sand"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Grants control over sand, with abilities to trap and attack.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Dark-Dark"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Provides darkness-based abilities which pull enemies in closer to you.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Diamond-Diamond"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Turns the user into diamond, enhancing defense and providing sharp attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Light-Light"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants light-speed movement and powerful light-based attacks.";
		Elements = {
			Elemental = {};
			M1 = {};
			Awakening = {};
		};
	};
	["Rubber-Rubber"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants the user a rubber body, immune to electric attacks and stretchy enough to deal a barrage of offensive attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Barrier-Barrier"] = {
		Rarity = tbl_3.Rare;
		Description = " Creates barriers for defense and can trap enemies.";
	};
	["Ghost-Ghost"] = {
		Rarity = tbl_3.Rare;
		Description = "Allows the user to transcend the barrier between life and death, granting an extra life and paranormal abilities.";
	};
	["Magma-Magma"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants magma-based attacks that deal high damage and burn enemies.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Quake-Quake"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides the ability to create shockwaves, dealing massive area damage.";
		Elements = {
			Awakening = {};
		};
	};
	["Buddha-Buddha"] = {
		Rarity = tbl_3.Legendary;
		Description = "Transforms the user into a giant Buddha, increasing the users size, power, and defense, making it perfect for farming.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {};
		};
	};
	["Love-Love"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use charming abilities to debuff enemies, and to summon your Besto Friendo.";
	};
	["Spider-Spider"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants spider-like abilities, including web attacks and agility.";
		Elements = {
			Awakening = {};
		};
	};
	["Sound-Sound"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use instrument based attacks, or ride along sheets of music to power-up this Fruit. ";
	};
	["Phoenix-Phoenix"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants regenerative abilities, powerful fire-based attacks, and the ability to transform into full body Phoenix.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Portal-Portal"] = {
		Rarity = tbl_3.Legendary;
		Description = "Allows the user to instantly travel to any location, or create a portal to a dimension of their own.";
		Elements = {
			M1 = {};
		};
	};
	["Rumble-Rumble"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides electric-based attacks, which have stun based effects.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Pain-Pain"] = {
		Rarity = tbl_3.Legendary;
		Description = "Inflicts pain-based attacks, causing damage over time.";
	};
	["Blizzard-Blizzard"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants control over powerful ice storms, which can be used to blind your enemies. ";
		Elements = {
			Elemental = {};
		};
	};
	["Gravity-Gravity"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to manipulate gravity, controlling the battlefield.";
	};
	["Mammoth-Mammoth"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mammoth, providing strength and size.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["T-Rex-T-Rex"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a T-Rex, granting powerful close-range attacks.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	["Dough-Dough"] = {
		Rarity = tbl_3.Mythical;
		Description = "Provides sticky and flexible dough-based attacks.";
		Elements = {
			Awakening = {};
			Elemental = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Shadow-Shadow"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants life-leeching abilities, useful for tactical takedowns of your enemies.";
	};
	["Venom-Venom"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a venomous hydra, granting the user poison-based attacks that damage over time.";
		Elements = {
			Transformation = {};
		};
	};
	["Control-Control"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to control objects and enemies within a specified area.";
	};
	["Gas-Gas"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to exhale clouds of explosive gas and transform into a powerful gaseous knight.";
		Elements = {
			Transformation = {};
			M1 = {};
			Elemental = {};
		};
	};
	["Spirit-Spirit"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants the user the ability to manipulate spirits, which can offer the user heavenly buffs to themselves or disastrous traps to their enemies.";
		Elements = {
			M1 = {};
		};
	};
	["Yeti-Yeti"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a hulking snow beast with cold attacks and ground-shaking strength.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Leopard-Leopard"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a leopard, granting enhanced agility and powerful melee attacks.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Kitsune-Kitsune"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants fox-like abilities, with amazing agility and blue fire-based attacks. Damage enemies to fully transform into the mythical Kitsune.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	[DragonNames_upvr.Permanent] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mighty dragon, allowing them to rule over the skies with scorching flames.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
}) do
	local tbl = {
		Elements = {};
		Description = v.Description;
		Rarity = assert(v.Rarity);
	}
	if v.Elements then
		for i_2, v_2 in pairs(v.Elements) do
			local assert_result1 = assert(tbl_4[i_2], `Element has no ElementInfo {i_2}`)
			local tbl_5 = {}
			local Images = v_2.Images
			if not Images then
				Images = assert_result1.Images
			end
			tbl_5.Images = Images
			Images = v_2.Text
			local var112 = Images
			if not var112 then
				var112 = assert_result1.Text
			end
			tbl_5.Text = var112
			tbl.Elements[i_2] = tbl_5
		end
	end
	tbl_2_upvr[i] = tbl
end
function get(arg1) -- Line 399
	--[[ Upvalues[2]:
		[1]: tbl_2_upvr (readonly)
		[2]: DragonNames_upvr (readonly)
	]]
	local var113
	if not tbl_2_upvr[arg1] and (var113 == DragonNames_upvr.West or var113 == DragonNames_upvr.East) then
		var113 = DragonNames_upvr.Permanent
	end
	return assert(tbl_2_upvr[var113], var113)
end
return {
	List = tbl_2_upvr;
	Elements = tbl_4;
	getNames = function() -- Line 416, Named "getNames"
		--[[ Upvalues[1]:
			[1]: tbl_2_upvr (readonly)
		]]
		local module = {}
		for i_3, _ in pairs(tbl_2_upvr) do
			table.insert(module, i_3)
		end
		return module
	end;
	Get = function(arg1, arg2) -- Line 423, Named "Get"
		return get(arg2)
	end;
	TryGet = function(arg1, arg2) -- Line 426, Named "TryGet"
		local var123_upvw
		local _, _ = pcall(function() -- Line 428
			--[[ Upvalues[2]:
				[1]: var123_upvw (read and write)
				[2]: arg2 (readonly)
			]]
			var123_upvw = get(arg2)
		end)
		return var123_upvw
	end;
}
-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2025-03-10 17:56:59
-- Luau version 6, Types version 3
-- Time taken: 0.016989 seconds

return {
	["http://www.roblox.com/asset/?id=9890739537"] = {
		["Bandanna (Black)1.png"] = {150, 0, 150, 150};
		["Bandanna (Green)1.png"] = {300, 0, 150, 150};
		["Bandanna (Red)1.png"] = {450, 0, 150, 150};
		["Bear Ears1.png"] = {750, 0, 150, 150};
		["Black Cape1.png"] = {300, 150, 150, 150};
		["Black Spikey Coat1.png"] = {450, 150, 150, 150};
		["Blue Spikey Coat1.png"] = {600, 150, 150, 150};
		["Buddy Sword1.png"] = {750, 150, 150, 150};
		["Canvander1.png"] = {150, 300, 150, 150};
		["Choppa1.png"] = {300, 300, 150, 150};
		["Coat1.png"] = {450, 300, 150, 150};
		["Cool Shades1.png"] = {600, 300, 150, 150};
		["Cutlass1.png"] = {750, 300, 150, 150};
		["D.S. Coat1.png"] = {0, 450, 150, 150};
		["Dark Blade33331.png"] = {150, 450, 150, 150};
		["Dark Coat1.png"] = {300, 450, 150, 150};
		["Dual Katana1.png"] = {0, 600, 150, 150};
		["Elf Hat1.png"] = {150, 600, 150, 150};
		["Ghoul Mask1.png"] = {450, 600, 150, 150};
		["Golden Sunhat1.png"] = {600, 600, 150, 150};
		["Hallow Scythe1.png"] = {0, 750, 150, 150};
		["Holy Crown1.png"] = {150, 750, 150, 150};
		["Hunter Cape (Black)1.png"] = {300, 750, 150, 150};
		["Hunter Cape (Green)1.png"] = {450, 750, 150, 150};
		["Hunter Cape (Red)1.png"] = {600, 750, 150, 150};
	};
	["http://www.roblox.com/asset/?id=9890740034"] = {
		["Jaw Shield1.png"] = {0, 0, 150, 150};
		["Katana1.png"] = {450, 0, 150, 150};
		["Koko1.png"] = {600, 0, 150, 150};
		["Lei1.png"] = {750, 0, 150, 150};
		["Marine Cap1.png"] = {150, 150, 150, 150};
		["Musketeer Hat1.png"] = {600, 150, 150, 150};
		["Pale Scarf1.png"] = {750, 150, 150, 150};
		["Pilot Helmet1.png"] = {0, 300, 150, 150};
		["Pink Coat1.png"] = {150, 300, 150, 150};
		["Pretty Helmet1.png"] = {750, 300, 150, 150};
		["Red Spikey Coat1.png"] = {0, 450, 150, 150};
		["Santa Hat1.png"] = {150, 600, 150, 150};
		["Swan Glasses1.png"] = {750, 600, 150, 150};
		["Swordsman Hat1.png"] = {0, 750, 150, 150};
		["Tomoe Ring1.png"] = {150, 750, 150, 150};
		["Top Hat1.png"] = {300, 750, 150, 150};
		["Usoaps Hat1.png"] = {450, 750, 150, 150};
		["Valkyrie Helm1.png"] = {600, 750, 150, 150};
		["Vice Admirals Coat1.png"] = {750, 750, 150, 150};
	};
	["http://www.roblox.com/asset/?id=9890740403"] = {
		["Bear Ears2.png"] = {150, 0, 150, 150};
		["Black Cape2.png"] = {600, 0, 150, 150};
		["Black Spikey Coat2.png"] = {750, 0, 150, 150};
		["Blue Spikey Coat2.png"] = {0, 150, 150, 150};
		["Buddy Sword2.png"] = {150, 150, 150, 150};
		["Canvander2.png"] = {450, 150, 150, 150};
		["Choppa2.png"] = {600, 150, 150, 150};
		["Coat2.png"] = {750, 150, 150, 150};
		["Cool Shades2.png"] = {0, 300, 150, 150};
		["Cutlass2.png"] = {150, 300, 150, 150};
		["D.S. Coat2.png"] = {300, 300, 150, 150};
		["Dark Blade772.png"] = {450, 300, 150, 150};
		["Dark Coat2.png"] = {600, 300, 150, 150};
		["Dual Katana2.png"] = {300, 450, 150, 150};
		["Elf Hat2.png"] = {450, 450, 150, 150};
		["Ghoul Mask2.png"] = {750, 450, 150, 150};
		["Golden Sunhat2.png"] = {0, 600, 150, 150};
		["Hallow Scythe2.png"] = {300, 600, 150, 150};
		["Holy Crown2.png"] = {450, 600, 150, 150};
		["Hunter Cape (Black)2.png"] = {600, 600, 150, 150};
		["Hunter Cape (Green)2.png"] = {750, 600, 150, 150};
		["Hunter Cape (Red)2.png"] = {0, 750, 150, 150};
		["Jaw Shield2.png"] = {300, 750, 150, 150};
		["Katana2.png"] = {750, 750, 150, 150};
	};
	["http://www.roblox.com/asset/?id=9890740808"] = {
		["Bandanna (Black)2.png"] = {150, 0, 150, 150};
		["Bandanna (Green)2.png"] = {300, 0, 150, 150};
		["Bandanna (Red)2.png"] = {450, 0, 150, 150};
		["Koko2.png"] = {600, 0, 150, 150};
		["Lei2.png"] = {750, 0, 150, 150};
		["Marine Cap2.png"] = {150, 150, 150, 150};
		["Musketeer Hat2.png"] = {600, 150, 150, 150};
		["Pale Scarf2.png"] = {750, 150, 150, 150};
		["Pilot Helmet2.png"] = {0, 300, 150, 150};
		["Pink Coat2.png"] = {150, 300, 150, 150};
		["Pretty Helmet2.png"] = {750, 300, 150, 150};
		["Red Spikey Coat2.png"] = {0, 450, 150, 150};
		["Santa Hat2.png"] = {150, 600, 150, 150};
		["Swan Glasses2.png"] = {750, 600, 150, 150};
		["Swordsman Hat2.png"] = {0, 750, 150, 150};
		["Tomoe Ring2.png"] = {150, 750, 150, 150};
		["Top Hat2.png"] = {300, 750, 150, 150};
		["Usoaps Hat2.png"] = {450, 750, 150, 150};
		["Valkyrie Helm2.png"] = {600, 750, 150, 150};
		["Vice Admirals Coat2.png"] = {750, 750, 150, 150};
	};
	["http://www.roblox.com/asset/?id=10767370656"] = {
		["Spikey Trident1.png"] = {450, 150, 150, 150};
		["Spikey Trident2.png"] = {600, 150, 150, 150};
		["Triple Dark Blade414.png"] = {300, 300, 150, 150};
		["Triple Dark Blade424.png"] = {450, 300, 150, 150};
		["Triple Katana1.png"] = {600, 300, 150, 150};
		["Triple Katana2.png"] = {0, 450, 150, 150};
		["Twin Hooks1.png"] = {0, 600, 150, 150};
		["Twin Hooks2.png"] = {150, 600, 150, 150};
		["Warrior Helmet1.png"] = {750, 150, 150, 150};
		["Warrior Helmet2.png"] = {750, 300, 150, 150};
		["Zebra Cap1.png"] = {0, 750, 150, 150};
		["Zebra Cap2.png"] = {150, 750, 150, 150};
	};
	["http://www.roblox.com/asset/?id=11920885998"] = game:GetService("HttpService"):JSONDecode("{\"Holiday Cloak1.png\":[0,0,250,250],\"Holiday Cloak2.png\":[250,0,250,250]}");
	["http://www.roblox.com/asset/?id=11914986092"] = game:GetService("HttpService"):JSONDecode("{\"Permanent Barrier-Barrier1.png\":[5,5,140,140],\"Permanent Falcon-Falcon1.png\":[155,5,140,140],\"Permanent Phoenix-Phoenix1.png\":[305,5,140,140],\"Permanent Bomb-Bomb1.png\":[455,5,140,140],\"Permanent Control-Control1.png\":[5,155,140,140],\"Permanent Dragon-Dragon1.png\":[605,155,140,140],\"Permanent Gravity-Gravity1.png\":[155,305,140,140],\"Permanent Ice-Ice1.png\":[455,305,140,140],\"Permanent Kilo-Kilo1.png\":[605,305,140,140],\"Permanent Leopard-Leopard1.png\":[5,455,140,140],\"Permanent Love-Love1.png\":[305,455,140,140],\"Permanent Paw-Paw1.png\":[605,455,140,140],\"Permanent Portal-Portal1.png\":[5,605,140,140],\"Permanent 22Quake-Quake1.png\":[155,605,140,140],\"Permanent Ghost-Ghost1.png\":[305,605,140,140],\"Permanent Rubber-Rubber1.png\":[455,605,140,140],\"Permanent 22Rumble-Rumble1.png\":[605,605,140,140],\"Permanent Sand-Sand1.png\":[755,5,140,140],\"Permanent Shadow-Shadow1.png\":[755,155,140,140],\"Permanent Smoke-Smoke1.png\":[755,305,140,140],\"Permanent Spin-Spin1.png\":[755,605,140,140],\"Permanent Spirit-Spirit1.png\":[5,755,140,140],\"Permanent Spring-Spring1.png\":[155,755,140,140],\"Permanent Venom-Venom1.png\":[455,755,140,140],\"Permanent Blizzard-Blizzard1.png\":[605,755,140,140]}");
	["http://www.roblox.com/asset/?id=10535616065"] = game:GetService("HttpService"):JSONDecode("{\"Blessed Chest1.png\":[0,0,150,150],\"Blessed Scroll1.png\":[150,0,150,150],\"Common Scroll1.png\":[0,150,150,150],\"Cursed Chest1.png\":[150,150,150,150],\"Cursed Scroll1.png\":[300,0,150,150],\"Legendary Scroll1.png\":[300,150,150,150],\"Mythical Scroll1.png\":[0,300,150,150],\"Rare Scroll1.png\":[150,300,150,150]}");
	["http://www.roblox.com/asset/?id=120117905211146"] = {
		["Holiday Gift1.png"] = {600, 0, 150, 150};
		["Mythical Holiday Gift1.png"] = {450, 0, 150, 150};
		["Rare Holiday Gift1.png"] = {300, 0, 150, 150};
		["Uncommon Holiday Gift1.png"] = {600, 0, 150, 150};
		["Admin Holiday Gift1.png"] = {150, 0, 150, 150};
		["Legendary Holiday Gift1.png"] = {0, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=10767038100"] = game:GetService("HttpService"):JSONDecode("{\"Angel Wings1.png\":[0,0,150,150],\"Blue Flower1.png\":[150,0,150,150],\"Bones1.png\":[300,0,150,150],\"Candy1.png\":[450,0,150,150],\"Conjured Cocoa1.png\":[600,0,150,150],\"Dark Fist1.png\":[0,150,150,150],\"Dark Fragment1.png\":[150,150,150,150],\"Demonic Wisp15.png\":[300,150,150,150],\"Dragon Scale1.png\":[450,150,150,150],\"Ectoplasm1.png\":[600,150,150,150],\"Fish Tail1.png\":[0,300,150,150],\"Gods Chalice1.png\":[150,300,150,150],\"Gunpowder1.png\":[300,300,150,150],\"Leather1.png\":[450,300,150,150],\"Magma Ore1.png\":[600,300,150,150],\"Scrap Metal1.png\":[0,450,150,150],\"Meteorite1.png\":[150,450,150,150],\"Mini Tusk1.png\":[300,450,150,150],\"Mirror Fractal1.png\":[450,450,150,150],\"Mystic Droplet1.png\":[600,450,150,150],\"Radioactive Material1.png\":[0,600,150,150],\"Red Flower1.png\":[150,600,150,150],\"Special Microchip1.png\":[300,600,150,150],\"Sweet Chalice1.png\":[450,600,150,150],\"Vampire Fang1.png\":[600,600,150,150],\"Yellow Flower1.png\":[750,0,150,150],\"Yeti Fur1.png\":[750,150,150,150]}");
	["http://www.roblox.com/asset/?id=10843229979"] = {
		["Alucard Fragment1.png"] = {0, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=11657531331"] = game:GetService("HttpService"):JSONDecode("{\"DefaultAuraSkin1.png\":[13,13,124,124], \"AquamarineEnhancement1.png\":[13,13,124,124],\"Confetti1.png\":[150,0,150,150],\"Party Hat1.png\":[0,150,150,150]}");
	["http://www.roblox.com/asset/?id=12547115772"] = game:GetService("HttpService"):JSONDecode("{\"Cupids Coat1.png\":[0,0,150,150],\"Cupids Coat2.png\":[150,0,150,150],\"Heart Shades1.png\":[0,150,150,150],\"Heart Shades2.png\":[150,150,150,150],\"Hearts1.png\":[300,0,150,150],\"Permanent Spider-Spider1.png\":[305,155,140,140]}");
	["http://www.roblox.com/asset/?id=12558315326"] = {
		["LightPinkEnhancement1.png"] = {0, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=15243506332"] = game:GetService("HttpService"):JSONDecode("{\"Barrier-Barrier1.png\":[0,0,150,150],\"Blizzard-Blizzard1.png\":[150,0,150,150],\"Bomb-Bomb1.png\":[300,0,150,150],\"Buddha-Buddha1.png\":[450,0,150,150],\"Blade-Blade1.png\":[600,0,150,150],\"Control-Control1.png\":[750,0,150,150],\"Dark-Dark1.png\":[0,150,150,150],\"Diamond-Diamond1.png\":[150,150,150,150],\"Dough-Dough1.png\":[300,150,150,150],\"Falcon-Falcon1.png\":[450,150,150,150],\"Flame-Flame1.png\":[600,150,150,150],\"Gravity-Gravity1.png\":[750,150,150,150],\"Ice-Ice1.png\":[0,300,150,150],\"Leopard-Leopard1.png\":[150,300,150,150],\"Light-Light1.png\":[300,300,150,150],\"Love-Love1.png\":[450,300,150,150],\"Magma-Magma1.png\":[600,300,150,150],\"Mammoth-Mammoth1.png\":[750,300,150,150],\"Pain-Pain1.png\":[0,450,150,150],\"Phoenix-Phoenix1.png\":[150,450,150,150],\"Portal-Portal1.png\":[300,450,150,150],\"Quake-Quake1.png\":[450,450,150,150],\"Ghost-Ghost1.png\":[600,450,150,150],\"Rocket-Rocket1.png\":[750,450,150,150],\"Rubber-Rubber1.png\":[0,600,150,150],\"Rumble-Rumble1.png\":[150,600,150,150],\"Sand-Sand1.png\":[300,600,150,150],\"Shadow-Shadow1.png\":[450,600,150,150],\"Smoke-Smoke1.png\":[600,600,150,150],\"Sound-Sound1.png\":[750,600,150,150],\"Spider-Spider1.png\":[0,750,150,150],\"Spike-Spike1.png\":[150,750,150,150],\"Spin-Spin1.png\":[300,750,150,150],\"Spirit-Spirit1.png\":[450,750,150,150],\"Spring-Spring1.png\":[600,750,150,150],\"Venom-Venom1.png\":[750,750,150,150]}");
	["http://www.roblox.com/asset/?id=15130813215"] = game:GetService("HttpService"):JSONDecode("{\"Leviathan Crown1.png\":[0,0,150,150],\"Leviathan Shield1.png\":[150,0,150,150],\"Shark Tooth Necklace1.png\":[0,150,150,150],\"Terror Jaw1.png\":[150,150,150,150]}");
	["http://www.roblox.com/asset/?id=15130815772"] = {
		["Shark Anchor1.png"] = {0, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=15131096922"] = {
		["Dark Blade1.png"] = {0, 0, 1050, 1050};
	};
	["http://www.roblox.com/asset/?id=15243936533"] = {
		["Triple Dark Blade1.png"] = {0, 0, 985, 985};
	};
	["http://www.roblox.com/asset/?id=15246511475"] = game:GetService("HttpService"):JSONDecode("{\"Electric Wing1.png\":[0,0,150,150],\"Fools Gold1.png\":[150,0,150,150],\"Beast Hunter1.png\":[300,0,150,150],\"Leviathan Heart1.png\":[0,150,150,150],\"Leviathan Scale1.png\":[150,150,150,150],\"Mutant Tooth1.png\":[450,150,150,150],\"Permanent Ghost-Ghost1.png\":[155,305,140,140],\"Permanent Mammoth-Mammoth1.png\":[305,305,140,140],\"Permanent Pain-Pain1.png\":[455,305,140,140],\"Permanent Rocket-Rocket1.png\":[5,455,140,140],\"Permanent Sound-Sound1.png\":[155,455,140,140],\"Shark Tooth1.png\":[300,450,150,150],\"Terror Eyes1.png\":[450,450,150,150]}");
	["http://www.roblox.com/asset/?id=15733674155"] = game:GetService("HttpService"):JSONDecode("{\"Azure Ember1.png\":[0,0,150,150],\"Fox Lamp1.png\":[150,0,150,150],\"Fox Lamp2.png\":[300,0,150,150],\"Kitsune-Kitsune1.png\":[0,150,150,150],\"Kitsune Mask1.png\":[150,150,150,150],\"Kitsune Mask2.png\":[300,150,150,150],\"T-Rex-T-Rex1.png\":[450,150,150,149],\"Kitsune Ribbon1.png\":[0,300,150,150],\"Kitsune Ribbon2.png\":[150,300,150,150],\"Permanent Kitsune-Kitsune1.png\":[305,305,140,140],\"Permanent T-Rex-T-Rex1.png\":[455,305,140,140],\"Wooden Plank1.png\":[450,0,150,150]}");
	["http://www.roblox.com/asset/?id=138945873443535"] = {
		["MysteryBoxS21.png"] = {300, 0, 150, 150};
		["UncommonBoxS21.png"] = {150, 150, 150, 150};
		["RareBoxS21.png"] = {0, 150, 150, 150};
		["LegendaryBoxS21.png"] = {0, 0, 150, 150};
		["MythicalBoxS21.png"] = {150, 0, 150, 150};
		["PremiumBoxS21.png"] = {300, 150, 150, 150};
	};
	["http://www.roblox.com/asset/?id=101328117791747"] = {
		["Permanent Buddha-Buddha1.png"] = {5, 5, 140, 140};
		["Permanent Spike-Spike1.png"] = {5, 155, 140, 140};
		["Permanent Dragon (West)-Dragon (West)1.png"] = {5, 305, 140, 140};
		["Permanent Dark-Dark1.png"] = {155, 5, 140, 140};
		["Permanent Magma-Magma1.png"] = {155, 155, 140, 140};
		["Permanent Quake-Quake1.png"] = {155, 305, 140, 140};
		["Permanent Gas-Gas1.png"] = {305, 5, 140, 140};
		["Permanent Light-Light1.png"] = {305, 155, 140, 140};
		["Permanent Rumble-Rumble1.png"] = {305, 305, 140, 140};
		["Permanent Flame-Flame1.png"] = {605, 150, 140, 140};
		["Permanent Diamond-Diamond1.png"] = {605, 300, 140, 140};
		["Dragon-Dragon1.png"] = {451, 0, 150, 150};
		["Permanent Dough-Dough1.png"] = {608, 5, 140, 140};
		["Permanent Dragon (East)-Dragon (East)1.png"] = {455, 155, 140, 140};
		["Permanent Blade-Blade1.png"] = {455, 305, 140, 140};
		["Gas-Gas1.png"] = {0, 451, 150, 150};
		["Dragon (West)-Dragon (West)1.png"] = {150, 451, 150, 150};
		["Dragon (East)-Dragon (East)1.png"] = {450, 451, 150, 150};
		["Permanent Yeti-Yeti1.png"] = {5, 610, 140, 140};
		["Yeti-Yeti1.png"] = {151, 605, 150, 150};
	};
	["http://www.roblox.com/asset/?id=119677561947394"] = {
		["Absolute Zero1.png"] = {0, 0, 150, 150};
		["Aquamarine1.png"] = {150, 0, 150, 150};
		["Blue Jeans1.png"] = {300, 0, 150, 150};
		["Bright Yellow1.png"] = {450, 0, 150, 150};
		["Dragon1.png"] = {0, 150, 150, 150};
		["Green Lizard1.png"] = {150, 150, 150, 150};
		["Heat Wave1.png"] = {300, 150, 150, 150};
		["Kitsune1.png"] = {450, 150, 150, 150};
		["Light Pink1.png"] = {0, 300, 150, 150};
		["Orange Soda1.png"] = {150, 300, 150, 150};
		["Pure Red1.png"] = {300, 300, 150, 150};
		["Plump Purple1.png"] = {450, 300, 150, 150};
		["Rainbow Saviour1.png"] = {0, 450, 150, 150};
		["Slimy Green1.png"] = {150, 450, 150, 150};
		["Snow White1.png"] = {300, 450, 150, 150};
		["Winter Sky1.png"] = {450, 450, 150, 150};
		["Yellow Sunshine1.png"] = {600, 0, 150, 150};
		["Fiery Rose1.png"] = {600, 150, 150, 150};
	};
	["http://www.roblox.com/asset/?id=82746292944375"] = {
		["ESTDSKINblack1.png"] = {0, 0, 150, 150};
		["ESTDSKINbloodmoon1.png"] = {300, 0, 150, 150};
		["ESTDSKINblue1.png"] = {450, 0, 150, 150};
		["ESTDSKINeclipse1.png"] = {0, 150, 150, 150};
		["ESTDSKINember1.png"] = {300, 150, 150, 150};
		["ESTDSKINemerald1.png"] = {0, 300, 150, 150};
		["ESTDSKINfrostbite1.png"] = {300, 300, 150, 150};
		["ESTDSKINgreen1.png"] = {450, 300, 150, 150};
		["ESTDSKINorange1.png"] = {150, 450, 150, 150};
		["ESTDSKINphoenixsky1.png"] = {300, 450, 150, 150};
		["ESTDSKINpurple1.png"] = {600, 0, 150, 150};
		["ESTDSKINred1.png"] = {600, 150, 150, 150};
		["ESTDSKINvioletnight1.png"] = {600, 300, 150, 150};
		["ESTDSKINyellow1.png"] = {600, 450, 150, 150};
		["ESTDSKINbloodmoon2.png"] = {450, 450, 150, 150};
		["ESTDSKINphoenixsky2.png"] = {450, 450, 150, 150};
		["ESTDSKINeclipse2.png"] = {150, 150, 150, 150};
		["ESTDSKINember2.png"] = {450, 150, 150, 150};
		["ESTDSKINvioletnight2.png"] = {450, 450, 150, 150};
		["ESTDSKINblack2.png"] = {150, 0, 150, 150};
		["ESTDSKINblue2.png"] = {150, 0, 150, 150};
		["ESTDSKINemerald2.png"] = {150, 300, 150, 150};
		["ESTDSKINfrostbite2.png"] = {150, 0, 150, 150};
		["ESTDSKINgreen2.png"] = {0, 450, 150, 150};
		["ESTDSKINorange2.png"] = {150, 0, 150, 150};
		["ESTDSKINpurple2.png"] = {150, 0, 150, 150};
		["ESTDSKINred2.png"] = {150, 0, 150, 150};
		["ESTDSKINyellow2.png"] = {150, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=70798337630461"] = {
		["WSTDSKINblack1.png"] = {0, 0, 150, 150};
		["WSTDSKINbloodmoon1.png"] = {300, 0, 150, 150};
		["WSTDSKINblue1.png"] = {450, 0, 150, 150};
		["WSTDSKINeclipse1.png"] = {0, 150, 150, 150};
		["WSTDSKINember1.png"] = {150, 150, 150, 150};
		["WSTDSKINemerald1.png"] = {300, 150, 150, 150};
		["WSTDSKINfrostbite1.png"] = {450, 150, 150, 150};
		["WSTDSKINgreen1.png"] = {0, 300, 150, 150};
		["WSTDSKINorange1.png"] = {150, 300, 150, 150};
		["WSTDSKINphoenixsky1.png"] = {300, 300, 150, 150};
		["WSTDSKINpurple1.png"] = {0, 450, 150, 150};
		["WSTDSKINred1.png"] = {150, 450, 150, 150};
		["WSTDSKINvioletnight1.png"] = {300, 450, 150, 150};
		["WSTDSKINyellow1.png"] = {450, 450, 150, 150};
		["WSTDSKINbloodmoon2.png"] = {450, 300, 150, 150};
		["WSTDSKINeclipse2.png"] = {450, 300, 150, 150};
		["WSTDSKINphoenixsky2.png"] = {450, 300, 150, 150};
		["WSTDSKINvioletnight2.png"] = {450, 300, 150, 150};
		["WSTDSKINember2.png"] = {450, 300, 150, 150};
		["WSTDSKINblack2.png"] = {150, 0, 150, 150};
		["WSTDSKINblue2.png"] = {150, 0, 150, 150};
		["WSTDSKINemerald2.png"] = {150, 0, 150, 150};
		["WSTDSKINfrostbite2.png"] = {150, 0, 150, 150};
		["WSTDSKINgreen2.png"] = {150, 0, 150, 150};
		["WSTDSKINorange2.png"] = {150, 0, 150, 150};
		["WSTDSKINpurple2.png"] = {150, 0, 150, 150};
		["WSTDSKINred2.png"] = {150, 0, 150, 150};
		["WSTDSKINyellow2.png"] = {150, 0, 150, 150};
	};
	["http://www.roblox.com/asset/?id=95522052665053"] = {
		["Acidum Rifle1.png"] = {0, 0, 150, 150};
		["Acidum Rifle2.png"] = {150, 0, 150, 150};
		["Bazooka1.png"] = {300, 0, 150, 150};
		["Bazooka2.png"] = {450, 0, 150, 150};
		["Bizarre Revolver1.png"] = {600, 0, 150, 150};
		["Bizarre Revolver2.png"] = {0, 150, 150, 150};
		["Cannon1.png"] = {150, 150, 150, 150};
		["Cannon2.png"] = {300, 150, 150, 150};
		["Dragonstorm1.png"] = {450, 150, 150, 150};
		["Dragonstorm2.png"] = {600, 150, 150, 150};
		["Dual Flintlock1.png"] = {0, 300, 150, 150};
		["Dual Flintlock2.png"] = {150, 300, 150, 150};
		["Flintlock1.png"] = {300, 300, 150, 150};
		["Flintlock2.png"] = {450, 300, 150, 150};
		["Kabucha1.png"] = {600, 300, 150, 150};
		["Kabucha2.png"] = {0, 450, 150, 150};
		["Magma Blaster1.png"] = {150, 450, 150, 150};
		["Magma Blaster2.png"] = {300, 450, 150, 150};
		["Musket1.png"] = {450, 450, 150, 150};
		["Musket2.png"] = {600, 450, 150, 150};
		["Refined Slingshot1.png"] = {0, 600, 150, 150};
		["Refined Slingshot2.png"] = {150, 600, 150, 150};
		["Venom Bow1.png"] = {300, 600, 150, 150};
		["Venom Bow2.png"] = {450, 600, 150, 150};
		["Slingshot1.png"] = {600, 600, 150, 150};
		["Slingshot2.png"] = {750, 0, 150, 150};
		["Skull Guitar1.png"] = {750, 150, 150, 150};
		["Skull Guitar2.png"] = {750, 300, 150, 150};
	};
	["http://www.roblox.com/asset/?id=90974005675802"] = {
		["Blaze Ember1.png"] = {0, 0, 150, 150};
		["Blue Icicle Berry1.png"] = {150, 0, 150, 150};
		["Demonic Wisp1.png"] = {300, 0, 150, 150};
		["Dinosaur Bones1.png"] = {0, 150, 150, 150};
		["Dragon Egg1.png"] = {150, 150, 150, 150};
		["Dragon Token (Physical)1.png"] = {300, 150, 150, 150};
		["Dragon Token1.png"] = {300, 150, 150, 150};
		["Fire Flower1.png"] = {0, 300, 150, 150};
		["Green Toad Berry1.png"] = {150, 300, 150, 150};
		["Orange Berry1.png"] = {300, 300, 150, 150};
		["Pink Pig Berry1.png"] = {450, 0, 150, 150};
		["Dragon Token (Tradable)1.png"] = {450, 150, 150, 150};
		["Permanent Dragon Token1.png"] = {450, 150, 150, 150};
		["Dragon Token (West)1.png"] = {450, 150, 150, 150};
		["Dragon Token (East)1.png"] = {450, 150, 150, 150};
		["Purple Jelly Berry1.png"] = {450, 300, 150, 150};
		["Red Cherry Berry1.png"] = {0, 450, 150, 150};
		["White Cloud Berry1.png"] = {150, 450, 150, 150};
		["Yellow Star Berry1.png"] = {300, 450, 150, 150};
	};
	["http://www.roblox.com/asset/?id=115458573551021"] = {
		["Dino Hood1.png"] = {1, 1, 150, 150};
		["Dino Hood2.png"] = {153, 1, 150, 150};
		["Dojo Belt (Black)1.png"] = {305, 1, 150, 150};
		["Dojo Belt (Black)2.png"] = {457, 1, 150, 150};
		["Dojo Belt (Blue)1.png"] = {1, 153, 150, 150};
		["Dojo Belt (Blue)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (Green)1.png"] = {305, 153, 150, 150};
		["Dojo Belt (Green)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (Orange)1.png"] = {457, 153, 150, 150};
		["Dojo Belt (Orange)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (Purple)1.png"] = {1, 305, 150, 150};
		["Dojo Belt (Purple)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (Red)1.png"] = {153, 305, 150, 150};
		["Dojo Belt (Red)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (White)1.png"] = {305, 305, 150, 150};
		["Dojo Belt (White)2.png"] = {153, 153, 150, 150};
		["Dojo Belt (Yellow)1.png"] = {457, 305, 150, 150};
		["Dojo Belt (Yellow)2.png"] = {153, 153, 150, 150};
		["Dragon Mantle1.png"] = {1, 457, 150, 150};
		["Dragon Mantle2.png"] = {153, 457, 150, 150};
		["T-Rex Skull1.png"] = {305, 457, 150, 150};
		["T-Rex Skull2.png"] = {457, 457, 150, 150};
		["Uzoths Cloak1.png"] = {609, 1, 150, 150};
		["Uzoths Cloak2.png"] = {609, 153, 150, 150};
		["Wyvern Helmet1.png"] = {609, 305, 150, 150};
		["Wyvern Helmet2.png"] = {609, 457, 150, 150};
	};
	["http://www.roblox.com/asset/?id=75893818748337"] = {
		["Bisento1.png"] = {1, 1, 150, 150};
		["Bisento2.png"] = {153, 1, 150, 150};
		["Dragon Trident1.png"] = {305, 1, 150, 150};
		["Dragon Trident2.png"] = {457, 1, 150, 150};
		["Dragonheart1.png"] = {1, 153, 150, 150};
		["Dragonheart2.png"] = {153, 153, 150, 150};
		["Monster Magnet1.png"] = {1, 305, 150, 150};
		["Pole (1st Form)1.png"] = {153, 305, 150, 150};
		["Pole (1st Form)2.png"] = {305, 305, 150, 150};
		["Pole (2nd Form)1.png"] = {457, 305, 150, 150};
		["Pole (2nd Form)2.png"] = {1, 457, 150, 150};
		["Saber1.png"] = {457, 457, 150, 150};
		["Saber2.png"] = {609, 1, 150, 150};
		["Shark Saw1.png"] = {609, 153, 150, 150};
		["Shark Saw2.png"] = {609, 305, 150, 150};
		["Soul Cane1.png"] = {609, 457, 150, 150};
		["Soul Cane2.png"] = {1, 609, 150, 150};
		["Trident1.png"] = {153, 609, 150, 150};
		["Trident2.png"] = {305, 609, 150, 150};
		["Volcanic Magnet1.png"] = {457, 609, 150, 150};
	};
	["http://www.roblox.com/asset/?id=111655299754071"] = {
		["2x Boss Drops1.png"] = {1, 1, 150, 150};
		["2x Mastery1.png"] = {153, 1, 150, 150};
		["3x Mythical Scrolls1.png"] = {305, 1, 150, 150};
		["5x Legendary Scrolls1.png"] = {1, 153, 150, 150};
		["Change Race1.png"] = {153, 153, 150, 150};
		["Double Cash1.png"] = {305, 153, 150, 150};
		["Faster Ships1.png"] = {1, 305, 150, 150};
		["Fruit Notifier1.png"] = {153, 305, 150, 150};
		["Fruit Storage1.png"] = {305, 305, 150, 150};
		["Refund Points1.png"] = {457, 1, 150, 150};
		["Reset Bosses1.png"] = {457, 153, 150, 150};
		["[P] Dark Blade1.png"] = {457, 305, 150, 150};
	};
	["http://www.roblox.com/asset/?id=123331217747401"] = {
		["Cursed Dual Katana1.png"] = {1, 1, 150, 150};
		["Cursed Dual Katana2.png"] = {153, 1, 150, 150};
		["Dark Dagger1.png"] = {305, 1, 150, 150};
		["Dark Dagger2.png"] = {457, 1, 150, 150};
		["Dual-Headed Blade1.png"] = {609, 1, 150, 150};
		["Dual-Headed Blade2.png"] = {1, 153, 150, 150};
		["Flail1.png"] = {153, 153, 150, 150};
		["Flail2.png"] = {305, 153, 150, 150};
		["Gravity Blade1.png"] = {457, 153, 150, 150};
		["Gravity Blade2.png"] = {609, 153, 150, 150};
		["Longsword1.png"] = {1, 305, 150, 150};
		["Longsword2.png"] = {153, 305, 150, 150};
		["Iron Mace1.png"] = {305, 305, 150, 150};
		["Iron Mace2.png"] = {457, 305, 150, 150};
		["Midnight Blade1.png"] = {609, 305, 150, 150};
		["Midnight Blade2.png"] = {1, 457, 150, 150};
		["Oroshi1.png"] = {153, 457, 150, 150};
		["Oroshi2.png"] = {305, 457, 150, 150};
		["Pipe1.png"] = {457, 457, 150, 150};
		["Pipe2.png"] = {609, 457, 150, 150};
		["Rengoku1.png"] = {1, 609, 150, 150};
		["Rengoku2.png"] = {153, 609, 150, 150};
		["Saishi1.png"] = {305, 609, 150, 150};
		["Saishi2.png"] = {457, 609, 150, 150};
		["Shizu1.png"] = {609, 609, 150, 150};
		["Shizu2.png"] = {761, 1, 150, 150};
		["True Triple Katana1.png"] = {761, 153, 150, 150};
		["True Triple Katana2.png"] = {761, 305, 150, 150};
		["Tushita1.png"] = {761, 457, 150, 150};
		["Tushita2.png"] = {761, 609, 150, 150};
		["Wardens Sword1.png"] = {1, 761, 150, 150};
		["Wardens Sword2.png"] = {153, 761, 150, 150};
		["Yama1.png"] = {305, 761, 150, 150};
		["Yama2.png"] = {457, 761, 150, 150};
	};
}